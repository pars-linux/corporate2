
From 46a0f831582629612f0ff9707ad1292887f26bff Mon Sep 17 00:00:00 2001
From: Ulrich Dangel <uli@spamt.net>
Date: Fri, 15 Apr 2011 18:22:08 +0200
Subject: [PATCH] [klibc] ipconfig: Escape DHCP options written to /tmp/net-$DEVCICE.conf

DHCP options like domain-name or hostname are written to
/tmp/net-$DEVICE.conf which is typically later used by other scripts to
determine the network configuration. This is done by sourcing the
/tmp/net-$DEVICE.conf file to get all defined variables.

This patch escapes the DHCP options written to /tmp/net-$DEVICE.conf
to prevent arbitrary code execution.

Signed-off-by: Ulrich Dangel <uli@spamt.net>
Reviewed-by: H. Peter Anvin <hpa@zytor.com>
Signed-off-by: maximilian attems <max@stro.at>

Backportted-by: Onur Küçük <onur@pardus.org.tr>


diff -Nur klibc-1.5.15-old/usr/kinit/ipconfig/main.c klibc-1.5.15/usr/kinit/ipconfig/main.c
--- klibc-1.5.15-old/usr/kinit/ipconfig/main.c	2011-06-03 11:32:59.367492068 +0300
+++ klibc-1.5.15/usr/kinit/ipconfig/main.c	2011-06-03 11:36:58.766680597 +0300
@@ -96,6 +96,25 @@
 			dev->hostname, dev->name);
 }
 
+static void write_option(FILE* f, const char* name, const char* chr)
+{
+
+	fprintf(f, "%s='", name);
+	while (*chr) {
+		switch (*chr) {
+			case '!':
+			case '\'':
+				fprintf(f, "'\\%c'", *chr);
+				break;
+			default:
+				fprintf(f, "%c", *chr);
+				break;
+		}
+		++chr;
+	}
+	fprintf(f, "'\n");
+}
+
 static void dump_device_config(struct netdev *dev)
 {
 	char fn[40];
@@ -104,22 +123,22 @@
 	snprintf(fn, sizeof(fn), "/tmp/net-%s.conf", dev->name);
 	f = fopen(fn, "w");
 	if (f) {
-		fprintf(f, "DEVICE=%s\n", dev->name);
-		fprintf(f, "IPV4ADDR=%s\n", my_inet_ntoa(dev->ip_addr));
-		fprintf(f, "IPV4BROADCAST=%s\n",
+		write_option(f, "DEVICE=%s\n", dev->name);
+		write_option(f, "IPV4ADDR=%s\n", my_inet_ntoa(dev->ip_addr));
+		write_option(f, "IPV4BROADCAST=%s\n",
 			my_inet_ntoa(dev->ip_broadcast));
-		fprintf(f, "IPV4NETMASK=%s\n", my_inet_ntoa(dev->ip_netmask));
-		fprintf(f, "IPV4GATEWAY=%s\n", my_inet_ntoa(dev->ip_gateway));
-		fprintf(f, "IPV4DNS0=%s\n",
+		write_option(f, "IPV4NETMASK=%s\n", my_inet_ntoa(dev->ip_netmask));
+		write_option(f, "IPV4GATEWAY=%s\n", my_inet_ntoa(dev->ip_gateway));
+		write_option(f, "IPV4DNS0=%s\n",
 			my_inet_ntoa(dev->ip_nameserver[0]));
-		fprintf(f, "IPV4DNS1=%s\n",
+		write_option(f, "IPV4DNS1=%s\n",
 			my_inet_ntoa(dev->ip_nameserver[1]));
-		fprintf(f, "HOSTNAME=%s\n", dev->hostname);
-		fprintf(f, "DNSDOMAIN=%s\n", dev->dnsdomainname);
-		fprintf(f, "NISDOMAIN=%s\n", dev->nisdomainname);
-		fprintf(f, "ROOTSERVER=%s\n", my_inet_ntoa(dev->ip_server));
-		fprintf(f, "ROOTPATH=%s\n", dev->bootpath);
-		fprintf(f, "filename=\"%s\"\n", dev->filename);
+		write_option(f, "HOSTNAME=%s\n", dev->hostname);
+		write_option(f, "DNSDOMAIN=%s\n", dev->dnsdomainname);
+		write_option(f, "NISDOMAIN=%s\n", dev->nisdomainname);
+		write_option(f, "ROOTSERVER=%s\n", my_inet_ntoa(dev->ip_server));
+		write_option(f, "ROOTPATH=%s\n", dev->bootpath);
+		write_option(f, "filename=\"%s\"\n", dev->filename);
 		fclose(f);
 	}
 }
