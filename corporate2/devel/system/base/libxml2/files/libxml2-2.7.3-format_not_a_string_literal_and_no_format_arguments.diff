diff -Naurp libxml2-2.7.2/debugXML.c libxml2-2.7.2.oden/debugXML.c
--- libxml2-2.7.2/debugXML.c	2008-03-25 16:18:10.000000000 +0100
+++ libxml2-2.7.2.oden/debugXML.c	2008-12-18 15:32:44.000000000 +0100
@@ -141,9 +141,9 @@ xmlCtxtDumpSpaces(xmlDebugCtxtPtr ctxt)
         return;
     if ((ctxt->output != NULL) && (ctxt->depth > 0)) {
         if (ctxt->depth < 50)
-            fprintf(ctxt->output, &ctxt->shift[100 - 2 * ctxt->depth]);
+            fprintf(ctxt->output, "%s", &ctxt->shift[100 - 2 * ctxt->depth]);
         else
-            fprintf(ctxt->output, ctxt->shift);
+            fprintf(ctxt->output, "%s", ctxt->shift);
     }
 }
 
diff -Naurp libxml2-2.7.2/doc/examples/io2.c libxml2-2.7.2.oden/doc/examples/io2.c
--- libxml2-2.7.2/doc/examples/io2.c	2007-01-03 14:07:29.000000000 +0100
+++ libxml2-2.7.2.oden/doc/examples/io2.c	2008-12-18 15:38:33.000000000 +0100
@@ -34,7 +34,7 @@ main(void)
      * for demonstration purposes.
      */
     xmlDocDumpFormatMemory(doc, &xmlbuff, &buffersize, 1);
-    printf((char *) xmlbuff);
+    printf((char *) "%s", xmlbuff);
 
     /*
      * Free associated memory.
diff -Naurp libxml2-2.7.2/xmlschemas.c libxml2-2.7.2.oden/xmlschemas.c
--- libxml2-2.7.2/xmlschemas.c	2008-08-30 16:06:35.000000000 +0200
+++ libxml2-2.7.2.oden/xmlschemas.c	2008-12-18 15:35:56.000000000 +0100
@@ -4274,7 +4274,7 @@ xmlSchemaContentModelDump(xmlSchemaParti
     for (i = 0;((i < depth) && (i < 25));i++)
         shift[2 * i] = shift[2 * i + 1] = ' ';
     shift[2 * i] = shift[2 * i + 1] = 0;
-    fprintf(output, shift);
+    fprintf(output, "%s", shift);
     if (particle->children == NULL) {
 	fprintf(output, "MISSING particle term\n");
 	return;
diff -Naurp libxml2-2.7.2/xpath.c libxml2-2.7.2.oden/xpath.c
--- libxml2-2.7.2/xpath.c	2008-09-01 15:20:35.000000000 +0200
+++ libxml2-2.7.2.oden/xpath.c	2008-12-18 15:34:46.000000000 +0100
@@ -879,7 +879,7 @@ xmlXPathDebugDumpNode(FILE *output, xmlN
         shift[2 * i] = shift[2 * i + 1] = ' ';
     shift[2 * i] = shift[2 * i + 1] = 0;
     if (cur == NULL) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, "Node is NULL !\n");
 	return;
 
@@ -887,7 +887,7 @@ xmlXPathDebugDumpNode(FILE *output, xmlN
 
     if ((cur->type == XML_DOCUMENT_NODE) ||
 	     (cur->type == XML_HTML_DOCUMENT_NODE)) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, " /\n");
     } else if (cur->type == XML_ATTRIBUTE_NODE)
 	xmlDebugDumpAttr(output, (xmlAttrPtr)cur, depth);
@@ -904,7 +904,7 @@ xmlXPathDebugDumpNodeList(FILE *output, 
         shift[2 * i] = shift[2 * i + 1] = ' ';
     shift[2 * i] = shift[2 * i + 1] = 0;
     if (cur == NULL) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, "Node is NULL !\n");
 	return;
 
@@ -927,7 +927,7 @@ xmlXPathDebugDumpNodeSet(FILE *output, x
     shift[2 * i] = shift[2 * i + 1] = 0;
 
     if (cur == NULL) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, "NodeSet is NULL !\n");
 	return;
 
@@ -936,7 +936,7 @@ xmlXPathDebugDumpNodeSet(FILE *output, x
     if (cur != NULL) {
 	fprintf(output, "Set contains %d nodes:\n", cur->nodeNr);
 	for (i = 0;i < cur->nodeNr;i++) {
-	    fprintf(output, shift);
+	    fprintf(output, "%s", shift);
 	    fprintf(output, "%d", i + 1);
 	    xmlXPathDebugDumpNode(output, cur->nodeTab[i], depth + 1);
 	}
@@ -953,13 +953,13 @@ xmlXPathDebugDumpValueTree(FILE *output,
     shift[2 * i] = shift[2 * i + 1] = 0;
 
     if ((cur == NULL) || (cur->nodeNr == 0) || (cur->nodeTab[0] == NULL)) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, "Value Tree is NULL !\n");
 	return;
 
     }
 
-    fprintf(output, shift);
+    fprintf(output, "%s", shift);
     fprintf(output, "%d", i + 1);
     xmlXPathDebugDumpNodeList(output, cur->nodeTab[0]->children, depth + 1);
 }
@@ -974,14 +974,14 @@ xmlXPathDebugDumpLocationSet(FILE *outpu
     shift[2 * i] = shift[2 * i + 1] = 0;
 
     if (cur == NULL) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
 	fprintf(output, "LocationSet is NULL !\n");
 	return;
 
     }
 
     for (i = 0;i < cur->locNr;i++) {
-	fprintf(output, shift);
+	fprintf(output, "%s", shift);
         fprintf(output, "%d : ", i + 1);
 	xmlXPathDebugDumpObject(output, cur->locTab[i], depth + 1);
     }
@@ -1008,7 +1008,7 @@ xmlXPathDebugDumpObject(FILE *output, xm
     shift[2 * i] = shift[2 * i + 1] = 0;
 
 
-    fprintf(output, shift);
+    fprintf(output, "%s", shift);
 
     if (cur == NULL) {
         fprintf(output, "Object is empty (NULL)\n");
@@ -1063,7 +1063,7 @@ xmlXPathDebugDumpObject(FILE *output, xm
 	    if ((cur->user2 == NULL) ||
 		((cur->user2 == cur->user) && (cur->index == cur->index2))) {
 		fprintf(output, "Object is a collapsed range :\n");
-		fprintf(output, shift);
+		fprintf(output, "%s", shift);
 		if (cur->index >= 0)
 		    fprintf(output, "index %d in ", cur->index);
 		fprintf(output, "node\n");
@@ -1071,14 +1071,14 @@ xmlXPathDebugDumpObject(FILE *output, xm
 			              depth + 1);
 	    } else  {
 		fprintf(output, "Object is a range :\n");
-		fprintf(output, shift);
+		fprintf(output, "%s", shift);
 		fprintf(output, "From ");
 		if (cur->index >= 0)
 		    fprintf(output, "index %d in ", cur->index);
 		fprintf(output, "node\n");
 		xmlXPathDebugDumpNode(output, (xmlNodePtr) cur->user,
 			              depth + 1);
-		fprintf(output, shift);
+		fprintf(output, "%s", shift);
 		fprintf(output, "To ");
 		if (cur->index2 >= 0)
 		    fprintf(output, "index %d in ", cur->index2);
@@ -1111,7 +1111,7 @@ xmlXPathDebugDumpStepOp(FILE *output, xm
         shift[2 * i] = shift[2 * i + 1] = ' ';
     shift[2 * i] = shift[2 * i + 1] = 0;
 
-    fprintf(output, shift);
+    fprintf(output, "%s", shift);
     if (op == NULL) {
 	fprintf(output, "Step is NULL\n");
 	return;
@@ -1298,7 +1298,7 @@ xmlXPathDebugDumpCompExpr(FILE *output, 
         shift[2 * i] = shift[2 * i + 1] = ' ';
     shift[2 * i] = shift[2 * i + 1] = 0;
 
-    fprintf(output, shift);
+    fprintf(output, "%s", shift);
 
     fprintf(output, "Compiled Expression : %d elements\n",
 	    comp->nbStep);
diff -p -up libxml2-2.7.3/parser.c~ libxml2-2.7.3/parser.c
--- libxml2-2.7.3/parser.c~	2009-01-17 14:45:35.000000000 +0100
+++ libxml2-2.7.3/parser.c	2009-01-20 10:57:26.000000000 +0100
@@ -489,7 +489,7 @@ xmlFatalErrMsg(xmlParserCtxtPtr ctxt, xm
     if (ctxt != NULL)
 	ctxt->errNo = error;
     __xmlRaiseError(NULL, NULL, NULL, ctxt, NULL, XML_FROM_PARSER, error,
-                    XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, 0, 0, msg);
+                    XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, 0, 0, "%s", msg);
     if (ctxt != NULL) {
 	ctxt->wellFormed = 0;
 	if (ctxt->recovery == 0)
diff -p -up libxml2-2.7.3/valid.c~ libxml2-2.7.3/valid.c
--- libxml2-2.7.3/valid.c~	2008-11-27 15:04:13.000000000 +0100
+++ libxml2-2.7.3/valid.c	2009-01-20 11:06:43.000000000 +0100
@@ -122,7 +122,7 @@ xmlErrValid(xmlValidCtxtPtr ctxt, xmlPar
         __xmlRaiseError(NULL, channel, data,
                         pctxt, NULL, XML_FROM_VALID, error,
                         XML_ERR_ERROR, NULL, 0, NULL, NULL, NULL, 0, 0,
-                        msg);
+                        "%s", msg);
 }
 
 #if defined(LIBXML_VALID_ENABLED) || defined(LIBXML_SCHEMAS_ENABLED)
diff -p -up libxml2-2.7.3/debugXML.c~ libxml2-2.7.3/debugXML.c
--- libxml2-2.7.3/debugXML.c~	2009-01-20 10:51:35.000000000 +0100
+++ libxml2-2.7.3/debugXML.c	2009-01-20 11:13:47.000000000 +0100
@@ -162,7 +162,7 @@ xmlDebugErr(xmlDebugCtxtPtr ctxt, int er
 		    NULL, ctxt->node, XML_FROM_CHECK,
 		    error, XML_ERR_ERROR, NULL, 0,
 		    NULL, NULL, NULL, 0, 0,
-		    msg);
+		    "%s", msg);
 }
 static void
 xmlDebugErr2(xmlDebugCtxtPtr ctxt, int error, const char *msg, int extra)
diff -p -up libxml2-2.7.3/xpath.c~ libxml2-2.7.3/xpath.c
--- libxml2-2.7.3/xpath.c~	2009-01-20 10:51:35.000000000 +0100
+++ libxml2-2.7.3/xpath.c	2009-01-20 11:27:59.000000000 +0100
@@ -334,7 +334,7 @@ xmlXPathErr(xmlXPathParserContextPtr ctx
 			error + XML_XPATH_EXPRESSION_OK - XPATH_EXPRESSION_OK,
 			XML_ERR_ERROR, NULL, 0,
 			NULL, NULL, NULL, 0, 0,
-			xmlXPathErrorMessages[error]);
+			"%s", xmlXPathErrorMessages[error]);
 	return;
     }
     ctxt->error = error;
@@ -345,7 +345,7 @@ xmlXPathErr(xmlXPathParserContextPtr ctx
 			XML_ERR_ERROR, NULL, 0,
 			(const char *) ctxt->base, NULL, NULL,
 			ctxt->cur - ctxt->base, 0,
-			xmlXPathErrorMessages[error]);
+			"%s", xmlXPathErrorMessages[error]);
 	return;
     }
 
@@ -369,7 +369,7 @@ xmlXPathErr(xmlXPathParserContextPtr ctx
 			XML_ERR_ERROR, NULL, 0,
 			(const char *) ctxt->base, NULL, NULL,
 			ctxt->cur - ctxt->base, 0,
-			xmlXPathErrorMessages[error]);
+			"%s", xmlXPathErrorMessages[error]);
     }
 
 }
diff -p -up libxml2-2.7.3/c14n.c~ libxml2-2.7.3/c14n.c
--- libxml2-2.7.3/c14n.c~	2007-01-03 14:07:52.000000000 +0100
+++ libxml2-2.7.3/c14n.c	2009-01-20 11:35:17.000000000 +0100
@@ -234,7 +234,7 @@ xmlC14NErr(xmlC14NCtxPtr ctxt, xmlNodePt
     __xmlRaiseError(NULL, NULL, NULL,
 		    ctxt, node, XML_FROM_C14N, error,
 		    XML_ERR_ERROR, NULL, 0,
-		    NULL, NULL, NULL, 0, 0, msg);
+		    NULL, NULL, NULL, 0, 0, "%s", msg);
 }
 
 /************************************************************************
diff -p -up libxml2-2.7.3/xmlwriter.c~ libxml2-2.7.3/xmlwriter.c
--- libxml2-2.7.3/xmlwriter.c~	2009-01-17 14:45:35.000000000 +0100
+++ libxml2-2.7.3/xmlwriter.c	2009-01-20 12:13:06.000000000 +0100
@@ -129,10 +129,10 @@ xmlWriterErrMsg(xmlTextWriterPtr ctxt, x
     if (ctxt != NULL) {
 	__xmlRaiseError(NULL, NULL, NULL, ctxt->ctxt,
 	            NULL, XML_FROM_WRITER, error, XML_ERR_FATAL,
-		    NULL, 0, NULL, NULL, NULL, 0, 0, msg);
+			NULL, 0, NULL, NULL, NULL, 0, 0, "%s", msg);
     } else {
 	__xmlRaiseError(NULL, NULL, NULL, NULL, NULL, XML_FROM_WRITER, error,
-                    XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, 0, 0, msg);
+                    XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, 0, 0, "%s", msg);
     }
 }
 
diff -p -up libxml2-2.7.3/schematron.c~ libxml2-2.7.3/schematron.c
--- libxml2-2.7.3/schematron.c~	2008-09-25 18:21:06.000000000 +0200
+++ libxml2-2.7.3/schematron.c	2009-01-20 12:37:07.000000000 +0100
@@ -1425,7 +1425,7 @@ xmlSchematronReportSuccess(xmlSchematron
                         (pattern == NULL)?NULL:((const char *) pattern->name),
                         (const char *) path,
                         (const char *) report, 0, 0,
-                        msg);
+                        "%s", msg);
     } else {
 	xmlSchematronReportOutput(ctxt, cur, &msg[0]);
     }
