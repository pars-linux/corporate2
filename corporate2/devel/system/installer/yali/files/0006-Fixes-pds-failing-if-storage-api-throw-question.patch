From 0740c0b72dad1008594e1c67ac0c958e18642234 Mon Sep 17 00:00:00 2001
From: Mete Alpaslan <mete@pardus.org.tr>
Date: Fri, 24 Dec 2010 00:47:09 +0200
Subject: [PATCH 6/6] Fixes pds failing if storage api throw question

PDE needs return value to stop thread however storage api handle disk
states by self and show user to select state what to do it to keep on.
---
 yali/gui/ScrAdmin.py    |   15 +++++++++++----
 yali/gui/ScrDateTime.py |   13 ++++++++++---
 2 files changed, 21 insertions(+), 7 deletions(-)

diff --git a/yali/gui/ScrAdmin.py b/yali/gui/ScrAdmin.py
index 3bc43bf..84dbcde 100644
--- a/yali/gui/ScrAdmin.py
+++ b/yali/gui/ScrAdmin.py
@@ -14,7 +14,7 @@ import gettext
 
 _ = gettext.translation('yali', fallback=True).ugettext
 
-from PyQt4.Qt import QWidget, SIGNAL, QLineEdit
+from PyQt4.Qt import QWidget, SIGNAL, QLineEdit, QTimer
 from pds.thread import PThread
 from pds.gui import PMessageBox, MIDCENTER, CURRENT, OUT
 
@@ -38,7 +38,7 @@ class Widget(QWidget, ScreenWidget):
         self.pass_valid = False
 
         self.pthread = None
-        self.pds_messagebox = PMessageBox(ctx.mainScreen)
+        self.pds_messagebox = PMessageBox(self)
         self.pds_messagebox.enableOverlay()
 
         self.connect(self.ui.pass1, SIGNAL("textChanged(const QString &)"),
@@ -74,7 +74,10 @@ class Widget(QWidget, ScreenWidget):
         self.ui.pass1.setFocus()
 
         if ctx.flags.install_type == ctx.STEP_DEFAULT:
-            self.pthread = PThread(self, self.startInit, self.initFinished)
+            self.pthread = PThread(self, self.startInit, self.dummy)
+
+    def dummy(self):
+        pass
 
     def execute(self):
         ctx.installData.rootPassword = unicode(self.ui.pass1.text())
@@ -90,17 +93,21 @@ class Widget(QWidget, ScreenWidget):
                 else:
                     ctx.mainScreen.step_increment = 1
             else:
-                self.pds_messagebox.busy.busy()
                 self.pds_messagebox.setMessage(_("Storage Devices initialising..."))
                 self.pds_messagebox.animate(start=MIDCENTER, stop=MIDCENTER)
                 ctx.mainScreen.step_increment = 0
                 self.pthread.start()
+                QTimer.singleShot(2, self.startStorageInitialize)
                 return False
 
         return True
 
     def startInit(self):
+        self.pds_messagebox.animate(start=MIDCENTER, stop=MIDCENTER)
+
+    def startStorageInitialize(self):
         ctx.storageInitialized = yali.storage.initialize(ctx.storage, ctx.interface)
+        self.initFinished()
 
     def initFinished(self):
         self.pds_messagebox.animate(start=CURRENT, stop=CURRENT, direction=OUT)
diff --git a/yali/gui/ScrDateTime.py b/yali/gui/ScrDateTime.py
index 8388df0..f489695 100644
--- a/yali/gui/ScrDateTime.py
+++ b/yali/gui/ScrDateTime.py
@@ -67,7 +67,7 @@ class Widget(QWidget, ScreenWidget):
         self.ui.calendarWidget.setDate(QDate.currentDate())
 
         self.pthread = None
-        self.pds_messagebox = PMessageBox(ctx.mainScreen)
+        self.pds_messagebox = PMessageBox(self)
         self.pds_messagebox.enableOverlay()
 
         self.timer.start(1000)
@@ -94,7 +94,10 @@ class Widget(QWidget, ScreenWidget):
         self.timer.start(1000)
 
         if ctx.flags.install_type == ctx.STEP_BASE:
-            self.pthread = PThread(self, self.startInit, self.initFinished)
+            self.pthread = PThread(self, self.startInit, self.dummy)
+
+    def dummy(self):
+        pass
 
     def setTime(self):
         ctx.interface.informationWindow.update(_("Adjusting time settings"))
@@ -134,17 +137,21 @@ class Widget(QWidget, ScreenWidget):
                     ctx.mainScreen.step_increment = 1
                 return True
             else:
-                self.pds_messagebox.busy.busy()
                 self.pds_messagebox.setMessage(_("Storage Devices initialising..."))
                 self.pds_messagebox.animate(start=MIDCENTER, stop=MIDCENTER)
                 ctx.mainScreen.step_increment = 0
                 self.pthread.start()
+                QTimer.singleShot(2, self.startStorageInitialize)
                 return False
 
         return True
 
     def startInit(self):
+        self.pds_messagebox.animate(start=MIDCENTER, stop=MIDCENTER)
+
+    def startStorageInitialize(self):
         ctx.storageInitialized = yali.storage.initialize(ctx.storage, ctx.interface)
+        self.initFinished()
 
     def initFinished(self):
         self.pds_messagebox.animate(start=CURRENT, stop=CURRENT, direction=OUT)
-- 
1.7.3.4

