=== modified file 'configure.in'
--- configure.in	2008-11-04 18:26:23 +0000
+++ configure.in	2008-11-04 18:42:51 +0000
@@ -185,7 +185,8 @@
 
 dnl to pacify those who hate protochain insn
 AC_MSG_CHECKING(if --disable-protochain option is specified)
-AC_ARG_ENABLE(protochain, [  --disable-protochain    disable \"protochain\" insn])
+AC_ARG_ENABLE(protochain,
+AS_HELP_STRING([--disable-protochain],[disable \"protochain\" insn]))
 case "x$enable_protochain" in
 xyes)	enable_protochain=enabled	;;
 xno)	enable_protochain=disabled	;;
@@ -201,7 +202,8 @@
 # SITA support is mutually exclusive with native capture support;
 # "--with-sita" selects SITA support.
 #
-AC_ARG_WITH(sita, [  --with-sita             include SITA support],
+AC_ARG_WITH(sita,
+AS_HELP_STRING([--with-sita],[include SITA support]),
 [
 	if test ! "x$withval" = "xno" ; then
 		AC_DEFINE(SITA,1,[include ACN support])
@@ -222,7 +224,8 @@
 if test -z "$with_pcap" && test "$cross_compiling" = yes; then
 	AC_MSG_ERROR(pcap type not determined when cross-compiling; use --with-pcap=...)
 fi
-AC_ARG_WITH(pcap, [  --with-pcap=TYPE        use packet capture TYPE])
+AC_ARG_WITH(pcap,
+AS_HELP_STRING([--with-pcap=TYPE],[use packet capture TYPE]))
 AC_MSG_CHECKING(packet capture type)
 if test ! -z "$with_pcap" ; then
 	V_PCAP="$withval"
@@ -503,7 +506,8 @@
 fi
 AC_MSG_RESULT($have_socklen_t)
 
-AC_ARG_ENABLE(ipv6, [  --enable-ipv6           build IPv6-capable version @<:@default=yes, if getaddrinfo available@:>@],
+AC_ARG_ENABLE(ipv6,
+AS_HELP_STRING([--enable-ipv6],[build IPv6-capable version @<:@default=yes, if getaddrinfo available@:>@]),
     [],
     [enable_ipv6=ifavailable])
 if test "$enable_ipv6" != "no"; then
@@ -519,14 +523,16 @@
 fi
 
 AC_MSG_CHECKING(whether to build optimizer debugging code)
-AC_ARG_ENABLE(optimizer-dbg, [  --enable-optimizer-dbg  build optimizer debugging code])
+AC_ARG_ENABLE(optimizer-dbg,
+AS_HELP_STRING([--enable-optimizer-dbg],[build optimizer debugging code]))
 if test "$enable_optimizer_dbg" = "yes"; then
 	AC_DEFINE(BDEBUG,1,[Enable optimizer debugging])
 fi
 AC_MSG_RESULT(${enable_optimizer_dbg-no})
 
 AC_MSG_CHECKING(whether to build parser debugging code)
-AC_ARG_ENABLE(yydebug, [  --enable-yydebug        build parser debugging code])
+AC_ARG_ENABLE(yydebug,
+AS_HELP_STRING([--enable-yydebug],[build parser debugging code]))
 if test "$enable_yydebug" = "yes"; then
 	AC_DEFINE(YYDEBUG,1,[Enable parser debugging])
 fi
@@ -544,7 +550,8 @@
 AC_MSG_RESULT($ac_cv_lbl_proc_net_dev)
 
 # Check for Endace DAG card support.
-AC_ARG_WITH([dag], [  --with-dag[[=DIR]]        include Endace DAG support ("yes", "no" or DIR; default="yes" on BSD and Linux if present)],
+AC_ARG_WITH([dag],
+AS_HELP_STRING([--with-dag@<:@=DIR@:>@],[include Endace DAG support @<:@"yes", "no" or DIR; default="yes" on BSD and Linux if present@:>@]),
 [
 	if test "$withval" = no
 	then
@@ -566,14 +573,16 @@
 	want_dag=ifpresent
 ])
 
-AC_ARG_WITH([dag-includes], [  --with-dag-includes=DIR   Endace DAG include directory],
+AC_ARG_WITH([dag-includes],
+AS_HELP_STRING([--with-dag-includes=DIR],[Endace DAG include directory]),
 [
 	# User wants DAG support and has specified a header directory, so use the provided value.
 	want_dag=yes
 	dag_include_dir=$withval
 ],[])
 
-AC_ARG_WITH([dag-libraries], [  --with-dag-libraries=DIR  Endace DAG library directory],
+AC_ARG_WITH([dag-libraries],
+AS_HELP_STRING([--with-dag-libraries=DIR],[Endace DAG library directory]),
 [
 	# User wants DAG support and has specified a library directory, so use the provided value.
 	want_dag=yes
@@ -767,7 +776,8 @@
 	AC_MSG_RESULT(yes)
 fi
 
-AC_ARG_WITH(septel, [  --with-septel[[=DIR]]     include Septel support (located in directory DIR, if supplied).  [default=yes, on Linux, if present]],
+AC_ARG_WITH(septel,
+AS_HELP_STRING([--with-septel@<:@=DIR@:>@],[include Septel support (located in directory DIR, if supplied).  @<:@default=yes, on Linux, if present@:>@]),
 [
 	if test "$withval" = no
 	then
@@ -1038,24 +1048,30 @@
 AC_SUBST(PCAP_SUPPORT_USB)
 AC_SUBST(USB_SRC)
 
-dnl check for bluetooth sniffing support
-case "$host_os" in
-linux*)
-       AC_CHECK_HEADER(bluetooth/bluetooth.h,
-       	[
-	  AC_DEFINE(PCAP_SUPPORT_BT, 1, [target host supports Bluetooth sniffing])
-          BT_SRC=pcap-bt-linux.c
-          AC_MSG_NOTICE(Bluetooth sniffing is supported)
-	],
-	AC_MSG_NOTICE(Bluetooth sniffing is not supported; install bluez-lib devel to enable it)
-       )
-       ;;
-*)
-       AC_MSG_NOTICE(no Bluetooth sniffing support)
-       ;;
-esac
-AC_SUBST(PCAP_SUPPORT_BT)
-AC_SUBST(BT_SRC)
+AC_ARG_ENABLE([bluetooth],
+[AS_HELP_STRING([--enable-bluetooth],[enable bluetooth support @<:@default=yes, if support available@:>@])],
+,enable_bluetooth=yes)
+
+if test "x$enable_bluetooth" != "xno" ; then
+	dnl check for bluetooth sniffing support
+	case "$host_os" in
+	linux*)
+	       AC_CHECK_HEADER(bluetooth/bluetooth.h,
+	       	[
+		  AC_DEFINE(PCAP_SUPPORT_BT, 1, [target host supports Bluetooth sniffing])
+	          BT_SRC=pcap-bt-linux.c
+	          AC_MSG_NOTICE(Bluetooth sniffing is supported)
+		],
+		AC_MSG_NOTICE(Bluetooth sniffing is not supported; install bluez-lib devel to enable it)
+	       )
+	       ;;
+	*)
+	       AC_MSG_NOTICE(no Bluetooth sniffing support)
+	       ;;
+	esac
+	AC_SUBST(PCAP_SUPPORT_BT)
+	AC_SUBST(BT_SRC)
+fi
 
 AC_PROG_INSTALL
 

