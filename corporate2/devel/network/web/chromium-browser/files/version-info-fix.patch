--- a/build/util/lastchange.py
+++ b/build/util/lastchange.py
@@ -19,6 +19,19 @@ class VersionInfo(object):
     self.revision = revision
 
 
+def IsGitSVN(directory):
+  """Return true if the directory is managed by git-svn."""
+
+  # To test whether git-svn has been set up, query the config for any
+  # svn-related configuration.  This command exits with an error code
+  # if there aren't any matches, so ignore its output.
+  status = subprocess.call(['git', 'config', '--get-regexp', '^svn'],
+                           stdout=subprocess.PIPE,
+                           stderr=subprocess.PIPE,
+                           cwd=directory)
+  return status == 0
+
+
 def FetchSVNRevision(command, directory):
   """
   Fetch the Subversion branch and revision for the a given directory
@@ -72,13 +85,16 @@ def FetchVersionInfo(default_lastchange, directory=None):
   """
   version_info = FetchSVNRevision(['svn', 'info'], directory)
   if not version_info and sys.platform in ('linux2',):
-    version_info = FetchSVNRevision(['git', 'svn', 'info'], directory)
+    # Check that this is a git-svn repo before running 'git svn info',
+    # as that will hang if not.
+    if IsGitSVN(directory):
+      version_info = FetchSVNRevision(['git', 'svn', 'info'], directory)
   if not version_info:
     if default_lastchange and os.path.exists(default_lastchange):
       revision = open(default_lastchange, 'r').read().strip()
       version_info = VersionInfo(None, None, revision)
     else:
-      version_info = VersionInfo('', '', '0')
+      version_info = VersionInfo('unknown', '', '0')
   return version_info
 
 
Index: webkit/build/webkit_version.py
diff --git a/webkit/build/webkit_version.py b/webkit/build/webkit_version.py
index 58110727fee9250058c4318e8f50eb402008f741..f488a2ed8242891542925b6aa21e38748268b253 100755
--- a/webkit/build/webkit_version.py
+++ b/webkit/build/webkit_version.py
@@ -45,21 +45,24 @@ def GetWebKitRevision(webkit_dir, version_file):
 
   # "svn info" tells us what we want, but third_party/WebKit does *not*
   # point at the upstream repo.  So instead we run svn info on the directory
-  # containing the versioning file (which is some subdirectory of WebKit),
-  # then strip that path back off of the resulting URL.
+  # containing the versioning file (which is some subdirectory of WebKit).
   version_file_dir = os.path.dirname(version_file)
   version_info = lastchange.FetchVersionInfo(
       default_lastchange=None,
       directory=os.path.join(webkit_dir, version_file_dir))
 
-  # Now compute the real WebKit URL by stripping off the version file
-  # directory from the URL we get out of version_info.
-  # Further, we want to strip off the "http://svn..." from the left.
-  # This is the root URL from the repository.
-  assert version_info.url.startswith(version_info.root)
-  assert version_info.url.endswith(version_file_dir)
-  webkit_url = version_info.url[len(version_info.root):-len(version_file_dir)]
-  webkit_url = webkit_url.strip('/')
+  if (version_info.url.startswith(version_info.root) and
+      version_info.url.endswith(version_file_dir)):
+    # Now compute the real WebKit URL by stripping off the version file
+    # directory from the URL we get out of version_info.
+    # Further, we want to strip off the "http://svn..." from the left.
+    # This is the root URL from the repository.
+    webkit_url = version_info.url[len(version_info.root):-len(version_file_dir)]
+    webkit_url = webkit_url.strip('/')
+  else:
+    # The data isn't as we expect: perhaps they're using git without svn?
+    # Just dump the output directly.
+    webkit_url = version_info.url
 
   return "%s@%s" % (webkit_url, version_info.revision)
 
