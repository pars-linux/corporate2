From 1a5395ba0f4a3914690b74d44a246a702e125f85 Mon Sep 17 00:00:00 2001
From: Dan Williams <dcbw@redhat.com>
Date: Tue, 18 Jan 2011 18:35:35 -0600
Subject: [PATCH 102/122] wired: clear wired secrets tries counter when appropriate

If NM asks for secrets, and then a client calls ActivateDevice on
that same connection, the secrets tries counter doesn't get reset
and NM then thinks we need completely new secrets when we really
don't since the old secrets request isn't valid anymore.

Also ensure the secrets tries gets reset on success and failure
to match behavior of wifi.
---
 src/nm-device-ethernet.c |   37 +++++++++++++++++++++++++++++++++++++
 1 files changed, 37 insertions(+), 0 deletions(-)

diff --git a/src/nm-device-ethernet.c b/src/nm-device-ethernet.c
index 08bbc50..0fd7548 100644
--- a/src/nm-device-ethernet.c
+++ b/src/nm-device-ethernet.c
@@ -487,8 +487,42 @@ constructor (GType type,
 }
 
 static void
+clear_secrets_tries (NMDevice *device)
+{
+	NMActRequest *req;
+	NMConnection *connection;
+
+	req = nm_device_get_act_request (device);
+	if (req) {
+		connection = nm_act_request_get_connection (req);
+		/* Clear wired secrets tries on success, failure, or when deactivating */
+		g_object_set_data (G_OBJECT (connection), WIRED_SECRETS_TRIES, NULL);
+	}
+}
+
+static void
+device_state_changed (NMDevice *device,
+                      NMDeviceState new_state,
+                      NMDeviceState old_state,
+                      NMDeviceStateReason reason,
+                      gpointer user_data)
+{
+
+	switch (new_state) {
+	case NM_DEVICE_STATE_ACTIVATED:
+	case NM_DEVICE_STATE_FAILED:
+	case NM_DEVICE_STATE_DISCONNECTED:
+		clear_secrets_tries (device);
+		break;
+	default:
+		break;
+	}
+}
+
+static void
 nm_device_ethernet_init (NMDeviceEthernet * self)
 {
+	g_signal_connect (self, "state-changed", G_CALLBACK (device_state_changed), NULL);
 }
 
 static gboolean
@@ -1751,6 +1785,9 @@ real_deactivate_quickly (NMDevice *device)
 	NMDeviceEthernet *self = NM_DEVICE_ETHERNET (device);
 	NMDeviceEthernetPrivate *priv = NM_DEVICE_ETHERNET_GET_PRIVATE (self);
 
+	/* Clear wired secrets tries when deactivating */
+	clear_secrets_tries (device);
+
 	if (priv->pending_ip4_config) {
 		g_object_unref (priv->pending_ip4_config);
 		priv->pending_ip4_config = NULL;
-- 
1.7.3.4

