diff -up linux-2.6.33.noarch/drivers/gpu/drm/i915/intel_dp.c.dave linux-2.6.33.noarch/drivers/gpu/drm/i915/intel_dp.c
--- linux-2.6.33.noarch/drivers/gpu/drm/i915/intel_dp.c.dave	2010-06-28 09:50:36.000000000 +1000
+++ linux-2.6.33.noarch/drivers/gpu/drm/i915/intel_dp.c	2010-06-28 09:53:24.000000000 +1000
@@ -135,6 +135,12 @@ intel_dp_link_required(struct drm_device
 }
 
 static int
+intel_dp_max_data_rate(int max_link_clock, int max_lanes)
+{
+	return (max_link_clock * max_lanes * 8) / 10;
+}
+
+static int
 intel_dp_mode_valid(struct drm_connector *connector,
 		    struct drm_display_mode *mode)
 {
@@ -144,7 +150,7 @@ intel_dp_mode_valid(struct drm_connector
 	int max_lanes = intel_dp_max_lane_count(intel_encoder);
 
 	if (intel_dp_link_required(connector->dev, intel_encoder, mode->clock)
-			> max_link_clock * max_lanes)
+			> intel_dp_max_data_rate(max_link_clock, max_lanes))
 		return MODE_CLOCK_HIGH;
 
 	if (mode->clock < 10000)
@@ -505,7 +511,7 @@ intel_dp_mode_fixup(struct drm_encoder *
 
 	for (lane_count = 1; lane_count <= max_lane_count; lane_count <<= 1) {
 		for (clock = 0; clock <= max_clock; clock++) {
-			int link_avail = intel_dp_link_clock(bws[clock]) * lane_count;
+			int link_avail = intel_dp_max_data_rate(intel_dp_link_clock(bws[clock]), lane_count);
 
 			if (intel_dp_link_required(encoder->dev, intel_encoder, mode->clock)
 					<= link_avail) {
