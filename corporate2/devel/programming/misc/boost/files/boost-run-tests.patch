--- tools/regression/src/run_tests.sh	2007-11-15 17:31:06.000000000 +0100
+++ tools/regression/src/run_tests.sh.oden	2008-05-20 13:56:25.000000000 +0200
@@ -15,7 +15,7 @@
 # This can be either a non-exitent directory or an already complete Boost
 # source tree.
 #
-boost_root="$HOME/CVSROOTs/Boost/boost_regression"
+boost_root="/usr/src/redhat/BUILD/boost_1_35_0"
 
 #
 # Wether to fetch the most current Boost code from CVS (yes/no):
@@ -42,17 +42,18 @@ test_tools=gcc
 toolset=gcc
 
 #
-# "comment_path" is the path to an html-file describing the test environment.
-# The content of this file will be embedded in the status pages being produced.
-#
-comment_path="$boost_root/../regression_comment.html"
-#
 # "test_dir" is the relative path to the directory to run the tests in,
 # defaults to "status" and runs all the tests, but could be a sub-directory
 # for example "libs/regex/test" to run the regex tests alone.
 #
 test_dir="status"
 
+#
+# "comment_path" is the path to an html-file describing the test environment.
+# The content of this file will be embedded in the status pages being produced.
+#
+comment_path="$boost_root/$test_dir/regression_comment.html"
+
 
 ### DEFAULTS ARE OK FOR THESE.
 
@@ -71,6 +72,9 @@ exe_suffix=
 #
 bjam="$boost_root/tools/jam/src/bin/bjam$exe_suffix"
 
+# bjam options
+bjam_flags="--layout=system variant=release -sICU_PATH=/usr --user-config=$boost_root/user-config.jam"
+
 #
 # "process_jam_log", and "compiler_status" paths to built helper programs:
 # The location of the executables of the regression help programs. These
@@ -98,6 +102,14 @@ else
 fi
 export BOOST_BUILD_PATH
 
+# For shared objects.
+old_ld_library_path=$LD_LIBRARY_PATH
+old_ld_run_path=$LD_RUN_PATH
+LD_LIBRARY_PATH="$boost_root/stage/lib:$old_ld_library_path"
+LD_RUN_PATH="$boost_root/stage/lib:$old_ld_run_path"
+export LD_LIBRARY_PATH
+export LD_RUN_PATH
+
 #
 # STEP 0:
 #
@@ -126,12 +138,15 @@ fi
 # STEP 1:
 # rebuild bjam if required:
 #
-echo building bjam:
-cd "$boost_root/tools/jam/src" && \
-LOCATE_TARGET=bin sh ./build.sh
-if test $? != 0 ; then
-    echo "bjam build failed."
-    exit 256
+echo "finding or building bjam":
+if test ! -f "$bjam" ; then
+  echo "building bjam":
+    cd "$boost_root/tools/jam/src" && \
+    LOCATE_TARGET=bin sh ./build.sh
+    if test $? != 0 ; then
+      echo "bjam build failed."
+      exit 256
+    fi
 fi
 
 #
@@ -139,8 +154,7 @@ fi
 # rebuild the regression test helper programs if required:
 #
 echo building regression test helper programs:
-cd "$boost_root/tools/regression/build" && \
-"$bjam" $toolset release
+cd "$boost_root/tools/regression/build" && "$bjam" $bjam_flags $toolset
 if test $? != 0 ; then
     echo "helper program build failed."
     exit 256
@@ -158,7 +172,9 @@ for tool in $test_tools ; do
 #
 echo running the $tool regression tests:
 cd "$boost_root/$test_dir"
-"$bjam" $tool --dump-tests 2>&1 | tee regress.log
+echo "<p> begin time: " `date` "</p>" >> "$comment_path"
+"$bjam" $bjam_flags $tool --dump-tests 2>&1 | tee regress.log
+echo "<p> end time: " `date` "</p>" >> "$comment_path"
 
 #
 # STEP 4:
@@ -185,6 +201,12 @@ if test $? != 0 ; then
     exit 256
 fi
 
+# cleanup
+LD_LIBRARY_PATH="$old_ld_library_path"
+LD_RUN_PATH="$old_ld_run_path"
+export LD_LIBRARY_PATH
+export LD_RUN_PATH
+
 echo "done!"
 
 
