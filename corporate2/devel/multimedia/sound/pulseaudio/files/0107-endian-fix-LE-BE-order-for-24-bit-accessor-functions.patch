From 88181bec9544ed038b806d8ef1604f2535263efc Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Fri, 1 May 2009 04:13:15 +0200
Subject: [PATCH 107/127] endian: fix LE/BE order for 24 bit accessor functions

---
 src/pulsecore/endianmacros.h |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pulsecore/endianmacros.h b/src/pulsecore/endianmacros.h
index 2257937..2b18cf8 100644
--- a/src/pulsecore/endianmacros.h
+++ b/src/pulsecore/endianmacros.h
@@ -45,27 +45,27 @@
 #define PA_UINT32_SWAP(x) ( (uint32_t) ( ((uint32_t) (x) >> 24) | ((uint32_t) (x) << 24) | (((uint32_t) (x) & 0xFF00) << 8) | ((((uint32_t) (x)) >> 8) & 0xFF00) ) )
 #endif
 
-static inline uint32_t PA_READ24LE(const uint8_t *p) {
+static inline uint32_t PA_READ24BE(const uint8_t *p) {
     return
         ((uint32_t) p[0] << 16) |
         ((uint32_t) p[1] << 8) |
         ((uint32_t) p[2]);
 }
 
-static inline uint32_t PA_READ24BE(const uint8_t *p) {
+static inline uint32_t PA_READ24LE(const uint8_t *p) {
     return
         ((uint32_t) p[2] << 16) |
         ((uint32_t) p[1] << 8) |
         ((uint32_t) p[0]);
 }
 
-static inline void PA_WRITE24LE(uint8_t *p, uint32_t u) {
+static inline void PA_WRITE24BE(uint8_t *p, uint32_t u) {
     p[0] = (uint8_t) (u >> 16);
     p[1] = (uint8_t) (u >> 8);
     p[2] = (uint8_t) u;
 }
 
-static inline void PA_WRITE24BE(uint8_t *p, uint32_t u) {
+static inline void PA_WRITE24LE(uint8_t *p, uint32_t u) {
     p[2] = (uint8_t) (u >> 16);
     p[1] = (uint8_t) (u >> 8);
     p[0] = (uint8_t) u;
-- 
1.6.3

