Index: libavformat/oggdec.c
===================================================================
--- libavformat/oggdec.c	(revision 16797)
+++ libavformat/oggdec.c	(working copy)
@@ -195,8 +195,11 @@
     return 0;
 }
 
+/**
+ * @param cont Force the continuation flag
+ */
 static int
-ogg_read_page (AVFormatContext * s, int *str)
+ogg_read_page (AVFormatContext * s, int *str, int cont)
 {
     ByteIOContext *bc = s->pb;
     struct ogg *ogg = s->priv_data;
@@ -265,7 +268,7 @@
     for (i = 0; i < nsegs; i++)
         size += os->segments[i];
 
-    if (flags & OGG_FLAG_CONT){
+    if (cont || flags & OGG_FLAG_CONT){
         if (!os->psize){
             while (os->segp < os->nsegs){
                 int seg = os->segments[os->segp++];
@@ -316,7 +319,7 @@
         idx = ogg->curidx;
 
         while (idx < 0){
-            if (ogg_read_page (s, &idx) < 0)
+            if (ogg_read_page (s, &idx, idx==-2) < 0)
                 return -1;
         }
 
@@ -353,7 +356,7 @@
         }
 
         if (!complete && os->segp == os->nsegs){
-            ogg->curidx = -1;
+            ogg->curidx = -2;  /* Expect continuation on next page */
         }
     }while (!complete);
 
@@ -455,7 +458,7 @@
     ogg_save (s);
     url_fseek (s->pb, end, SEEK_SET);
 
-    while (!ogg_read_page (s, &i)){
+    while (!ogg_read_page (s, &i, 0)){
         if (ogg->streams[i].granule != -1 && ogg->streams[i].granule != 0 &&
             ogg->streams[i].codec)
             idx = i;
@@ -548,7 +551,7 @@
     int64_t pts = AV_NOPTS_VALUE;
     int i;
     url_fseek(bc, *pos_arg, SEEK_SET);
-    while (url_ftell(bc) < pos_limit && !ogg_read_page (s, &i)) {
+    while (url_ftell(bc) < pos_limit && !ogg_read_page (s, &i, 0)) {
         if (ogg->streams[i].granule != -1 && ogg->streams[i].granule != 0 &&
             ogg->streams[i].codec && i == stream_index) {
             pts = ogg_gptopts(s, i, ogg->streams[i].granule);
