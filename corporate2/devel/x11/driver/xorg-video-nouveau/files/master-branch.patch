diff --git a/configure.ac b/configure.ac
index f5df8ad..1c39923 100644
--- a/configure.ac
+++ b/configure.ac
@@ -22,7 +22,7 @@
 
 AC_PREREQ(2.57)
 AC_INIT([xf86-video-nouveau],
-        0.0.15,
+        0.0.16,
         [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
         xf86-video-nouveau)
 
@@ -81,6 +81,14 @@ sdkdir=$(pkg-config --variable=sdkdir xorg-server)
 # Checks for libraries.
 PKG_CHECK_MODULES([PCIACCESS], [pciaccess >= 0.10])
 
+PKG_CHECK_MODULES(LIBUDEV, [libudev], [LIBUDEV=yes], [LIBUDEV=no])
+if test "x$LIBUDEV" = xyes; then
+	AC_DEFINE(HAVE_LIBUDEV, 1, [libudev support])
+fi
+AM_CONDITIONAL(LIBUDEV, [ test "x$LIBUDEV" = "xyes" ] )
+AC_SUBST([LIBUDEV_CFLAGS])
+AC_SUBST([LIBUDEV_LIBS])
+
 # Checks for header files.
 AC_HEADER_STDC
 
diff --git a/src/Makefile.am b/src/Makefile.am
index b5d287e..9340c45 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -23,9 +23,10 @@
 # -avoid-version prevents gratuitous .0.0.0 version numbers on the end
 # _ladir passes a dummy rpath to libtool so the thing will actually link
 # TODO: -nostdlib/-Bstatic/-lgcc platform magic, not installing the .a, etc.
-AM_CFLAGS = @XORG_CFLAGS@ @LIBDRM_NOUVEAU_CFLAGS@
+AM_CFLAGS = @XORG_CFLAGS@ @LIBUDEV_CFLAGS@ @LIBDRM_NOUVEAU_CFLAGS@
 nouveau_drv_la_LTLIBRARIES = nouveau_drv.la
-nouveau_drv_la_LDFLAGS = -module -avoid-version @LIBDRM_NOUVEAU_LIBS@
+nouveau_drv_la_LDFLAGS = -module -avoid-version @LIBDRM_NOUVEAU_LIBS@ \
+			 @LIBUDEV_LIBS@
 nouveau_drv_ladir = @moduledir@/drivers
 
 nouveau_drv_la_SOURCES = \
diff --git a/src/drmmode_display.c b/src/drmmode_display.c
index df881da..9b5d52d 100644
--- a/src/drmmode_display.c
+++ b/src/drmmode_display.c
@@ -38,12 +38,19 @@
 #include "X11/Xatom.h"
 
 #include <sys/ioctl.h>
+#ifdef HAVE_LIBUDEV
+#include "libudev.h"
+#endif
 
 typedef struct {
     int fd;
     uint32_t fb_id;
     drmModeResPtr mode_res;
     int cpp;
+#ifdef HAVE_LIBUDEV
+    struct udev_monitor *uevent_monitor;
+    InputHandlerProc uevent_handler;
+#endif
 } drmmode_rec, *drmmode_ptr;
 
 typedef struct {
@@ -286,7 +293,7 @@ drmmode_set_mode_major(xf86CrtcPtr crtc, DisplayModePtr mode,
 	if (!xf86CrtcRotate(crtc))
 		return FALSE;
 
-	output_ids = xcalloc(sizeof(uint32_t), xf86_config->num_output);
+	output_ids = calloc(sizeof(uint32_t), xf86_config->num_output);
 	if (!output_ids)
 		return FALSE;
 
@@ -314,7 +321,7 @@ drmmode_set_mode_major(xf86CrtcPtr crtc, DisplayModePtr mode,
 
 	ret = drmModeSetCrtc(drmmode->fd, drmmode_crtc->mode_crtc->crtc_id,
 			     fb_id, x, y, output_ids, output_count, &kmode);
-	xfree(output_ids);
+	free(output_ids);
 
 	if (ret) {
 		xf86DrvMsg(crtc->scrn->scrnIndex, X_ERROR,
@@ -639,10 +646,10 @@ drmmode_output_destroy(xf86OutputPtr output)
 		drmModeFreePropertyBlob(drmmode_output->edid_blob);
 	for (i = 0; i < drmmode_output->num_props; i++) {
 		drmModeFreeProperty(drmmode_output->props[i].mode_prop);
-		xfree(drmmode_output->props[i].atoms);
+		free(drmmode_output->props[i].atoms);
 	}
 	drmModeFreeConnector(drmmode_output->mode_output);
-	xfree(drmmode_output);
+	free(drmmode_output);
 	output->driver_private = NULL;
 }
 
@@ -700,7 +707,7 @@ drmmode_output_create_resources(xf86OutputPtr output)
 	uint32_t value;
 	int i, j, err;
 
-	drmmode_output->props = xcalloc(mode_output->count_props, sizeof(drmmode_prop_rec));
+	drmmode_output->props = calloc(mode_output->count_props, sizeof(drmmode_prop_rec));
 	if (!drmmode_output->props)
 		return;
 
@@ -727,7 +734,7 @@ drmmode_output_create_resources(xf86OutputPtr output)
 			INT32 range[2];
 
 			p->num_atoms = 1;
-			p->atoms = xcalloc(p->num_atoms, sizeof(Atom));
+			p->atoms = calloc(p->num_atoms, sizeof(Atom));
 			if (!p->atoms)
 				continue;
 			p->atoms[0] = MakeAtom(drmmode_prop->name, strlen(drmmode_prop->name), TRUE);
@@ -750,7 +757,7 @@ drmmode_output_create_resources(xf86OutputPtr output)
 			}
 		} else if (drmmode_prop->flags & DRM_MODE_PROP_ENUM) {
 			p->num_atoms = drmmode_prop->count_enums + 1;
-			p->atoms = xcalloc(p->num_atoms, sizeof(Atom));
+			p->atoms = calloc(p->num_atoms, sizeof(Atom));
 			if (!p->atoms)
 				continue;
 			p->atoms[0] = MakeAtom(drmmode_prop->name, strlen(drmmode_prop->name), TRUE);
@@ -962,7 +969,7 @@ drmmode_output_init(ScrnInfoPtr pScrn, drmmode_ptr drmmode, int num)
 		return;
 	}
 
-	drmmode_output = xcalloc(sizeof(drmmode_output_private_rec), 1);
+	drmmode_output = calloc(sizeof(drmmode_output_private_rec), 1);
 	if (!drmmode_output) {
 		xf86OutputDestroy(output);
 		drmModeFreeConnector(koutput);
@@ -1047,9 +1054,9 @@ drmmode_xf86crtc_resize(ScrnInfoPtr scrn, int width, int height)
 	}
 
 	if (pNv->ShadowPtr) {
-		xfree(pNv->ShadowPtr);
+		free(pNv->ShadowPtr);
 		pNv->ShadowPitch = pitch;
-		pNv->ShadowPtr = xalloc(pNv->ShadowPitch * height);
+		pNv->ShadowPtr = malloc(pNv->ShadowPitch * height);
 	}
 
 	ppix = screen->GetScreenPixmap(screen);
@@ -1169,3 +1176,79 @@ drmmode_cursor_init(ScreenPtr pScreen)
 	return xf86_cursors_init(pScreen, size, size, flags);
 }
 
+#ifdef HAVE_LIBUDEV
+static drmmode_ptr
+drmmode_from_scrn(ScrnInfoPtr scrn)
+{
+	xf86CrtcConfigPtr xf86_config = XF86_CRTC_CONFIG_PTR(scrn);
+	drmmode_crtc_private_ptr drmmode_crtc;
+
+	drmmode_crtc = xf86_config->crtc[0]->driver_private;
+	return drmmode_crtc->drmmode;
+}
+
+static void
+drmmode_handle_uevents(int fd, void *closure)
+{
+	ScrnInfoPtr scrn = closure;
+	drmmode_ptr drmmode = drmmode_from_scrn(scrn);
+	struct udev_device *dev;
+
+	dev = udev_monitor_receive_device(drmmode->uevent_monitor);
+	if (!dev)
+		return;
+
+	RRGetInfo(screenInfo.screens[scrn->scrnIndex], TRUE);
+	udev_device_unref(dev);
+}
+#endif
+
+void
+drmmode_uevent_init(ScrnInfoPtr scrn)
+{
+#ifdef HAVE_LIBUDEV
+	drmmode_ptr drmmode = drmmode_from_scrn(scrn);
+	struct udev *u;
+	struct udev_monitor *mon;
+
+	u = udev_new();
+	if (!u)
+		return;
+	mon = udev_monitor_new_from_netlink(u, "udev");
+	if (!mon) {
+		udev_unref(u);
+		return;
+	}
+
+	if (udev_monitor_filter_add_match_subsystem_devtype(mon,
+							    "drm",
+							    "drm_minor") < 0 ||
+	    udev_monitor_enable_receiving(mon) < 0) {
+		udev_monitor_unref(mon);
+		udev_unref(u);
+		return;
+	}
+
+	drmmode->uevent_handler =
+		xf86AddGeneralHandler(udev_monitor_get_fd(mon),
+				      drmmode_handle_uevents, scrn);
+
+	drmmode->uevent_monitor = mon;
+#endif
+}
+
+void
+drmmode_uevent_fini(ScrnInfoPtr scrn)
+{
+#ifdef HAVE_LIBUDEV
+	drmmode_ptr drmmode = drmmode_from_scrn(scrn);
+
+	if (drmmode->uevent_handler) {
+		struct udev *u = udev_monitor_get_udev(drmmode->uevent_monitor);
+		xf86RemoveGeneralHandler(drmmode->uevent_handler);
+
+		udev_monitor_unref(drmmode->uevent_monitor);
+		udev_unref(u);
+	}
+#endif
+}
diff --git a/src/nouveau_class.h b/src/nouveau_class.h
index a701b9d..c03e633 100644
--- a/src/nouveau_class.h
+++ b/src/nouveau_class.h
@@ -735,6 +735,45 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50_MEMORY_TO_MEMORY_FORMAT_OFFSET_OUT_HIGH					0x0000023c
 
 
+#define NVC0_MEMORY_TO_MEMORY_FORMAT							0x00009039
+
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_NOP						0x00000100
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_SERIALIZE						0x00000110
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_MODE_IN					0x00000204
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_PITCH_IN					0x00000208
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_HEIGHT_IN					0x0000020c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_DEPTH_IN					0x00000210
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_IN_Z				0x00000214
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_MODE_OUT					0x00000220
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_PITCH_OUT					0x00000224
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_HEIGHT_OUT					0x00000228
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_DEPTH_OUT					0x0000022c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_OUT_Z				0x00000230
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_OFFSET_OUT_HIGH					0x00000238
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_OFFSET_OUT_LOW					0x0000023c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC						0x00000300
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_PUSH					(1 <<  0)
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_LINEAR_IN					(1 <<  4)
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_LINEAR_OUT					(1 <<  8)
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_NOTIFY					(1 << 13)
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_INC_SHIFT					20
+#define   NVC0_MEMORY_TO_MEMORY_FORMAT_EXEC_INC_MASK					0x00f00000
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_DATA						0x00000304
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_OFFSET_IN_HIGH					0x0000030c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_OFFSET_IN_LOW					0x00000310
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_PITCH_IN						0x00000314
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_PITCH_OUT						0x00000318
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_LINE_LENGTH_IN					0x0000031c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_LINE_COUNT					0x00000320
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_NOTIFY_ADDRESS_HIGH				0x0000032c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_NOTIFY_ADDRESS_LOW				0x00000330
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_NOTIFY						0x00000334
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_IN_X				0x00000344
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_IN_Y				0x00000348
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_OUT_X				0x0000034c
+#define  NVC0_MEMORY_TO_MEMORY_FORMAT_TILING_POSITION_OUT_Y				0x00000350
+
+
 #define NV01_MEMORY_LOCAL_BANKED							0x0000003d
 
 
@@ -7698,7 +7737,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_DMA_TIC								0x000001a0
 #define  NV50TCL_DMA_TEXTURE								0x000001a4
 #define  NV50TCL_DMA_STRMOUT								0x000001a8
-#define  NV50TCL_DMA_UNK01AC								0x000001ac
+#define  NV50TCL_DMA_CLIPID								0x000001ac
 #define  NV50TCL_DMA_COLOR(x)								(0x000001c0+((x)*4))
 #define  NV50TCL_DMA_COLOR__SIZE							0x00000008
 #define  NV50TCL_RT_ADDRESS_HIGH(x)							(0x00000200+((x)*32))
@@ -7915,8 +7954,20 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_DEPTH_RANGE_FAR__SIZE							0x00000010
 #define  NV50TCL_VIEWPORT_CLIP_HORIZ(x)							(0x00000d00+((x)*8))
 #define  NV50TCL_VIEWPORT_CLIP_HORIZ__SIZE						0x00000008
+#define   NV50TCL_VIEWPORT_CLIP_HORIZ_MIN_SHIFT						0
+#define   NV50TCL_VIEWPORT_CLIP_HORIZ_MIN_MASK						0x0000ffff
+#define   NV50TCL_VIEWPORT_CLIP_HORIZ_MAX_SHIFT						16
+#define   NV50TCL_VIEWPORT_CLIP_HORIZ_MAX_MASK						0xffff0000
 #define  NV50TCL_VIEWPORT_CLIP_VERT(x)							(0x00000d04+((x)*8))
 #define  NV50TCL_VIEWPORT_CLIP_VERT__SIZE						0x00000008
+#define   NV50TCL_VIEWPORT_CLIP_VERT_MIN_SHIFT						0
+#define   NV50TCL_VIEWPORT_CLIP_VERT_MIN_MASK						0x0000ffff
+#define   NV50TCL_VIEWPORT_CLIP_VERT_MAX_SHIFT						16
+#define   NV50TCL_VIEWPORT_CLIP_VERT_MAX_MASK						0xffff0000
+#define  NV50TCL_CLIPID_REGION_HORIZ(x)							(0x00000d40+((x)*8))
+#define  NV50TCL_CLIPID_REGION_HORIZ__SIZE						0x00000004
+#define  NV50TCL_CLIPID_REGION_VERT(x)							(0x00000d44+((x)*8))
+#define  NV50TCL_CLIPID_REGION_VERT__SIZE						0x00000004
 #define  NV50TCL_VERTEX_BUFFER_FIRST							0x00000d74
 #define  NV50TCL_VERTEX_BUFFER_COUNT							0x00000d78
 #define  NV50TCL_CLEAR_COLOR(x)								(0x00000d80+((x)*4))
@@ -7974,14 +8025,16 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_GP_ADDRESS_LOW								0x00000f74
 #define  NV50TCL_VP_ADDRESS_HIGH							0x00000f7c
 #define  NV50TCL_VP_ADDRESS_LOW								0x00000f80
-#define  NV50TCL_UNK0F84_ADDRESS_HIGH							0x00000f84
-#define  NV50TCL_UNK0F84_ADDRESS_LOW							0x00000f88
+#define  NV50TCL_VERTEX_RUNOUT_HIGH							0x00000f84
+#define  NV50TCL_VERTEX_RUNOUT_LOW							0x00000f88
 #define  NV50TCL_DEPTH_BOUNDS(x)							(0x00000f9c+((x)*4))
 #define  NV50TCL_DEPTH_BOUNDS__SIZE							0x00000002
 #define  NV50TCL_FP_ADDRESS_HIGH							0x00000fa4
 #define  NV50TCL_FP_ADDRESS_LOW								0x00000fa8
 #define  NV50TCL_MSAA_MASK(x)								(0x00000fbc+((x)*4))
 #define  NV50TCL_MSAA_MASK__SIZE							0x00000004
+#define  NV50TCL_CLIPID_ADDRESS_HIGH							0x00000fcc
+#define  NV50TCL_CLIPID_ADDRESS_LOW							0x00000fd0
 #define  NV50TCL_ZETA_ADDRESS_HIGH							0x00000fe0
 #define  NV50TCL_ZETA_ADDRESS_LOW							0x00000fe4
 #define  NV50TCL_ZETA_FORMAT								0x00000fe8
@@ -8111,37 +8164,45 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define   NV50TCL_BLEND_EQUATION_RGB_FUNC_SUBTRACT					0x0000800a
 #define   NV50TCL_BLEND_EQUATION_RGB_FUNC_REVERSE_SUBTRACT				0x0000800b
 #define  NV50TCL_BLEND_FUNC_SRC_RGB							0x00001344
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ZERO						0x00000000
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE						0x00000001
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_COLOR						0x00000300
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_COLOR				0x00000301
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA						0x00000302
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_ALPHA				0x00000303
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_DST_ALPHA						0x00000304
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_ALPHA				0x00000305
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_DST_COLOR						0x00000306
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_COLOR				0x00000307
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA_SATURATE					0x00000308
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_CONSTANT_COLOR					0x00008001
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_COLOR				0x00008002
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_CONSTANT_ALPHA					0x00008003
-#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_ALPHA				0x00008004
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ZERO						0x00004000
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE						0x00004001
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_COLOR						0x00004300
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA						0x00004302
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_DST_ALPHA						0x00004304
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_DST_COLOR						0x00004306
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA_SATURATE					0x00004308
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_CONSTANT_COLOR					0x0000c001
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC1_COLOR						0x0000c900
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_SRC1_ALPHA						0x0000c902
+#define   NV50TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
 #define  NV50TCL_BLEND_FUNC_DST_RGB							0x00001348
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ZERO						0x00000000
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE						0x00000001
-#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_COLOR						0x00000300
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_COLOR				0x00000301
-#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA						0x00000302
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_ALPHA				0x00000303
-#define   NV50TCL_BLEND_FUNC_DST_RGB_DST_ALPHA						0x00000304
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_ALPHA				0x00000305
-#define   NV50TCL_BLEND_FUNC_DST_RGB_DST_COLOR						0x00000306
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_COLOR				0x00000307
-#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA_SATURATE					0x00000308
-#define   NV50TCL_BLEND_FUNC_DST_RGB_CONSTANT_COLOR					0x00008001
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_COLOR				0x00008002
-#define   NV50TCL_BLEND_FUNC_DST_RGB_CONSTANT_ALPHA					0x00008003
-#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_ALPHA				0x00008004
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ZERO						0x00004000
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE						0x00004001
+#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_COLOR						0x00004300
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA						0x00004302
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NV50TCL_BLEND_FUNC_DST_RGB_DST_ALPHA						0x00004304
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NV50TCL_BLEND_FUNC_DST_RGB_DST_COLOR						0x00004306
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA_SATURATE					0x00004308
+#define   NV50TCL_BLEND_FUNC_DST_RGB_CONSTANT_COLOR					0x0000c001
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NV50TCL_BLEND_FUNC_DST_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC1_COLOR						0x0000c900
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NV50TCL_BLEND_FUNC_DST_RGB_SRC1_ALPHA						0x0000c902
+#define   NV50TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
 #define  NV50TCL_BLEND_EQUATION_ALPHA							0x0000134c
 #define   NV50TCL_BLEND_EQUATION_ALPHA_FUNC_ADD						0x00008006
 #define   NV50TCL_BLEND_EQUATION_ALPHA_MIN						0x00008007
@@ -8149,37 +8210,45 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define   NV50TCL_BLEND_EQUATION_ALPHA_FUNC_SUBTRACT					0x0000800a
 #define   NV50TCL_BLEND_EQUATION_ALPHA_FUNC_REVERSE_SUBTRACT				0x0000800b
 #define  NV50TCL_BLEND_FUNC_SRC_ALPHA							0x00001350
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ZERO						0x00000000
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE						0x00000001
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_COLOR					0x00000300
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_COLOR				0x00000301
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA					0x00000302
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_ALPHA				0x00000303
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_DST_ALPHA					0x00000304
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_ALPHA				0x00000305
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_DST_COLOR					0x00000306
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_COLOR				0x00000307
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA_SATURATE				0x00000308
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_COLOR					0x00008001
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x00008002
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_ALPHA					0x00008003
-#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x00008004
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ZERO						0x00004000
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE						0x00004001
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_COLOR					0x00004300
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA					0x00004302
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_DST_ALPHA					0x00004304
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_DST_COLOR					0x00004306
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC1_COLOR					0x0000c900
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NV50TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
 #define  NV50TCL_BLEND_FUNC_DST_ALPHA							0x00001358
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ZERO						0x00000000
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE						0x00000001
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_COLOR					0x00000300
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_COLOR				0x00000301
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA					0x00000302
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_ALPHA				0x00000303
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_DST_ALPHA					0x00000304
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_ALPHA				0x00000305
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_DST_COLOR					0x00000306
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_COLOR				0x00000307
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA_SATURATE				0x00000308
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_COLOR					0x00008001
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x00008002
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_ALPHA					0x00008003
-#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x00008004
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ZERO						0x00004000
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE						0x00004001
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_COLOR					0x00004300
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA					0x00004302
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_DST_ALPHA					0x00004304
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_DST_COLOR					0x00004306
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC1_COLOR					0x0000c900
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NV50TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
 #define  NV50TCL_BLEND_ENABLE(x)							(0x00001360+((x)*4))
 #define  NV50TCL_BLEND_ENABLE__SIZE							0x00000008
 #define  NV50TCL_STENCIL_FRONT_ENABLE							0x00001380
@@ -8238,6 +8307,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_FP_START_ID								0x00001414
 #define  NV50TCL_GP_VERTEX_OUTPUT_COUNT							0x00001420
 #define  NV50TCL_VB_ELEMENT_BASE							0x00001434
+#define  NV50TCL_INSTANCE_BASE								0x00001438
 #define  NV50TCL_CODE_CB_FLUSH								0x00001440
 #define  NV50TCL_BIND_TSC(x)								(0x00001444+((x)*8))
 #define  NV50TCL_BIND_TSC__SIZE								0x00000003
@@ -8255,6 +8325,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define   NV50TCL_BIND_TIC_TIC_MASK							0x7ffffe00
 #define  NV50TCL_STRMOUT_MAP(x)								(0x00001480+((x)*4))
 #define  NV50TCL_STRMOUT_MAP__SIZE							0x00000020
+#define  NV50TCL_CLIPID_HEIGHT								0x00001504
 #define  NV50TCL_VP_CLIP_DISTANCE_ENABLE						0x00001510
 #define   NV50TCL_VP_CLIP_DISTANCE_ENABLE_0						(1 <<  0)
 #define   NV50TCL_VP_CLIP_DISTANCE_ENABLE_1						(1 <<  1)
@@ -8339,7 +8410,14 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_GP_BUILTIN_RESULT_EN							0x000015cc
 #define   NV50TCL_GP_BUILTIN_RESULT_EN_VPORT_IDX					(1 <<  0)
 #define   NV50TCL_GP_BUILTIN_RESULT_EN_LAYER_IDX					(1 << 16)
-#define  NV50TCL_MULTISAMPLE_SAMPLES_LOG2						0x000015d0
+#define  NV50TCL_MULTISAMPLE_MODE							0x000015d0
+#define   NV50TCL_MULTISAMPLE_MODE_1X							0x00000000
+#define   NV50TCL_MULTISAMPLE_MODE_2XMS							0x00000001
+#define   NV50TCL_MULTISAMPLE_MODE_4XMS							0x00000002
+#define   NV50TCL_MULTISAMPLE_MODE_8XMS							0x00000004
+#define   NV50TCL_MULTISAMPLE_MODE_4XMS_4XCS						0x00000008
+#define   NV50TCL_MULTISAMPLE_MODE_4XMS_12XCS						0x00000009
+#define   NV50TCL_MULTISAMPLE_MODE_8XMS_8XCS						0x0000000a
 #define  NV50TCL_VERTEX_BEGIN								0x000015dc
 #define   NV50TCL_VERTEX_BEGIN_POINTS							0x00000000
 #define   NV50TCL_VERTEX_BEGIN_LINES							0x00000001
@@ -8355,6 +8433,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define   NV50TCL_VERTEX_BEGIN_LINE_STRIP_ADJACENCY					0x0000000b
 #define   NV50TCL_VERTEX_BEGIN_TRIANGLES_ADJACENCY					0x0000000c
 #define   NV50TCL_VERTEX_BEGIN_TRIANGLE_STRIP_ADJACENCY					0x0000000d
+#define   NV50TCL_VERTEX_BEGIN_PATCHES							0x0000000e
 #define  NV50TCL_VERTEX_END								0x000015e0
 #define  NV50TCL_EDGEFLAG_ENABLE							0x000015e4
 #define  NV50TCL_VB_ELEMENT_U32								0x000015e8
@@ -8368,6 +8447,8 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define   NV50TCL_VB_ELEMENT_U16_I0_MASK						0x0000ffff
 #define   NV50TCL_VB_ELEMENT_U16_I1_SHIFT						16
 #define   NV50TCL_VB_ELEMENT_U16_I1_MASK						0xffff0000
+#define  NV50TCL_VERTEX_BASE_HIGH							0x000015f4
+#define  NV50TCL_VERTEX_BASE_LOW							0x000015f8
 #define  NV50TCL_VERTEX_DATA								0x00001640
 #define  NV50TCL_PRIM_RESTART_ENABLE							0x00001644
 #define  NV50TCL_PRIM_RESTART_INDEX							0x00001648
@@ -8753,7 +8834,14 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50TCL_VIEWPORT_TRANSFORM_EN							0x0000192c
 #define  NV50TCL_VIEW_VOLUME_CLIP_CTRL							0x0000193c
 #define  NV50TCL_VIEWPORT_CLIP_RECTS_EN							0x0000194c
+#define  NV50TCL_VIEWPORT_CLIP_MODE							0x00001950
+#define   NV50TCL_VIEWPORT_CLIP_MODE_INCLUDE						0x00000000
+#define   NV50TCL_VIEWPORT_CLIP_MODE_EXCLUDE						0x00000001
+#define   NV50TCL_VIEWPORT_CLIP_MODE_UNKNOWN						0x00000002
 #define  NV50TCL_FP_CTRL_UNK196C							0x0000196c
+#define  NV50TCL_CLIPID_ENABLE								0x0000197c
+#define  NV50TCL_CLIPID_WIDTH								0x00001980
+#define  NV50TCL_CLIPID_ID								0x00001984
 #define  NV50TCL_FP_INTERPOLANT_CTRL							0x00001988
 #define   NV50TCL_FP_INTERPOLANT_CTRL_UMASK_SHIFT					24
 #define   NV50TCL_FP_INTERPOLANT_CTRL_UMASK_MASK					0xff000000
@@ -8854,19 +8942,20 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define    NV50TCL_VERTEX_ARRAY_ATTRIB_FORMAT_8_8					0x00c00000
 #define    NV50TCL_VERTEX_ARRAY_ATTRIB_FORMAT_16					0x00d80000
 #define    NV50TCL_VERTEX_ARRAY_ATTRIB_FORMAT_8						0x00e80000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_FORMAT_2_10_10_10				0x01800000
 #define   NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SHIFT					25
-#define   NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_MASK						0x7e000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_FLOAT					0x7e000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_UNORM					0x24000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SNORM					0x12000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_USCALED					0x5a000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SSCALED					0x6c000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_UINT					0x48000000
-#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SINT					0x36000000
+#define   NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_MASK						0x0e000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_FLOAT					0x0e000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_UNORM					0x02000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SNORM					0x04000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_USCALED					0x0a000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SSCALED					0x0c000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_UINT					0x08000000
+#define    NV50TCL_VERTEX_ARRAY_ATTRIB_TYPE_SINT					0x06000000
 #define   NV50TCL_VERTEX_ARRAY_ATTRIB_BGRA						(1 << 31)
 #define  NV50TCL_QUERY_ADDRESS_HIGH							0x00001b00
 #define  NV50TCL_QUERY_ADDRESS_LOW							0x00001b04
-#define  NV50TCL_QUERY_COUNTER								0x00001b08
+#define  NV50TCL_QUERY_SEQUENCE								0x00001b08
 #define  NV50TCL_QUERY_GET								0x00001b0c
 
 
@@ -9021,4 +9110,938 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define  NV50_COMPUTE_USER_PARAM__SIZE							0x00000040
 
 
+#define NVC0TCL										0x00009097
+
+#define  NVC0TCL_SEMAPHORE_ADDRESS_HIGH							0x00000010
+#define  NVC0TCL_SEMAPHORE_ADDRESS_LOW							0x00000014
+#define  NVC0TCL_NOP									0x00000100
+#define  NVC0TCL_NOTIFY_ADDRESS_HIGH							0x00000104
+#define  NVC0TCL_NOTIFY_ADDRESS_LOW							0x00000108
+#define  NVC0TCL_NOTIFY									0x0000010c
+#define  NVC0TCL_SERIALIZE								0x00000110
+#define  NVC0TCL_EARLY_FRAGMENT_TESTS							0x00000210
+#define  NVC0TCL_TESS_MODE								0x00000320
+#define   NVC0TCL_TESS_MODE_PRIM_SHIFT							0
+#define   NVC0TCL_TESS_MODE_PRIM_MASK							0x0000000f
+#define    NVC0TCL_TESS_MODE_PRIM_ISOLINES						0x00000000
+#define    NVC0TCL_TESS_MODE_PRIM_TRIANGLES						0x00000001
+#define    NVC0TCL_TESS_MODE_PRIM_QUADS							0x00000002
+#define   NVC0TCL_TESS_MODE_SPACING_SHIFT						4
+#define   NVC0TCL_TESS_MODE_SPACING_MASK						0x000000f0
+#define    NVC0TCL_TESS_MODE_SPACING_EQUAL						0x00000000
+#define    NVC0TCL_TESS_MODE_SPACING_FRACTIONAL_ODD					0x00000010
+#define    NVC0TCL_TESS_MODE_SPACING_FRACTIONAL_EVEN					0x00000020
+#define   NVC0TCL_TESS_MODE_CW								(1 <<  8)
+#define   NVC0TCL_TESS_MODE_CONNECTED							(1 <<  9)
+#define  NVC0TCL_TESS_LEVEL_OUTER(x)							(0x00000324+((x)*4))
+#define  NVC0TCL_TESS_LEVEL_OUTER__SIZE							0x00000004
+#define  NVC0TCL_TESS_LEVEL_INNER(x)							(0x00000334+((x)*4))
+#define  NVC0TCL_TESS_LEVEL_INNER__SIZE							0x00000002
+#define  NVC0TCL_RASTERIZE_ENABLE							0x0000037c
+#define  NVC0TCL_TFB_BUFFER_ENABLE(x)							(0x00000380+((x)*32))
+#define  NVC0TCL_TFB_BUFFER_ENABLE__SIZE						0x00000004
+#define  NVC0TCL_TFB_ADDRESS_HIGH(x)							(0x00000384+((x)*32))
+#define  NVC0TCL_TFB_ADDRESS_HIGH__SIZE							0x00000004
+#define  NVC0TCL_TFB_ADDRESS_LOW(x)							(0x00000388+((x)*32))
+#define  NVC0TCL_TFB_ADDRESS_LOW__SIZE							0x00000004
+#define  NVC0TCL_TFB_BUFFER_SIZE(x)							(0x0000038c+((x)*32))
+#define  NVC0TCL_TFB_BUFFER_SIZE__SIZE							0x00000004
+#define  NVC0TCL_TFB_PRIMITIVE_ID(x)							(0x00000390+((x)*32))
+#define  NVC0TCL_TFB_PRIMITIVE_ID__SIZE							0x00000004
+#define  NVC0TCL_TFB_UNK0700(x)								(0x00000700+((x)*16))
+#define  NVC0TCL_TFB_UNK0700__SIZE							0x00000004
+#define  NVC0TCL_TFB_VARYING_COUNT(x)							(0x00000704+((x)*16))
+#define  NVC0TCL_TFB_VARYING_COUNT__SIZE						0x00000004
+#define  NVC0TCL_TFB_BUFFER_STRIDE(x)							(0x00000708+((x)*16))
+#define  NVC0TCL_TFB_BUFFER_STRIDE__SIZE						0x00000004
+#define  NVC0TCL_TFB_ENABLE								0x00000744
+#define  NVC0TCL_LOCAL_BASE								0x0000077c
+#define  NVC0TCL_UNK0790_ADDRESS_HIGH							0x00000790
+#define  NVC0TCL_UNK0790_ADDRESS_LOW							0x00000794
+#define  NVC0TCL_RT_ADDRESS_HIGH(x)							(0x00000800+((x)*32))
+#define  NVC0TCL_RT_ADDRESS_HIGH__SIZE							0x00000008
+#define  NVC0TCL_RT_ADDRESS_LOW(x)							(0x00000804+((x)*32))
+#define  NVC0TCL_RT_ADDRESS_LOW__SIZE							0x00000008
+#define  NVC0TCL_RT_HORIZ(x)								(0x00000808+((x)*32))
+#define  NVC0TCL_RT_HORIZ__SIZE								0x00000008
+#define  NVC0TCL_RT_VERT(x)								(0x0000080c+((x)*32))
+#define  NVC0TCL_RT_VERT__SIZE								0x00000008
+#define  NVC0TCL_RT_FORMAT(x)								(0x00000810+((x)*32))
+#define  NVC0TCL_RT_FORMAT__SIZE							0x00000008
+#define   NVC0TCL_RT_FORMAT_R32G32B32A32_FLOAT						0x000000c0
+#define   NVC0TCL_RT_FORMAT_R32G32B32A32_SINT						0x000000c1
+#define   NVC0TCL_RT_FORMAT_R32G32B32A32_UINT						0x000000c2
+#define   NVC0TCL_RT_FORMAT_R32G32B32X32_FLOAT						0x000000c3
+#define   NVC0TCL_RT_FORMAT_R16G16B16A16_UNORM						0x000000c6
+#define   NVC0TCL_RT_FORMAT_R16G16B16A16_SNORM						0x000000c7
+#define   NVC0TCL_RT_FORMAT_R16G16B16A16_SINT						0x000000c8
+#define   NVC0TCL_RT_FORMAT_R16G16B16A16_UINT						0x000000c9
+#define   NVC0TCL_RT_FORMAT_R16G16B16A16_FLOAT						0x000000ca
+#define   NVC0TCL_RT_FORMAT_R32G32_FLOAT						0x000000cb
+#define   NVC0TCL_RT_FORMAT_R32G32_SINT							0x000000cc
+#define   NVC0TCL_RT_FORMAT_R32G32_UINT							0x000000cd
+#define   NVC0TCL_RT_FORMAT_R16G16B16X16_FLOAT						0x000000ce
+#define   NVC0TCL_RT_FORMAT_A8R8G8B8_UNORM						0x000000cf
+#define   NVC0TCL_RT_FORMAT_A8R8G8B8_SRGB						0x000000d0
+#define   NVC0TCL_RT_FORMAT_A2B10G10R10_UNORM						0x000000d1
+#define   NVC0TCL_RT_FORMAT_A2B10G10R10_UINT						0x000000d2
+#define   NVC0TCL_RT_FORMAT_A8B8G8R8_UNORM						0x000000d5
+#define   NVC0TCL_RT_FORMAT_A8B8G8R8_SRGB						0x000000d6
+#define   NVC0TCL_RT_FORMAT_A8B8G8R8_SNORM						0x000000d7
+#define   NVC0TCL_RT_FORMAT_A8B8G8R8_SINT						0x000000d8
+#define   NVC0TCL_RT_FORMAT_A8B8G8R8_UINT						0x000000d9
+#define   NVC0TCL_RT_FORMAT_R16G16_UNORM						0x000000da
+#define   NVC0TCL_RT_FORMAT_R16G16_SNORM						0x000000db
+#define   NVC0TCL_RT_FORMAT_R16G16_SINT							0x000000dc
+#define   NVC0TCL_RT_FORMAT_R16G16_UINT							0x000000dd
+#define   NVC0TCL_RT_FORMAT_R16G16_FLOAT						0x000000de
+#define   NVC0TCL_RT_FORMAT_A2R10G10B10_UNORM						0x000000df
+#define   NVC0TCL_RT_FORMAT_B10G11R11_FLOAT						0x000000e0
+#define   NVC0TCL_RT_FORMAT_R32_FLOAT							0x000000e5
+#define   NVC0TCL_RT_FORMAT_X8R8G8B8_UNORM						0x000000e6
+#define   NVC0TCL_RT_FORMAT_X8R8G8B8_SRGB						0x000000e7
+#define   NVC0TCL_RT_FORMAT_R5G6B5_UNORM						0x000000e8
+#define   NVC0TCL_RT_FORMAT_A1R5G5B5_UNORM						0x000000e9
+#define   NVC0TCL_RT_FORMAT_R8G8_UNORM							0x000000ea
+#define   NVC0TCL_RT_FORMAT_R8G8_SNORM							0x000000eb
+#define   NVC0TCL_RT_FORMAT_R8G8_SINT							0x000000ec
+#define   NVC0TCL_RT_FORMAT_R8G8_UINT							0x000000ed
+#define   NVC0TCL_RT_FORMAT_R16_UNORM							0x000000ee
+#define   NVC0TCL_RT_FORMAT_R16_SNORM							0x000000ef
+#define   NVC0TCL_RT_FORMAT_R16_SINT							0x000000f0
+#define   NVC0TCL_RT_FORMAT_R16_UINT							0x000000f1
+#define   NVC0TCL_RT_FORMAT_R16_FLOAT							0x000000f2
+#define   NVC0TCL_RT_FORMAT_R8_UNORM							0x000000f3
+#define   NVC0TCL_RT_FORMAT_R8_SNORM							0x000000f4
+#define   NVC0TCL_RT_FORMAT_R8_SINT							0x000000f5
+#define   NVC0TCL_RT_FORMAT_R8_UINT							0x000000f6
+#define   NVC0TCL_RT_FORMAT_A8_UNORM							0x000000f7
+#define   NVC0TCL_RT_FORMAT_X1R5G5B5_UNORM						0x000000f8
+#define   NVC0TCL_RT_FORMAT_X8B8G8R8_UNORM						0x000000f9
+#define   NVC0TCL_RT_FORMAT_X8B8G8R8_SRGB						0x000000fa
+#define  NVC0TCL_RT_TILE_MODE(x)							(0x00000814+((x)*32))
+#define  NVC0TCL_RT_TILE_MODE__SIZE							0x00000008
+#define  NVC0TCL_RT_ARRAY_MODE(x)							(0x00000818+((x)*32))
+#define  NVC0TCL_RT_ARRAY_MODE__SIZE							0x00000008
+#define   NVC0TCL_RT_ARRAY_MODE_LAYERS_SHIFT						0
+#define   NVC0TCL_RT_ARRAY_MODE_LAYERS_MASK						0x0000ffff
+#define   NVC0TCL_RT_ARRAY_MODE_VOLUME							(1 << 16)
+#define  NVC0TCL_RT_LAYER_STRIDE(x)							(0x0000081c+((x)*32))
+#define  NVC0TCL_RT_LAYER_STRIDE__SIZE							0x00000008
+#define  NVC0TCL_VIEWPORT_SCALE_X(x)							(0x00000a00+((x)*32))
+#define  NVC0TCL_VIEWPORT_SCALE_X__SIZE							0x00000010
+#define  NVC0TCL_VIEWPORT_SCALE_Y(x)							(0x00000a04+((x)*32))
+#define  NVC0TCL_VIEWPORT_SCALE_Y__SIZE							0x00000010
+#define  NVC0TCL_VIEWPORT_SCALE_Z(x)							(0x00000a08+((x)*32))
+#define  NVC0TCL_VIEWPORT_SCALE_Z__SIZE							0x00000010
+#define  NVC0TCL_VIEWPORT_TRANSLATE_X(x)						(0x00000a0c+((x)*32))
+#define  NVC0TCL_VIEWPORT_TRANSLATE_X__SIZE						0x00000010
+#define  NVC0TCL_VIEWPORT_TRANSLATE_Y(x)						(0x00000a10+((x)*32))
+#define  NVC0TCL_VIEWPORT_TRANSLATE_Y__SIZE						0x00000010
+#define  NVC0TCL_VIEWPORT_TRANSLATE_Z(x)						(0x00000a14+((x)*32))
+#define  NVC0TCL_VIEWPORT_TRANSLATE_Z__SIZE						0x00000010
+#define  NVC0TCL_VIEWPORT_HORIZ(x)							(0x00000c00+((x)*16))
+#define  NVC0TCL_VIEWPORT_HORIZ__SIZE							0x00000010
+#define   NVC0TCL_VIEWPORT_HORIZ_X_SHIFT						0
+#define   NVC0TCL_VIEWPORT_HORIZ_X_MASK							0x0000ffff
+#define   NVC0TCL_VIEWPORT_HORIZ_W_SHIFT						16
+#define   NVC0TCL_VIEWPORT_HORIZ_W_MASK							0xffff0000
+#define  NVC0TCL_VIEWPORT_VERT(x)							(0x00000c04+((x)*16))
+#define  NVC0TCL_VIEWPORT_VERT__SIZE							0x00000010
+#define   NVC0TCL_VIEWPORT_VERT_Y_SHIFT							0
+#define   NVC0TCL_VIEWPORT_VERT_Y_MASK							0x0000ffff
+#define   NVC0TCL_VIEWPORT_VERT_H_SHIFT							16
+#define   NVC0TCL_VIEWPORT_VERT_H_MASK							0xffff0000
+#define  NVC0TCL_DEPTH_RANGE_NEAR(x)							(0x00000c08+((x)*16))
+#define  NVC0TCL_DEPTH_RANGE_NEAR__SIZE							0x00000010
+#define  NVC0TCL_DEPTH_RANGE_FAR(x)							(0x00000c0c+((x)*16))
+#define  NVC0TCL_DEPTH_RANGE_FAR__SIZE							0x00000010
+#define  NVC0TCL_VIEWPORT_CLIP_HORIZ(x)							(0x00000d00+((x)*8))
+#define  NVC0TCL_VIEWPORT_CLIP_HORIZ__SIZE						0x00000008
+#define   NVC0TCL_VIEWPORT_CLIP_HORIZ_MIN_SHIFT						0
+#define   NVC0TCL_VIEWPORT_CLIP_HORIZ_MIN_MASK						0x0000ffff
+#define   NVC0TCL_VIEWPORT_CLIP_HORIZ_MAX_SHIFT						16
+#define   NVC0TCL_VIEWPORT_CLIP_HORIZ_MAX_MASK						0xffff0000
+#define  NVC0TCL_VIEWPORT_CLIP_VERT(x)							(0x00000d04+((x)*8))
+#define  NVC0TCL_VIEWPORT_CLIP_VERT__SIZE						0x00000008
+#define   NVC0TCL_VIEWPORT_CLIP_VERT_MIN_SHIFT						0
+#define   NVC0TCL_VIEWPORT_CLIP_VERT_MIN_MASK						0x0000ffff
+#define   NVC0TCL_VIEWPORT_CLIP_VERT_MAX_SHIFT						16
+#define   NVC0TCL_VIEWPORT_CLIP_VERT_MAX_MASK						0xffff0000
+#define  NVC0TCL_CLIPID_REGION_HORIZ(x)							(0x00000d40+((x)*8))
+#define  NVC0TCL_CLIPID_REGION_HORIZ__SIZE						0x00000004
+#define  NVC0TCL_CLIPID_REGION_VERT(x)							(0x00000d44+((x)*8))
+#define  NVC0TCL_CLIPID_REGION_VERT__SIZE						0x00000004
+#define  NVC0TCL_VERTEX_BUFFER_FIRST							0x00000d74
+#define  NVC0TCL_VERTEX_BUFFER_COUNT							0x00000d78
+#define  NVC0TCL_CLEAR_COLOR(x)								(0x00000d80+((x)*4))
+#define  NVC0TCL_CLEAR_COLOR__SIZE							0x00000004
+#define  NVC0TCL_CLEAR_DEPTH								0x00000d90
+#define  NVC0TCL_STACK_ADDRESS_HIGH							0x00000d94
+#define  NVC0TCL_STACK_ADDRESS_LOW							0x00000d98
+#define  NVC0TCL_STACK_SIZE_LOG								0x00000d9c
+#define  NVC0TCL_CLEAR_STENCIL								0x00000da0
+#define  NVC0TCL_POLYGON_SMOOTH_ENABLE							0x00000db4
+#define  NVC0TCL_POLYGON_OFFSET_POINT_ENABLE						0x00000dc0
+#define  NVC0TCL_POLYGON_OFFSET_LINE_ENABLE						0x00000dc4
+#define  NVC0TCL_POLYGON_OFFSET_FILL_ENABLE						0x00000dc8
+#define  NVC0TCL_PATCH_VERTICES								0x00000dcc
+#define  NVC0TCL_WATCHDOG_TIMER								0x00000de4
+#define  NVC0TCL_WINDOW_OFFSET_X							0x00000df8
+#define  NVC0TCL_WINDOW_OFFSET_Y							0x00000dfc
+#define  NVC0TCL_SCISSOR_ENABLE(x)							(0x00000e00+((x)*16))
+#define  NVC0TCL_SCISSOR_ENABLE__SIZE							0x00000010
+#define  NVC0TCL_SCISSOR_HORIZ(x)							(0x00000e04+((x)*16))
+#define  NVC0TCL_SCISSOR_HORIZ__SIZE							0x00000010
+#define   NVC0TCL_SCISSOR_HORIZ_MIN_SHIFT						0
+#define   NVC0TCL_SCISSOR_HORIZ_MIN_MASK						0x0000ffff
+#define   NVC0TCL_SCISSOR_HORIZ_MAX_SHIFT						16
+#define   NVC0TCL_SCISSOR_HORIZ_MAX_MASK						0xffff0000
+#define  NVC0TCL_SCISSOR_VERT(x)							(0x00000e08+((x)*16))
+#define  NVC0TCL_SCISSOR_VERT__SIZE							0x00000010
+#define   NVC0TCL_SCISSOR_VERT_MIN_SHIFT						0
+#define   NVC0TCL_SCISSOR_VERT_MIN_MASK							0x0000ffff
+#define   NVC0TCL_SCISSOR_VERT_MAX_SHIFT						16
+#define   NVC0TCL_SCISSOR_VERT_MAX_MASK							0xffff0000
+#define  NVC0TCL_LOCAL_WARPS_LOG_ALLOC							0x00000f44
+#define  NVC0TCL_LOCAL_WARPS_NO_CLAMP							0x00000f48
+#define  NVC0TCL_STACK_WARPS_LOG_ALLOC							0x00000f4c
+#define  NVC0TCL_STACK_WARPS_NO_CLAMP							0x00000f50
+#define  NVC0TCL_STENCIL_BACK_FUNC_REF							0x00000f54
+#define  NVC0TCL_STENCIL_BACK_MASK							0x00000f58
+#define  NVC0TCL_STENCIL_BACK_FUNC_MASK							0x00000f5c
+#define  NVC0TCL_VERTEX_RUNOUT_HIGH							0x00000f84
+#define  NVC0TCL_VERTEX_RUNOUT_LOW							0x00000f88
+#define  NVC0TCL_DEPTH_BOUNDS(x)							(0x00000f9c+((x)*4))
+#define  NVC0TCL_DEPTH_BOUNDS__SIZE							0x00000002
+#define  NVC0TCL_MSAA_MASK(x)								(0x00000fbc+((x)*4))
+#define  NVC0TCL_MSAA_MASK__SIZE							0x00000004
+#define  NVC0TCL_CLIPID_ADDRESS_HIGH							0x00000fcc
+#define  NVC0TCL_CLIPID_ADDRESS_LOW							0x00000fd0
+#define  NVC0TCL_ZETA_ADDRESS_HIGH							0x00000fe0
+#define  NVC0TCL_ZETA_ADDRESS_LOW							0x00000fe4
+#define  NVC0TCL_ZETA_FORMAT								0x00000fe8
+#define   NVC0TCL_ZETA_FORMAT_Z32_FLOAT							0x0000000a
+#define   NVC0TCL_ZETA_FORMAT_Z16_UNORM							0x00000013
+#define   NVC0TCL_ZETA_FORMAT_Z24S8_UNORM						0x00000014
+#define   NVC0TCL_ZETA_FORMAT_X8Z24_UNORM						0x00000015
+#define   NVC0TCL_ZETA_FORMAT_S8Z24_UNORM						0x00000016
+#define   NVC0TCL_ZETA_FORMAT_Z32_FLOAT_X24S8_UNORM					0x00000019
+#define  NVC0TCL_ZETA_TILE_MODE								0x00000fec
+#define  NVC0TCL_ZETA_LAYER_STRIDE							0x00000ff0
+#define  NVC0TCL_SCREEN_SCISSOR_HORIZ							0x00000ff4
+#define   NVC0TCL_SCREEN_SCISSOR_HORIZ_W_SHIFT						16
+#define   NVC0TCL_SCREEN_SCISSOR_HORIZ_W_MASK						0xffff0000
+#define   NVC0TCL_SCREEN_SCISSOR_HORIZ_X_SHIFT						0
+#define   NVC0TCL_SCREEN_SCISSOR_HORIZ_X_MASK						0x0000ffff
+#define  NVC0TCL_SCREEN_SCISSOR_VERT							0x00000ff8
+#define   NVC0TCL_SCREEN_SCISSOR_VERT_H_SHIFT						16
+#define   NVC0TCL_SCREEN_SCISSOR_VERT_H_MASK						0xffff0000
+#define   NVC0TCL_SCREEN_SCISSOR_VERT_Y_SHIFT						0
+#define   NVC0TCL_SCREEN_SCISSOR_VERT_Y_MASK						0x0000ffff
+#define  NVC0TCL_VTX_ATTR_DEFINE							0x0000114c
+#define   NVC0TCL_VTX_ATTR_DEFINE_ATTR_SHIFT						0
+#define   NVC0TCL_VTX_ATTR_DEFINE_ATTR_MASK						0x0000003f
+#define   NVC0TCL_VTX_ATTR_DEFINE_COMP_SHIFT						8
+#define   NVC0TCL_VTX_ATTR_DEFINE_COMP_MASK						0x00000f00
+#define   NVC0TCL_VTX_ATTR_DEFINE_SIZE_SHIFT						12
+#define   NVC0TCL_VTX_ATTR_DEFINE_SIZE_MASK						0x0000f000
+#define   NVC0TCL_VTX_ATTR_DEFINE_TYPE_SHIFT						16
+#define   NVC0TCL_VTX_ATTR_DEFINE_TYPE_MASK						0x000f0000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_FLOAT						0x00070000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_UNORM						0x00010000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_SNORM						0x00020000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_USCALED						0x00050000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_SSCALED						0x00060000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_UINT						0x00040000
+#define    NVC0TCL_VTX_ATTR_DEFINE_TYPE_SINT						0x00030000
+#define  NVC0TCL_VTX_ATTR_DATA(x)							(0x00001150+((x)*4))
+#define  NVC0TCL_VTX_ATTR_DATA__SIZE							0x00000004
+#define  NVC0TCL_VERTEX_ATTRIB_FORMAT(x)						(0x00001160+((x)*4))
+#define  NVC0TCL_VERTEX_ATTRIB_FORMAT__SIZE						0x00000020
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_BUFFER_SHIFT					0
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_BUFFER_MASK					0x0000003f
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_CONST						(1 <<  6)
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_OFFSET_SHIFT					7
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_OFFSET_MASK					0x001fff80
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_SHIFT					21
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_MASK					0x07e00000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_32_32_32_32				0x00200000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_32_32_32					0x00400000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_16_16_16_16				0x00600000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_32_32					0x00800000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_16_16_16					0x00a00000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_8_8_8_8					0x01400000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_16_16					0x01e00000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_32					0x02400000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_8_8_8					0x02600000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_8_8					0x03000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_16					0x03600000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_8					0x03a00000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_FORMAT_2_10_10_10				0x06000000
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_SHIFT					27
+#define   NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_MASK					0x78000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_FLOAT					0x38000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_UNORM					0x08000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_SNORM					0x10000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_USCALED					0x28000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_SSCALED					0x30000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_UINT					0x20000000
+#define    NVC0TCL_VERTEX_ATTRIB_FORMAT_TYPE_SINT					0x18000000
+#define  NVC0TCL_RT_CONTROL								0x0000121c
+#define   NVC0TCL_RT_CONTROL_COUNT_SHIFT						0
+#define   NVC0TCL_RT_CONTROL_COUNT_MASK							0x0000000f
+#define   NVC0TCL_RT_CONTROL_MAP0_SHIFT							4
+#define   NVC0TCL_RT_CONTROL_MAP0_MASK							0x00000070
+#define   NVC0TCL_RT_CONTROL_MAP1_SHIFT							7
+#define   NVC0TCL_RT_CONTROL_MAP1_MASK							0x00000380
+#define   NVC0TCL_RT_CONTROL_MAP2_SHIFT							10
+#define   NVC0TCL_RT_CONTROL_MAP2_MASK							0x00001c00
+#define   NVC0TCL_RT_CONTROL_MAP3_SHIFT							13
+#define   NVC0TCL_RT_CONTROL_MAP3_MASK							0x0000e000
+#define   NVC0TCL_RT_CONTROL_MAP4_SHIFT							16
+#define   NVC0TCL_RT_CONTROL_MAP4_MASK							0x00070000
+#define   NVC0TCL_RT_CONTROL_MAP5_SHIFT							19
+#define   NVC0TCL_RT_CONTROL_MAP5_MASK							0x00380000
+#define   NVC0TCL_RT_CONTROL_MAP6_SHIFT							22
+#define   NVC0TCL_RT_CONTROL_MAP6_MASK							0x01c00000
+#define   NVC0TCL_RT_CONTROL_MAP7_SHIFT							25
+#define   NVC0TCL_RT_CONTROL_MAP7_MASK							0x0e000000
+#define  NVC0TCL_ZETA_HORIZ								0x00001228
+#define  NVC0TCL_ZETA_VERT								0x0000122c
+#define  NVC0TCL_ZETA_ARRAY_MODE							0x00001230
+#define   NVC0TCL_ZETA_ARRAY_MODE_LAYERS_SHIFT						0
+#define   NVC0TCL_ZETA_ARRAY_MODE_LAYERS_MASK						0x0000ffff
+#define   NVC0TCL_ZETA_ARRAY_MODE_UNK							(1 << 16)
+#define  NVC0TCL_LINKED_TSC								0x00001234
+#define  NVC0TCL_FP_RESULT_COUNT							0x00001298
+#define  NVC0TCL_DEPTH_TEST_ENABLE							0x000012cc
+#define  NVC0TCL_SHADE_MODEL								0x000012d4
+#define   NVC0TCL_SHADE_MODEL_FLAT							0x00001d00
+#define   NVC0TCL_SHADE_MODEL_SMOOTH							0x00001d01
+#define  NVC0TCL_BLEND_INDEPENDENT							0x000012e4
+#define  NVC0TCL_DEPTH_WRITE_ENABLE							0x000012e8
+#define  NVC0TCL_ALPHA_TEST_ENABLE							0x000012ec
+#define  NVC0TCL_PM_SET(x)								(0x000012f0+((x)*4))
+#define  NVC0TCL_PM_SET__SIZE								0x00000004
+#define  NVC0TCL_VB_ELEMENT_U8_SETUP							0x00001300
+#define   NVC0TCL_VB_ELEMENT_U8_SETUP_OFFSET_SHIFT					30
+#define   NVC0TCL_VB_ELEMENT_U8_SETUP_OFFSET_MASK					0xc0000000
+#define   NVC0TCL_VB_ELEMENT_U8_SETUP_COUNT_SHIFT					0
+#define   NVC0TCL_VB_ELEMENT_U8_SETUP_COUNT_MASK					0x3fffffff
+#define  NVC0TCL_VB_ELEMENT_U8								0x00001304
+#define   NVC0TCL_VB_ELEMENT_U8_I0_SHIFT						0
+#define   NVC0TCL_VB_ELEMENT_U8_I0_MASK							0x000000ff
+#define   NVC0TCL_VB_ELEMENT_U8_I1_SHIFT						8
+#define   NVC0TCL_VB_ELEMENT_U8_I1_MASK							0x0000ff00
+#define   NVC0TCL_VB_ELEMENT_U8_I2_SHIFT						16
+#define   NVC0TCL_VB_ELEMENT_U8_I2_MASK							0x00ff0000
+#define   NVC0TCL_VB_ELEMENT_U8_I3_SHIFT						24
+#define   NVC0TCL_VB_ELEMENT_U8_I3_MASK							0xff000000
+#define  NVC0TCL_DEPTH_TEST_FUNC							0x0000130c
+#define   NVC0TCL_DEPTH_TEST_FUNC_NEVER							0x00000200
+#define   NVC0TCL_DEPTH_TEST_FUNC_LESS							0x00000201
+#define   NVC0TCL_DEPTH_TEST_FUNC_EQUAL							0x00000202
+#define   NVC0TCL_DEPTH_TEST_FUNC_LEQUAL						0x00000203
+#define   NVC0TCL_DEPTH_TEST_FUNC_GREATER						0x00000204
+#define   NVC0TCL_DEPTH_TEST_FUNC_NOTEQUAL						0x00000205
+#define   NVC0TCL_DEPTH_TEST_FUNC_GEQUAL						0x00000206
+#define   NVC0TCL_DEPTH_TEST_FUNC_ALWAYS						0x00000207
+#define  NVC0TCL_ALPHA_TEST_REF								0x00001310
+#define  NVC0TCL_ALPHA_TEST_FUNC							0x00001314
+#define   NVC0TCL_ALPHA_TEST_FUNC_NEVER							0x00000200
+#define   NVC0TCL_ALPHA_TEST_FUNC_LESS							0x00000201
+#define   NVC0TCL_ALPHA_TEST_FUNC_EQUAL							0x00000202
+#define   NVC0TCL_ALPHA_TEST_FUNC_LEQUAL						0x00000203
+#define   NVC0TCL_ALPHA_TEST_FUNC_GREATER						0x00000204
+#define   NVC0TCL_ALPHA_TEST_FUNC_NOTEQUAL						0x00000205
+#define   NVC0TCL_ALPHA_TEST_FUNC_GEQUAL						0x00000206
+#define   NVC0TCL_ALPHA_TEST_FUNC_ALWAYS						0x00000207
+#define  NVC0TCL_BLEND_COLOR(x)								(0x0000131c+((x)*4))
+#define  NVC0TCL_BLEND_COLOR__SIZE							0x00000004
+#define  NVC0TCL_TIC_FLUSH								0x00001330
+#define  NVC0TCL_TSC_FLUSH								0x00001334
+#define  NVC0TCL_TEX_CACHE_CTL								0x00001338
+#define  NVC0TCL_BLEND_EQUATION_RGB							0x00001340
+#define   NVC0TCL_BLEND_EQUATION_RGB_FUNC_ADD						0x00008006
+#define   NVC0TCL_BLEND_EQUATION_RGB_MIN						0x00008007
+#define   NVC0TCL_BLEND_EQUATION_RGB_MAX						0x00008008
+#define   NVC0TCL_BLEND_EQUATION_RGB_FUNC_SUBTRACT					0x0000800a
+#define   NVC0TCL_BLEND_EQUATION_RGB_FUNC_REVERSE_SUBTRACT				0x0000800b
+#define  NVC0TCL_BLEND_FUNC_SRC_RGB							0x00001344
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_SRC_COLOR						0x00004300
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA						0x00004302
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_DST_ALPHA						0x00004304
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_DST_COLOR						0x00004306
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_SRC_ALPHA_SATURATE					0x00004308
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_SRC1_COLOR						0x0000c900
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_SRC1_ALPHA						0x0000c902
+#define   NVC0TCL_BLEND_FUNC_SRC_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_FUNC_DST_RGB							0x00001348
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_SRC_COLOR						0x00004300
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA						0x00004302
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_DST_ALPHA						0x00004304
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_DST_COLOR						0x00004306
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_SRC_ALPHA_SATURATE					0x00004308
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_SRC1_COLOR						0x0000c900
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_SRC1_ALPHA						0x0000c902
+#define   NVC0TCL_BLEND_FUNC_DST_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_EQUATION_ALPHA							0x0000134c
+#define   NVC0TCL_BLEND_EQUATION_ALPHA_FUNC_ADD						0x00008006
+#define   NVC0TCL_BLEND_EQUATION_ALPHA_MIN						0x00008007
+#define   NVC0TCL_BLEND_EQUATION_ALPHA_MAX						0x00008008
+#define   NVC0TCL_BLEND_EQUATION_ALPHA_FUNC_SUBTRACT					0x0000800a
+#define   NVC0TCL_BLEND_EQUATION_ALPHA_FUNC_REVERSE_SUBTRACT				0x0000800b
+#define  NVC0TCL_BLEND_FUNC_SRC_ALPHA							0x00001350
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_SRC_COLOR					0x00004300
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA					0x00004302
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_DST_ALPHA					0x00004304
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_DST_COLOR					0x00004306
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNC_SRC_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_FUNC_DST_ALPHA							0x00001358
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_SRC_COLOR					0x00004300
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA					0x00004302
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_DST_ALPHA					0x00004304
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_DST_COLOR					0x00004306
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNC_DST_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_STENCIL_ENABLE								0x00001380
+#define  NVC0TCL_STENCIL_FRONT_OP_FAIL							0x00001384
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_REPLACE						0x00001e01
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_FRONT_OP_FAIL_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_FRONT_OP_ZFAIL							0x00001388
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_REPLACE					0x00001e01
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_FRONT_OP_ZFAIL_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_FRONT_OP_ZPASS							0x0000138c
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_REPLACE					0x00001e01
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_FRONT_OP_ZPASS_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_FRONT_FUNC_FUNC						0x00001390
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_NEVER						0x00000200
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_LESS						0x00000201
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_EQUAL						0x00000202
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_LEQUAL					0x00000203
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_GREATER					0x00000204
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_NOTEQUAL					0x00000205
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_GEQUAL					0x00000206
+#define   NVC0TCL_STENCIL_FRONT_FUNC_FUNC_ALWAYS					0x00000207
+#define  NVC0TCL_STENCIL_FRONT_FUNC_REF							0x00001394
+#define  NVC0TCL_STENCIL_FRONT_MASK							0x00001398
+#define  NVC0TCL_STENCIL_FRONT_FUNC_MASK						0x0000139c
+#define  NVC0TCL_FRAG_COLOR_CLAMP_EN							0x000013a8
+#define  NVC0TCL_Y_ORIGIN_BOTTOM							0x000013ac
+#define  NVC0TCL_LINE_WIDTH(x)								(0x000013b0+((x)*4))
+#define  NVC0TCL_LINE_WIDTH__SIZE							0x00000002
+#define  NVC0TCL_POINT_COORD_REPLACE_MAP(x)						(0x000013c0+((x)*4))
+#define  NVC0TCL_POINT_COORD_REPLACE_MAP__SIZE						0x00000008
+#define  NVC0TCL_GP_VERTEX_OUTPUT_COUNT							0x00001420
+#define  NVC0TCL_FENCE									0x0000142c
+#define  NVC0TCL_VB_ELEMENT_BASE							0x00001434
+#define  NVC0TCL_INSTANCE_BASE								0x00001438
+#define  NVC0TCL_CODE_CB_FLUSH								0x00001440
+#define  NVC0TCL_CLIPID_HEIGHT								0x00001504
+#define  NVC0TCL_VP_CLIP_DISTANCE_ENABLE						0x00001510
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_0						(1 <<  0)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_1						(1 <<  1)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_2						(1 <<  2)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_3						(1 <<  3)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_4						(1 <<  4)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_5						(1 <<  5)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_6						(1 <<  6)
+#define   NVC0TCL_VP_CLIP_DISTANCE_ENABLE_7						(1 <<  7)
+#define  NVC0TCL_SAMPLECNT_ENABLE							0x00001514
+#define  NVC0TCL_POINT_SIZE								0x00001518
+#define  NVC0TCL_POINT_SPRITE_ENABLE							0x00001520
+#define  NVC0TCL_SAMPLECNT_RESET							0x00001530
+#define  NVC0TCL_MULTISAMPLE_ZETA_ENABLE						0x00001534
+#define  NVC0TCL_ZETA_ENABLE								0x00001538
+#define  NVC0TCL_MULTISAMPLE_CTRL							0x0000153c
+#define   NVC0TCL_MULTISAMPLE_CTRL_ALPHA_TO_COVERAGE					(1 <<  0)
+#define   NVC0TCL_MULTISAMPLE_CTRL_ALPHA_TO_ONE						(1 <<  4)
+#define  NVC0TCL_NOPERSPECTIVE_BITMAP(x)						(0x00001540+((x)*4))
+#define  NVC0TCL_NOPERSPECTIVE_BITMAP__SIZE						0x00000004
+#define  NVC0TCL_COND_ADDRESS_HIGH							0x00001550
+#define  NVC0TCL_COND_ADDRESS_LOW							0x00001554
+#define  NVC0TCL_COND_MODE								0x00001558
+#define   NVC0TCL_COND_MODE_NEVER							0x00000000
+#define   NVC0TCL_COND_MODE_ALWAYS							0x00000001
+#define   NVC0TCL_COND_MODE_RES								0x00000002
+#define   NVC0TCL_COND_MODE_NOT_RES_AND_NOT_ID						0x00000003
+#define   NVC0TCL_COND_MODE_RES_OR_ID							0x00000004
+#define  NVC0TCL_TSC_ADDRESS_HIGH							0x0000155c
+#define  NVC0TCL_TSC_ADDRESS_LOW							0x00001560
+#define  NVC0TCL_TSC_LIMIT								0x00001564
+#define  NVC0TCL_POLYGON_OFFSET_FACTOR							0x0000156c
+#define  NVC0TCL_LINE_SMOOTH_ENABLE							0x00001570
+#define  NVC0TCL_TIC_ADDRESS_HIGH							0x00001574
+#define  NVC0TCL_TIC_ADDRESS_LOW							0x00001578
+#define  NVC0TCL_TIC_LIMIT								0x0000157c
+#define  NVC0TCL_PM_CONTROL(x)								(0x00001580+((x)*4))
+#define  NVC0TCL_PM_CONTROL__SIZE							0x00000004
+#define   NVC0TCL_PM_CONTROL_UNK0							(1 <<  0)
+#define   NVC0TCL_PM_CONTROL_UNK1_SHIFT							4
+#define   NVC0TCL_PM_CONTROL_UNK1_MASK							0x00000070
+#define   NVC0TCL_PM_CONTROL_UNK2_SHIFT							8
+#define   NVC0TCL_PM_CONTROL_UNK2_MASK							0xffffff00
+#define  NVC0TCL_STENCIL_TWO_SIDE_ENABLE						0x00001594
+#define  NVC0TCL_STENCIL_BACK_OP_FAIL							0x00001598
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_REPLACE						0x00001e01
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_BACK_OP_FAIL_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_BACK_OP_ZFAIL							0x0000159c
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_REPLACE						0x00001e01
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_BACK_OP_ZFAIL_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_BACK_OP_ZPASS							0x000015a0
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_ZERO						0x00000000
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_INVERT						0x0000150a
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_KEEP						0x00001e00
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_REPLACE						0x00001e01
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_INCR						0x00001e02
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_DECR						0x00001e03
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_INCR_WRAP					0x00008507
+#define   NVC0TCL_STENCIL_BACK_OP_ZPASS_DECR_WRAP					0x00008508
+#define  NVC0TCL_STENCIL_BACK_FUNC_FUNC							0x000015a4
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_NEVER						0x00000200
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_LESS						0x00000201
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_EQUAL						0x00000202
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_LEQUAL						0x00000203
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_GREATER					0x00000204
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_NOTEQUAL					0x00000205
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_GEQUAL						0x00000206
+#define   NVC0TCL_STENCIL_BACK_FUNC_FUNC_ALWAYS						0x00000207
+#define  NVC0TCL_MULTISAMPLE_COLOR_ENABLE						0x000015b4
+#define  NVC0TCL_FRAMEBUFFER_SRGB							0x000015b8
+#define  NVC0TCL_POLYGON_OFFSET_UNITS							0x000015bc
+#define  NVC0TCL_GP_BUILTIN_RESULT_EN							0x000015cc
+#define   NVC0TCL_GP_BUILTIN_RESULT_EN_VPORT						(1 <<  0)
+#define   NVC0TCL_GP_BUILTIN_RESULT_EN_LAYER						(1 << 16)
+#define  NVC0TCL_MULTISAMPLE_MODE							0x000015d0
+#define   NVC0TCL_MULTISAMPLE_MODE_1X							0x00000000
+#define   NVC0TCL_MULTISAMPLE_MODE_2XMS							0x00000001
+#define   NVC0TCL_MULTISAMPLE_MODE_4XMS							0x00000002
+#define   NVC0TCL_MULTISAMPLE_MODE_8XMS							0x00000004
+#define   NVC0TCL_MULTISAMPLE_MODE_4XMS_4XCS						0x00000008
+#define   NVC0TCL_MULTISAMPLE_MODE_4XMS_12XCS						0x00000009
+#define   NVC0TCL_MULTISAMPLE_MODE_8XMS_8XCS						0x0000000a
+#define  NVC0TCL_EDGEFLAG_ENABLE							0x000015e4
+#define  NVC0TCL_VB_ELEMENT_U32								0x000015e8
+#define  NVC0TCL_VB_ELEMENT_U16_SETUP							0x000015ec
+#define   NVC0TCL_VB_ELEMENT_U16_SETUP_OFFSET_SHIFT					30
+#define   NVC0TCL_VB_ELEMENT_U16_SETUP_OFFSET_MASK					0xc0000000
+#define   NVC0TCL_VB_ELEMENT_U16_SETUP_COUNT_SHIFT					0
+#define   NVC0TCL_VB_ELEMENT_U16_SETUP_COUNT_MASK					0x3fffffff
+#define  NVC0TCL_VB_ELEMENT_U16								0x000015f0
+#define   NVC0TCL_VB_ELEMENT_U16_I0_SHIFT						0
+#define   NVC0TCL_VB_ELEMENT_U16_I0_MASK						0x0000ffff
+#define   NVC0TCL_VB_ELEMENT_U16_I1_SHIFT						16
+#define   NVC0TCL_VB_ELEMENT_U16_I1_MASK						0xffff0000
+#define  NVC0TCL_VERTEX_BASE_HIGH							0x000015f4
+#define  NVC0TCL_VERTEX_BASE_LOW							0x000015f8
+#define  NVC0TCL_CODE_ADDRESS_HIGH							0x00001608
+#define  NVC0TCL_CODE_ADDRESS_LOW							0x0000160c
+#define  NVC0TCL_VERTEX_BEGIN								0x00001618
+#define   NVC0TCL_VERTEX_BEGIN_MODE_SHIFT						0
+#define   NVC0TCL_VERTEX_BEGIN_MODE_MASK						0x0000000f
+#define    NVC0TCL_VERTEX_BEGIN_MODE_POINTS						0x00000000
+#define    NVC0TCL_VERTEX_BEGIN_MODE_LINES						0x00000001
+#define    NVC0TCL_VERTEX_BEGIN_MODE_LINE_LOOP						0x00000002
+#define    NVC0TCL_VERTEX_BEGIN_MODE_LINE_STRIP						0x00000003
+#define    NVC0TCL_VERTEX_BEGIN_MODE_TRIANGLES						0x00000004
+#define    NVC0TCL_VERTEX_BEGIN_MODE_TRIANGLE_STRIP					0x00000005
+#define    NVC0TCL_VERTEX_BEGIN_MODE_TRIANGLE_FAN					0x00000006
+#define    NVC0TCL_VERTEX_BEGIN_MODE_QUADS						0x00000007
+#define    NVC0TCL_VERTEX_BEGIN_MODE_QUAD_STRIP						0x00000008
+#define    NVC0TCL_VERTEX_BEGIN_MODE_POLYGON						0x00000009
+#define    NVC0TCL_VERTEX_BEGIN_MODE_LINES_ADJACENCY					0x0000000a
+#define    NVC0TCL_VERTEX_BEGIN_MODE_LINE_STRIP_ADJACENCY				0x0000000b
+#define    NVC0TCL_VERTEX_BEGIN_MODE_TRIANGLES_ADJACENCY				0x0000000c
+#define    NVC0TCL_VERTEX_BEGIN_MODE_TRIANGLE_STRIP_ADJACENCY				0x0000000d
+#define    NVC0TCL_VERTEX_BEGIN_MODE_PATCHES						0x0000000e
+#define   NVC0TCL_VERTEX_BEGIN_INSTANCE							(1 << 26)
+#define  NVC0TCL_VERTEX_END								0x00001614
+#define  NVC0TCL_VERTEX_DATA								0x00001640
+#define  NVC0TCL_PRIM_RESTART_ENABLE							0x00001644
+#define  NVC0TCL_PRIM_RESTART_INDEX							0x00001648
+#define  NVC0TCL_POINT_SMOOTH_ENABLE							0x00001658
+#define  NVC0TCL_POINT_SPRITE_CTRL							0x00001660
+#define  NVC0TCL_LINE_STIPPLE_ENABLE							0x0000166c
+#define  NVC0TCL_LINE_STIPPLE_PATTERN							0x00001680
+#define  NVC0TCL_PROVOKING_VERTEX_LAST							0x00001684
+#define  NVC0TCL_VERTEX_TWO_SIDE_ENABLE							0x00001688
+#define  NVC0TCL_POLYGON_STIPPLE_ENABLE							0x0000168c
+#define  NVC0TCL_POLYGON_STIPPLE_PATTERN(x)						(0x00001700+((x)*4))
+#define  NVC0TCL_POLYGON_STIPPLE_PATTERN__SIZE						0x00000020
+#define  NVC0TCL_UNK17BC_ADDRESS_HIGH							0x000017bc
+#define  NVC0TCL_UNK17BC_ADDRESS_LOW							0x000017c0
+#define  NVC0TCL_UNK17BC_LIMIT								0x000017c4
+#define  NVC0TCL_VP_POINT_SIZE_EN							0x00001910
+#define  NVC0TCL_CULL_FACE_ENABLE							0x00001918
+#define  NVC0TCL_FRONT_FACE								0x0000191c
+#define   NVC0TCL_FRONT_FACE_CW								0x00000900
+#define   NVC0TCL_FRONT_FACE_CCW							0x00000901
+#define  NVC0TCL_CULL_FACE								0x00001920
+#define   NVC0TCL_CULL_FACE_FRONT							0x00000404
+#define   NVC0TCL_CULL_FACE_BACK							0x00000405
+#define   NVC0TCL_CULL_FACE_FRONT_AND_BACK						0x00000408
+#define  NVC0TCL_VIEWPORT_TRANSFORM_EN							0x0000192c
+#define  NVC0TCL_VIEW_VOLUME_CLIP_CTRL							0x0000193c
+#define  NVC0TCL_VIEWPORT_CLIP_RECTS_EN							0x0000194c
+#define  NVC0TCL_VIEWPORT_CLIP_MODE							0x00001950
+#define   NVC0TCL_VIEWPORT_CLIP_MODE_INCLUDE						0x00000000
+#define   NVC0TCL_VIEWPORT_CLIP_MODE_EXCLUDE						0x00000001
+#define   NVC0TCL_VIEWPORT_CLIP_MODE_UNKNOWN						0x00000002
+#define  NVC0TCL_FP_ZORDER_CTRL								0x0000196c
+#define  NVC0TCL_CLIPID_ENABLE								0x0000197c
+#define  NVC0TCL_CLIPID_WIDTH								0x00001980
+#define  NVC0TCL_CLIPID_ID								0x00001984
+#define  NVC0TCL_REG_MODE								0x000019a0
+#define   NVC0TCL_REG_MODE_PACKED							0x00000001
+#define   NVC0TCL_REG_MODE_STRIPED							0x00000002
+#define  NVC0TCL_FP_CONTROL								0x000019a8
+#define   NVC0TCL_FP_CONTROL_MULTIPLE_RESULTS						(1 <<  0)
+#define   NVC0TCL_FP_CONTROL_EXPORTS_Z							(1 <<  8)
+#define   NVC0TCL_FP_CONTROL_USES_KIL							(1 << 20)
+#define  NVC0TCL_DEPTH_BOUNDS_EN							0x000019bc
+#define  NVC0TCL_LOGIC_OP_ENABLE							0x000019c4
+#define  NVC0TCL_LOGIC_OP								0x000019c8
+#define   NVC0TCL_LOGIC_OP_CLEAR							0x00001500
+#define   NVC0TCL_LOGIC_OP_AND								0x00001501
+#define   NVC0TCL_LOGIC_OP_AND_REVERSE							0x00001502
+#define   NVC0TCL_LOGIC_OP_COPY								0x00001503
+#define   NVC0TCL_LOGIC_OP_AND_INVERTED							0x00001504
+#define   NVC0TCL_LOGIC_OP_NOOP								0x00001505
+#define   NVC0TCL_LOGIC_OP_XOR								0x00001506
+#define   NVC0TCL_LOGIC_OP_OR								0x00001507
+#define   NVC0TCL_LOGIC_OP_NOR								0x00001508
+#define   NVC0TCL_LOGIC_OP_EQUIV							0x00001509
+#define   NVC0TCL_LOGIC_OP_INVERT							0x0000150a
+#define   NVC0TCL_LOGIC_OP_OR_REVERSE							0x0000150b
+#define   NVC0TCL_LOGIC_OP_COPY_INVERTED						0x0000150c
+#define   NVC0TCL_LOGIC_OP_OR_INVERTED							0x0000150d
+#define   NVC0TCL_LOGIC_OP_NAND								0x0000150e
+#define   NVC0TCL_LOGIC_OP_SET								0x0000150f
+#define  NVC0TCL_CLEAR_BUFFERS								0x000019d0
+#define   NVC0TCL_CLEAR_BUFFERS_Z							(1 <<  0)
+#define   NVC0TCL_CLEAR_BUFFERS_S							(1 <<  1)
+#define   NVC0TCL_CLEAR_BUFFERS_R							(1 <<  2)
+#define   NVC0TCL_CLEAR_BUFFERS_G							(1 <<  3)
+#define   NVC0TCL_CLEAR_BUFFERS_B							(1 <<  4)
+#define   NVC0TCL_CLEAR_BUFFERS_A							(1 <<  5)
+#define   NVC0TCL_CLEAR_BUFFERS_RT_SHIFT						6
+#define   NVC0TCL_CLEAR_BUFFERS_RT_MASK							0x000003c0
+#define   NVC0TCL_CLEAR_BUFFERS_LAYER_SHIFT						10
+#define   NVC0TCL_CLEAR_BUFFERS_LAYER_MASK						0x0007fc00
+#define  NVC0TCL_COLOR_MASK(x)								(0x00001a00+((x)*4))
+#define  NVC0TCL_COLOR_MASK__SIZE							0x00000008
+#define   NVC0TCL_COLOR_MASK_R_SHIFT							0
+#define   NVC0TCL_COLOR_MASK_R_MASK							0x0000000f
+#define   NVC0TCL_COLOR_MASK_G_SHIFT							4
+#define   NVC0TCL_COLOR_MASK_G_MASK							0x000000f0
+#define   NVC0TCL_COLOR_MASK_B_SHIFT							8
+#define   NVC0TCL_COLOR_MASK_B_MASK							0x00000f00
+#define   NVC0TCL_COLOR_MASK_A_SHIFT							12
+#define   NVC0TCL_COLOR_MASK_A_MASK							0x0000f000
+#define  NVC0TCL_QUERY_ADDRESS_HIGH							0x00001b00
+#define  NVC0TCL_QUERY_ADDRESS_LOW							0x00001b04
+#define  NVC0TCL_QUERY_SEQUENCE								0x00001b08
+#define  NVC0TCL_QUERY_GET								0x00001b0c
+#define  NVC0TCL_VERTEX_ARRAY_FETCH(x)							(0x00001c00+((x)*16))
+#define  NVC0TCL_VERTEX_ARRAY_FETCH__SIZE						0x00000020
+#define   NVC0TCL_VERTEX_ARRAY_FETCH_STRIDE_SHIFT					0
+#define   NVC0TCL_VERTEX_ARRAY_FETCH_STRIDE_MASK					0x00000fff
+#define   NVC0TCL_VERTEX_ARRAY_FETCH_ENABLE						(1 << 12)
+#define  NVC0TCL_BLEND_EQUATIONI_RGB(x)							(0x00001e04+((x)*32))
+#define  NVC0TCL_BLEND_EQUATIONI_RGB__SIZE						0x00000008
+#define   NVC0TCL_BLEND_EQUATIONI_RGB_FUNC_ADD						0x00008006
+#define   NVC0TCL_BLEND_EQUATIONI_RGB_MIN						0x00008007
+#define   NVC0TCL_BLEND_EQUATIONI_RGB_MAX						0x00008008
+#define   NVC0TCL_BLEND_EQUATIONI_RGB_FUNC_SUBTRACT					0x0000800a
+#define   NVC0TCL_BLEND_EQUATIONI_RGB_FUNC_REVERSE_SUBTRACT				0x0000800b
+#define  NVC0TCL_BLEND_FUNCI_SRC_RGB(x)							(0x00001e08+((x)*32))
+#define  NVC0TCL_BLEND_FUNCI_SRC_RGB__SIZE						0x00000008
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_SRC_COLOR						0x00004300
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_SRC_ALPHA						0x00004302
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_DST_ALPHA						0x00004304
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_DST_COLOR						0x00004306
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNCI_SRC_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_FUNCI_DST_RGB(x)							(0x00001e0c+((x)*32))
+#define  NVC0TCL_BLEND_FUNCI_DST_RGB__SIZE						0x00000008
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_SRC_COLOR						0x00004300
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_SRC_ALPHA						0x00004302
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_DST_ALPHA						0x00004304
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_DST_COLOR						0x00004306
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_CONSTANT_COLOR				0x0000c002
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_CONSTANT_ALPHA				0x0000c004
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNCI_DST_RGB_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_EQUATIONI_ALPHA(x)						(0x00001e10+((x)*32))
+#define  NVC0TCL_BLEND_EQUATIONI_ALPHA__SIZE						0x00000008
+#define   NVC0TCL_BLEND_EQUATIONI_ALPHA_FUNC_ADD					0x00008006
+#define   NVC0TCL_BLEND_EQUATIONI_ALPHA_MIN						0x00008007
+#define   NVC0TCL_BLEND_EQUATIONI_ALPHA_MAX						0x00008008
+#define   NVC0TCL_BLEND_EQUATIONI_ALPHA_FUNC_SUBTRACT					0x0000800a
+#define   NVC0TCL_BLEND_EQUATIONI_ALPHA_FUNC_REVERSE_SUBTRACT				0x0000800b
+#define  NVC0TCL_BLEND_FUNCI_SRC_ALPHA(x)						(0x00001e14+((x)*32))
+#define  NVC0TCL_BLEND_FUNCI_SRC_ALPHA__SIZE						0x00000008
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_SRC_COLOR					0x00004300
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_SRC_ALPHA					0x00004302
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_DST_ALPHA					0x00004304
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_DST_COLOR					0x00004306
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_CONSTANT_COLOR			0x0000c002
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_CONSTANT_ALPHA			0x0000c004
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNCI_SRC_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_BLEND_FUNCI_DST_ALPHA(x)						(0x00001e18+((x)*32))
+#define  NVC0TCL_BLEND_FUNCI_DST_ALPHA__SIZE						0x00000008
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ZERO						0x00004000
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE						0x00004001
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_SRC_COLOR					0x00004300
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_SRC_COLOR				0x00004301
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_SRC_ALPHA					0x00004302
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_SRC_ALPHA				0x00004303
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_DST_ALPHA					0x00004304
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_DST_ALPHA				0x00004305
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_DST_COLOR					0x00004306
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_DST_COLOR				0x00004307
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_SRC_ALPHA_SATURATE				0x00004308
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_CONSTANT_COLOR					0x0000c001
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_CONSTANT_COLOR			0x0000c002
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_CONSTANT_ALPHA					0x0000c003
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_CONSTANT_ALPHA			0x0000c004
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_SRC1_COLOR					0x0000c900
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_SRC1_COLOR				0x0000c901
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_SRC1_ALPHA					0x0000c902
+#define   NVC0TCL_BLEND_FUNCI_DST_ALPHA_ONE_MINUS_SRC1_ALPHA				0x0000c903
+#define  NVC0TCL_SP_SELECT(x)								(0x00002000+((x)*64))
+#define  NVC0TCL_SP_SELECT__SIZE							0x00000006
+#define   NVC0TCL_SP_SELECT_ENABLE							(1 <<  0)
+#define   NVC0TCL_SP_SELECT_PROGRAM_SHIFT						4
+#define   NVC0TCL_SP_SELECT_PROGRAM_MASK						0x000000f0
+#define  NVC0TCL_SP_START_ID(x)								(0x00002004+((x)*64))
+#define  NVC0TCL_SP_START_ID__SIZE							0x00000006
+#define  NVC0TCL_SP_GPR_ALLOC(x)							(0x0000200c+((x)*64))
+#define  NVC0TCL_SP_GPR_ALLOC__SIZE							0x00000006
+#define  NVC0TCL_CB_SIZE								0x00002380
+#define  NVC0TCL_CB_BIND(x)								(0x00002410+((x)*32))
+#define  NVC0TCL_CB_BIND__SIZE								0x00000005
+#define   NVC0TCL_CB_BIND_VALID								(1 <<  0)
+#define   NVC0TCL_CB_BIND_INDEX_SHIFT							4
+#define   NVC0TCL_CB_BIND_INDEX_MASK							0x000000f0
+#define  NVC0TCL_BIND_TIC(x)								(0x00002404+((x)*32))
+#define  NVC0TCL_BIND_TIC__SIZE								0x00000005
+#define   NVC0TCL_BIND_TIC_ACTIVE							(1 <<  0)
+#define   NVC0TCL_BIND_TIC_TEXTURE_SHIFT						1
+#define   NVC0TCL_BIND_TIC_TEXTURE_MASK							0x000001fe
+#define   NVC0TCL_BIND_TIC_TIC_SHIFT							9
+#define   NVC0TCL_BIND_TIC_TIC_MASK							0x7ffffe00
+#define  NVC0TCL_TEX_LIMITS(x)								(0x00002200+((x)*16))
+#define  NVC0TCL_TEX_LIMITS__SIZE							0x00000005
+#define   NVC0TCL_TEX_LIMITS_SAMPLERS_LOG2_SHIFT					0
+#define   NVC0TCL_TEX_LIMITS_SAMPLERS_LOG2_MASK						0x0000000f
+#define   NVC0TCL_TEX_LIMITS_TEXTURES_LOG2_SHIFT					4
+#define   NVC0TCL_TEX_LIMITS_TEXTURES_LOG2_MASK						0x000000f0
+#define  NVC0TCL_CB_ADDR_HIGH								0x00002384
+#define  NVC0TCL_CB_ADDR_LOW								0x00002388
+#define  NVC0TCL_CB_POS									0x0000238c
+#define  NVC0TCL_CB_DATA(x)								(0x00002390+((x)*4))
+#define  NVC0TCL_CB_DATA__SIZE								0x00000010
+#define  NVC0TCL_TFB_VARYING_LOCS(x)							(0x00002800+((x)*4))
+#define  NVC0TCL_TFB_VARYING_LOCS__SIZE							0x00000080
+#define  NVC0TCL_UNK_UPLOAD_POS								0x00003800
+#define  NVC0TCL_UNK_UPLOAD_DATA							0x00003804
+#define  NVC0TCL_VERTEX_ARRAY_SELECT							0x00003820
+#define  NVC0TCL_VERTEX_ARRAY_ADDRESS							0x00003824
+#define  NVC0TCL_BLEND_ENABLEI								0x00003858
+#define  NVC0TCL_POLYGON_MODE_FRONT							0x00003868
+#define   NVC0TCL_POLYGON_MODE_FRONT_POINT						0x00001b00
+#define   NVC0TCL_POLYGON_MODE_FRONT_LINE						0x00001b01
+#define   NVC0TCL_POLYGON_MODE_FRONT_FILL						0x00001b02
+#define  NVC0TCL_POLYGON_MODE_BACK							0x00003870
+#define   NVC0TCL_POLYGON_MODE_BACK_POINT						0x00001b00
+#define   NVC0TCL_POLYGON_MODE_BACK_LINE						0x00001b01
+#define   NVC0TCL_POLYGON_MODE_BACK_FILL						0x00001b02
+#define  NVC0TCL_GP_SELECT								0x00003878
+#define   NVC0TCL_GP_SELECT_ENABLE							(1 <<  0)
+#define   NVC0TCL_GP_SELECT_PROGRAM_SHIFT						4
+#define   NVC0TCL_GP_SELECT_PROGRAM_MASK						0x000000f0
+#define  NVC0TCL_TEP_SELECT								0x00003880
+#define   NVC0TCL_TEP_SELECT_ENABLE							(1 <<  0)
+#define   NVC0TCL_TEP_SELECT_PROGRAM_SHIFT						4
+#define   NVC0TCL_TEP_SELECT_PROGRAM_MASK						0x000000f0
+
+
+#define NVC0_COMPUTE									0x000090c0
+
+#define  NVC0_COMPUTE_NOP								0x00000100
+#define  NVC0_COMPUTE_NOTIFY								0x00000104
+#define  NVC0_COMPUTE_SERIALIZE								0x00000110
+#define  NVC0_COMPUTE_LOCAL_SIZE							0x00000204
+#define  NVC0_COMPUTE_SHARED_BASE							0x00000214
+#define  NVC0_COMPUTE_GRIDDIM_YX							0x00000238
+#define   NVC0_COMPUTE_GRIDDIM_YX_X_SHIFT						0
+#define   NVC0_COMPUTE_GRIDDIM_YX_X_MASK						0x0000ffff
+#define   NVC0_COMPUTE_GRIDDIM_YX_Y_SHIFT						16
+#define   NVC0_COMPUTE_GRIDDIM_YX_Y_MASK						0xffff0000
+#define  NVC0_COMPUTE_GRIDDIM_Z								0x0000023c
+#define  NVC0_COMPUTE_SHARED_SIZE							0x0000024c
+#define  NVC0_COMPUTE_BLOCK_ALLOC							0x00000250
+#define   NVC0_COMPUTE_BLOCK_ALLOC_THREADS_SHIFT					0
+#define   NVC0_COMPUTE_BLOCK_ALLOC_THREADS_MASK						0x0000ffff
+#define   NVC0_COMPUTE_BLOCK_ALLOC_BARRIERS_SHIFT					16
+#define   NVC0_COMPUTE_BLOCK_ALLOC_BARRIERS_MASK					0xffff0000
+#define  NVC0_COMPUTE_CP_GPR_ALLOC							0x000002c0
+#define  NVC0_COMPUTE_GLOBAL_BASE							0x000002c8
+#define   NVC0_COMPUTE_GLOBAL_BASE_HIGH_SHIFT						0
+#define   NVC0_COMPUTE_GLOBAL_BASE_HIGH_MASK						0x000000ff
+#define   NVC0_COMPUTE_GLOBAL_BASE_INDEX_SHIFT						16
+#define   NVC0_COMPUTE_GLOBAL_BASE_INDEX_MASK						0x00ff0000
+#define   NVC0_COMPUTE_GLOBAL_BASE_FLAGS_SHIFT						28
+#define   NVC0_COMPUTE_GLOBAL_BASE_FLAGS_MASK						0xf0000000
+#define  NVC0_COMPUTE_LAUNCH								0x00000368
+#define  NVC0_COMPUTE_BLOCKDIM_YX							0x000003ac
+#define   NVC0_COMPUTE_BLOCKDIM_YX_X_SHIFT						0
+#define   NVC0_COMPUTE_BLOCKDIM_YX_X_MASK						0x0000ffff
+#define   NVC0_COMPUTE_BLOCKDIM_YX_Y_SHIFT						16
+#define   NVC0_COMPUTE_BLOCKDIM_YX_Y_MASK						0xffff0000
+#define  NVC0_COMPUTE_BLOCKDIM_Z							0x000003b0
+#define  NVC0_COMPUTE_CP_START_ID							0x000003b4
+#define  NVC0_COMPUTE_LOCAL_BASE							0x0000077c
+#define  NVC0_COMPUTE_UNK0790_ADDRESS_HIGH						0x00000790
+#define  NVC0_COMPUTE_UNK0790_ADDRESS_LOW						0x00000794
+#define  NVC0_COMPUTE_LINKED_TSC							0x00001234
+#define  NVC0_COMPUTE_TSC_ADDRESS_HIGH							0x0000155c
+#define  NVC0_COMPUTE_TSC_ADDRESS_LOW							0x00001560
+#define  NVC0_COMPUTE_TSC_LIMIT								0x00001564
+#define  NVC0_COMPUTE_TIC_ADDRESS_HIGH							0x00001574
+#define  NVC0_COMPUTE_TIC_ADDRESS_LOW							0x00001578
+#define  NVC0_COMPUTE_TIC_LIMIT								0x0000157c
+#define  NVC0_COMPUTE_CODE_ADDRESS_HIGH							0x00001608
+#define  NVC0_COMPUTE_CODE_ADDRESS_LOW							0x0000160c
+#define  NVC0_COMPUTE_CB_BIND								0x00001694
+#define   NVC0_COMPUTE_CB_BIND_INDEX_SHIFT						1
+#define   NVC0_COMPUTE_CB_BIND_INDEX_MASK						0xfffffffe
+#define   NVC0_COMPUTE_CB_BIND_VALID							(1 <<  0)
+#define  NVC0_COMPUTE_QUERY_ADDRESS_HIGH						0x00001b00
+#define  NVC0_COMPUTE_QUERY_ADDRESS_LOW							0x00001b04
+#define  NVC0_COMPUTE_QUERY_SEQUENCE							0x00001b08
+#define  NVC0_COMPUTE_QUERY_GET								0x00001b0c
+#define  NVC0_COMPUTE_CB_ADDRESS_HIGH							0x00002384
+#define  NVC0_COMPUTE_CB_ADDRESS_LOW							0x00002388
+#define  NVC0_COMPUTE_CB_POS								0x0000238c
+#define  NVC0_COMPUTE_CB_DATA								0x00002390
+
+
 #endif /* NOUVEAU_REG_H */
diff --git a/src/nouveau_dri2.c b/src/nouveau_dri2.c
index e33bf16..9082515 100644
--- a/src/nouveau_dri2.c
+++ b/src/nouveau_dri2.c
@@ -30,7 +30,7 @@ nouveau_dri2_create_buffer(DrawablePtr pDraw, unsigned int attachment,
 	struct nouveau_dri2_buffer *nvbuf;
 	PixmapPtr ppix;
 
-	nvbuf = xcalloc(1, sizeof(*nvbuf));
+	nvbuf = calloc(1, sizeof(*nvbuf));
 	if (!nvbuf)
 		return NULL;
 
@@ -81,7 +81,7 @@ nouveau_dri2_destroy_buffer(DrawablePtr pDraw, DRI2BufferPtr buf)
 		return;
 
 	pDraw->pScreen->DestroyPixmap(nvbuf->ppix);
-	xfree(nvbuf);
+	free(nvbuf);
 }
 
 void
diff --git a/src/nouveau_exa.c b/src/nouveau_exa.c
index 964bc73..1b8888e 100644
--- a/src/nouveau_exa.c
+++ b/src/nouveau_exa.c
@@ -322,13 +322,13 @@ nouveau_exa_create_pixmap(ScreenPtr pScreen, int width, int height, int depth,
 	int ret, size, cpp = bitsPerPixel >> 3;
 
 	if (!width || !height)
-		return xcalloc(1, sizeof(*nvpix));
+		return calloc(1, sizeof(*nvpix));
 
 	if (!pNv->exa_force_cp &&
 	     pNv->dev->vm_vram_size <= 32*1024*1024)
 		return NULL;
 
-	nvpix = xcalloc(1, sizeof(*nvpix));
+	nvpix = calloc(1, sizeof(*nvpix));
 	if (!nvpix)
 		return NULL;
 
@@ -369,7 +369,7 @@ nouveau_exa_create_pixmap(ScreenPtr pScreen, int width, int height, int depth,
 	ret = nouveau_bo_new_tile(pNv->dev, flags, 0, size, tile_mode,
 				  tile_flags, &nvpix->bo);
 	if (ret) {
-		xfree(nvpix);
+		free(nvpix);
 		return NULL;
 	}
 
@@ -385,7 +385,7 @@ nouveau_exa_destroy_pixmap(ScreenPtr pScreen, void *priv)
 		return;
 
 	nouveau_bo_ref(NULL, &nvpix->bo);
-	xfree(nvpix);
+	free(nvpix);
 }
 
 bool
diff --git a/src/nouveau_wfb.c b/src/nouveau_wfb.c
index adee492..7575672 100644
--- a/src/nouveau_wfb.c
+++ b/src/nouveau_wfb.c
@@ -79,7 +79,7 @@ nouveau_wfb_rd_tiled(const void *ptr, int size) {
 
 	offset -= wfb->base;
 
-	y = (offset * wfb->multiply_factor) >> 32;
+	y = (offset * wfb->multiply_factor) >> 36;
 	x = offset - y * wfb->pitch;
 
 	offset  = (x >> TP) + ((y >> TH) * wfb->horiz_tiles);
@@ -111,7 +111,7 @@ nouveau_wfb_wr_tiled(void *ptr, FbBits value, int size) {
 
 	offset -= wfb->base;
 
-	y = (offset * wfb->multiply_factor) >> 32;
+	y = (offset * wfb->multiply_factor) >> 36;
 	x = offset - y * wfb->pitch;
 
 	offset  = (x >> TP) + ((y >> TH) * wfb->horiz_tiles);
@@ -175,7 +175,8 @@ nouveau_wfb_setup_wrap(ReadMemoryProcPtr *pRead, WriteMemoryProcPtr *pWrite,
 		wfb->pitch = 0;
 	} else {
 		wfb->pitch = ppix->devKind;
-		wfb->multiply_factor = (0xFFFFFFFF / wfb->pitch) + 1;
+		/* 8192x8192x4 is 28 bits max, 64 - 28 == 36. */
+		wfb->multiply_factor = (((1ULL << 36) - 1) / wfb->pitch) + 1;
 		wfb->tile_height = bo->tile_mode + 2;
 		wfb->horiz_tiles = wfb->pitch / 64;
 		have_tiled = 1;
diff --git a/src/nouveau_xv.c b/src/nouveau_xv.c
index d1f87c3..4437aa6 100644
--- a/src/nouveau_xv.c
+++ b/src/nouveau_xv.c
@@ -1579,7 +1579,7 @@ NVSetupBlitVideo (ScreenPtr pScreen)
 	NVPortPrivPtr       pPriv;
 	int i;
 
-	if (!(adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+	if (!(adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 					sizeof(NVPortPrivRec) +
 					(sizeof(DevUnion) * NUM_BLIT_PORTS)))) {
 		return NULL;
@@ -1647,7 +1647,7 @@ NVSetupOverlayVideoAdapter(ScreenPtr pScreen)
 	XF86VideoAdaptorPtr adapt;
 	NVPortPrivPtr       pPriv;
 
-	if (!(adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+	if (!(adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 					sizeof(NVPortPrivRec) +
 					sizeof(DevUnion)))) {
 		return NULL;
@@ -1843,7 +1843,7 @@ NV30SetupTexturedVideo (ScreenPtr pScreen, Bool bicubic)
 	NVPortPrivPtr pPriv;
 	int i;
 
-	if (!(adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+	if (!(adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 				 sizeof(NVPortPrivRec) +
 				 (sizeof(DevUnion) * NUM_TEXTURE_PORTS)))) {
 		return NULL;
@@ -1924,7 +1924,7 @@ NV40SetupTexturedVideo (ScreenPtr pScreen, Bool bicubic)
 	NVPortPrivPtr pPriv;
 	int i;
 
-	if (!(adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+	if (!(adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 				 sizeof(NVPortPrivRec) +
 				 (sizeof(DevUnion) * NUM_TEXTURE_PORTS)))) {
 		return NULL;
@@ -1995,7 +1995,7 @@ NV50SetupTexturedVideo (ScreenPtr pScreen)
 	NVPortPrivPtr pPriv;
 	int i;
 
-	if (!(adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+	if (!(adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 				 sizeof(NVPortPrivRec) +
 				 (sizeof(DevUnion) * NUM_TEXTURE_PORTS)))) {
 		return NULL;
@@ -2099,7 +2099,7 @@ NVInitVideo(ScreenPtr pScreen)
 		if(textureAdaptor[0]) size++;
 		if(textureAdaptor[1]) size++;
 
-		newAdaptors = xalloc(size * sizeof(XF86VideoAdaptorPtr *));
+		newAdaptors = malloc(size * sizeof(XF86VideoAdaptorPtr *));
 		if(newAdaptors) {
 			if(num_adaptors) {
 				memcpy(newAdaptors, adaptors, num_adaptors *
@@ -2133,14 +2133,14 @@ NVInitVideo(ScreenPtr pScreen)
 	if (num_adaptors)
 		xf86XVScreenInit(pScreen, adaptors, num_adaptors);
 	if (newAdaptors)
-		xfree(newAdaptors);
+		free(newAdaptors);
 	
 	/*
 	 * For now we associate with the plain texture adapter since it is logical, but we can
 	 * associate with any/all adapters since VL doesn't depend on Xv for color conversion.
 	 */
 	if (textureAdaptor[0]) {
-		XF86MCAdaptorPtr *adaptorsXvMC = xalloc(sizeof(XF86MCAdaptorPtr));
+		XF86MCAdaptorPtr *adaptorsXvMC = malloc(sizeof(XF86MCAdaptorPtr));
 		
 		if (adaptorsXvMC) {
 			adaptorsXvMC[0] = vlCreateAdaptorXvMC(pScreen, textureAdaptor[0]->name);
@@ -2150,7 +2150,7 @@ NVInitVideo(ScreenPtr pScreen)
 				vlDestroyAdaptorXvMC(adaptorsXvMC[0]);
 			}
 			
-			xfree(adaptorsXvMC);
+			free(adaptorsXvMC);
 		}
 	}
 }
diff --git a/src/nv30_exa.c b/src/nv30_exa.c
index b736fb3..b34b29c 100644
--- a/src/nv30_exa.c
+++ b/src/nv30_exa.c
@@ -109,7 +109,7 @@ NV30EXAHackupA8Shaders(ScrnInfoPtr pScrn)
 		nv_shader_t *def, *a8;
 
 		def = nv40_fp_map[s];
-		a8 = xcalloc(1, sizeof(nv_shader_t));
+		a8 = calloc(1, sizeof(nv_shader_t));
 		a8->card_priv.NV30FP.num_regs = def->card_priv.NV30FP.num_regs;
 		a8->size = def->size + 4;
 		memcpy(a8->data, def->data, def->size * sizeof(uint32_t));
diff --git a/src/nv40_exa.c b/src/nv40_exa.c
index c2717f7..ffee0e6 100644
--- a/src/nv40_exa.c
+++ b/src/nv40_exa.c
@@ -104,7 +104,7 @@ NV40EXAHackupA8Shaders(ScrnInfoPtr pScrn)
 		nv_shader_t *def, *a8;
 
 		def = nv40_fp_map[s];
-		a8 = xcalloc(1, sizeof(nv_shader_t));
+		a8 = calloc(1, sizeof(nv_shader_t));
 		a8->card_priv.NV30FP.num_regs = def->card_priv.NV30FP.num_regs;
 		a8->size = def->size + 4;
 		memcpy(a8->data, def->data, def->size * sizeof(uint32_t));
diff --git a/src/nv50_accel.c b/src/nv50_accel.c
index 1218e18..bbcea23 100644
--- a/src/nv50_accel.c
+++ b/src/nv50_accel.c
@@ -322,8 +322,8 @@ NVAccelInitNV50TCL(ScrnInfoPtr pScrn)
 	BEGIN_RING_NI(chan, tesla, NV50TCL_CB_DATA(0), 34);
 	OUT_RING  (chan, 0x80000008);
 	OUT_RING  (chan, 0x90000408);
-	OUT_RING  (chan, 0x80010400);
-	OUT_RING  (chan, 0x80020404);
+	OUT_RING  (chan, 0x82010400);
+	OUT_RING  (chan, 0x82020404);
 	OUT_RING  (chan, 0xf0400001);
 	OUT_RING  (chan, 0x00008784);
 	OUT_RING  (chan, 0xc0080001);
@@ -334,8 +334,8 @@ NVAccelInitNV50TCL(ScrnInfoPtr pScrn)
 	OUT_RING  (chan, 0x03f078ff);
 	OUT_RING  (chan, 0xb0220015);
 	OUT_RING  (chan, 0x0bf8a677);
-	OUT_RING  (chan, 0x80030400);
-	OUT_RING  (chan, 0x80040404);
+	OUT_RING  (chan, 0x82030400);
+	OUT_RING  (chan, 0x82040404);
 	OUT_RING  (chan, 0xf0400201);
 	OUT_RING  (chan, 0x0000c784);
 	OUT_RING  (chan, 0xc0160009);
diff --git a/src/nv50_exa.c b/src/nv50_exa.c
index a4f09d0..e86f903 100644
--- a/src/nv50_exa.c
+++ b/src/nv50_exa.c
@@ -46,7 +46,7 @@ static struct nv50_exa_state exa_state;
 	struct nouveau_grobj *tesla = pNv->Nv3D; (void)tesla;          \
 	struct nv50_exa_state *state = &exa_state; (void)state
 
-#define BF(f) (NV50TCL_BLEND_FUNC_SRC_RGB_##f | 0x4000)
+#define BF(f) NV50TCL_BLEND_FUNC_SRC_RGB_##f
 
 struct nv50_blend_op {
 	unsigned src_alpha;
@@ -430,26 +430,6 @@ NV50EXAUploadSIFC(const char *src, int src_pitch,
 	return TRUE;
 }
 
-/* Compat defines for pre 1.7 xservers. */
-#ifndef PICT_a2b10g10r10
-#define PICT_a2b10g10r10 PICT_FORMAT(32, PICT_TYPE_ABGR, 2, 10, 10, 10)
-#endif
-#ifndef PICT_x2b10g10r10
-#define PICT_x2b10g10r10  PICT_FORMAT(32, PICT_TYPE_ABGR, 0, 10, 10, 10)
-#endif
-#ifndef  PICT_a2r10g10b10
-#define PICT_a2r10g10b10 PICT_FORMAT(32, PICT_TYPE_ARGB, 2, 10, 10, 10)
-#endif
-#ifndef  PICT_x2r10g10b10
-#define PICT_x2r10g10b10 PICT_FORMAT(32, PICT_TYPE_ARGB, 0, 10, 10, 10)
-#endif 
-#ifndef PICT_b8g8r8a8
-#define PICT_b8g8r8a8 PIXMAN_FORMAT(32,PIXMAN_TYPE_BGRA,8,8,8,8)
-#endif
-#ifndef PICT_b8g8r8x8
-#define PICT_b8g8r8x8 PIXMAN_FORMAT(32,PIXMAN_TYPE_BGRA,0,8,8,8)
-#endif
-
 static Bool
 NV50EXACheckRenderTarget(PicturePtr ppict)
 {
diff --git a/src/nv_driver.c b/src/nv_driver.c
index 4b00e3d..0abe400 100644
--- a/src/nv_driver.c
+++ b/src/nv_driver.c
@@ -218,7 +218,7 @@ NVPciProbe(DriverPtr drv, int entity_num, struct pci_device *pci_dev,
 	ret = nouveau_device_open(&dev, busid);
 	if (ret) {
 		xf86DrvMsg(-1, X_ERROR, "[drm] failed to open device\n");
-		xfree(busid);
+		free(busid);
 		return FALSE;
 	}
 
@@ -237,7 +237,7 @@ NVPciProbe(DriverPtr drv, int entity_num, struct pci_device *pci_dev,
 	nouveau_device_close(&dev);
 
 	ret = drmCheckModesettingSupported(busid);
-	xfree(busid);
+	free(busid);
 	if (ret) {
 		xf86DrvMsg(-1, X_ERROR, "[drm] KMS not enabled\n");
 		return FALSE;
@@ -389,6 +389,10 @@ NVCreateScreenResources(ScreenPtr pScreen)
 		return FALSE;
 	pScreen->CreateScreenResources = NVCreateScreenResources;
 
+	drmmode_fbcon_copy(pScreen);
+	if (!NVEnterVT(pScrn->scrnIndex, 0))
+		return FALSE;
+
 	if (!pNv->NoAccel) {
 		ppix = pScreen->GetScreenPixmap(pScreen);
 		nouveau_bo_ref(pNv->scanout, &nouveau_pixmap(ppix)->bo);
@@ -411,6 +415,8 @@ NVCloseScreen(int scrnIndex, ScreenPtr pScreen)
 	ScrnInfoPtr pScrn = xf86Screens[scrnIndex];
 	NVPtr pNv = NVPTR(pScrn);
 
+	drmmode_uevent_fini(pScrn);
+
 	nouveau_dri2_fini(pScreen);
 
 	if (pScrn->vtSema) {
@@ -426,28 +432,28 @@ NVCloseScreen(int scrnIndex, ScreenPtr pScreen)
 	xf86_cursors_fini(pScreen);
 
 	if (pNv->ShadowPtr) {
-		xfree(pNv->ShadowPtr);
+		free(pNv->ShadowPtr);
 		pNv->ShadowPtr = NULL;
 	}
 	if (pNv->overlayAdaptor) {
-		xfree(pNv->overlayAdaptor);
+		free(pNv->overlayAdaptor);
 		pNv->overlayAdaptor = NULL;
 	}
 	if (pNv->blitAdaptor) {
-		xfree(pNv->blitAdaptor);
+		free(pNv->blitAdaptor);
 		pNv->blitAdaptor = NULL;
 	}
 	if (pNv->textureAdaptor[0]) {
-		xfree(pNv->textureAdaptor[0]);
+		free(pNv->textureAdaptor[0]);
 		pNv->textureAdaptor[0] = NULL;
 	}
 	if (pNv->textureAdaptor[1]) {
-		xfree(pNv->textureAdaptor[1]);
+		free(pNv->textureAdaptor[1]);
 		pNv->textureAdaptor[1] = NULL;
 	}
 	if (pNv->EXADriverPtr) {
 		exaDriverFini(pScreen);
-		xfree(pNv->EXADriverPtr);
+		free(pNv->EXADriverPtr);
 		pNv->EXADriverPtr = NULL;
 	}
 
@@ -476,7 +482,7 @@ NVFreeScreen(int scrnIndex, int flags)
 
 	NVCloseDRM(pScrn);
 
-	xfree(pScrn->driverPrivate);
+	free(pScrn->driverPrivate);
 	pScrn->driverPrivate = NULL;
 }
 
@@ -542,7 +548,7 @@ NVPreInitDRM(ScrnInfoPtr pScrn)
 	/* Load the kernel module, and open the DRM */
 	bus_id = DRICreatePCIBusID(pNv->PciInfo);
 	ret = DRIOpenDRMMaster(pScrn, SAREA_MAX, bus_id, "nouveau");
-	xfree(bus_id);
+	free(bus_id);
 	if (!ret) {
 		xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 			   "[drm] error opening the drm\n");
@@ -578,7 +584,7 @@ NVPreInit(ScrnInfoPtr pScrn, int flags)
 			return FALSE;
 
 		i = pEnt->index;
-		xfree(pEnt);
+		free(pEnt);
 
 		return TRUE;
 	}
@@ -719,7 +725,7 @@ NVPreInit(ScrnInfoPtr pScrn, int flags)
 	xf86CollectOptions(pScrn, NULL);
 
 	/* Process the options */
-	if (!(pNv->Options = xalloc(sizeof(NVOptions))))
+	if (!(pNv->Options = malloc(sizeof(NVOptions))))
 		return FALSE;
 	memcpy(pNv->Options, NVOptions, sizeof(NVOptions));
 	xf86ProcessOptions(pScrn->scrnIndex, pScrn->options, pNv->Options);
@@ -792,6 +798,10 @@ NVPreInit(ScrnInfoPtr pScrn, int flags)
 						     pScrn->depth);
 	}
 
+	/* No usable mode */
+	if (!pScrn->modes)
+		return FALSE;
+
 	/* Set the current mode to the first in the list */
 	pScrn->currentMode = pScrn->modes;
 
@@ -1030,7 +1040,7 @@ NVScreenInit(int scrnIndex, ScreenPtr pScreen, int argc, char **argv)
 
 	if (pNv->ShadowFB) {
 		pNv->ShadowPitch = BitmapBytePad(pScrn->bitsPerPixel * pScrn->virtualX);
-		pNv->ShadowPtr = xalloc(pNv->ShadowPitch * pScrn->virtualY);
+		pNv->ShadowPtr = malloc(pNv->ShadowPitch * pScrn->virtualY);
 		displayWidth = pNv->ShadowPitch / (pScrn->bitsPerPixel >> 3);
 		FBStart = pNv->ShadowPtr;
 	} else
@@ -1132,10 +1142,6 @@ NVScreenInit(int scrnIndex, ScreenPtr pScreen, int argc, char **argv)
 	pNv->BlockHandler = pScreen->BlockHandler;
 	pScreen->BlockHandler = NVBlockHandler;
 
-	drmmode_fbcon_copy(pScreen);
-
-	if (!NVEnterVT(pScrn->scrnIndex, 0))
-		return FALSE;
 	pScrn->vtSema = TRUE;
 	pScrn->pScreen = pScreen;
 
@@ -1167,6 +1173,7 @@ NVScreenInit(int scrnIndex, ScreenPtr pScreen, int argc, char **argv)
 	if (serverGeneration == 1)
 		xf86ShowUnusedOptions(pScrn->scrnIndex, pScrn->options);
 
+	drmmode_uevent_init(pScrn);
 	return TRUE;
 }
 
diff --git a/src/nv_proto.h b/src/nv_proto.h
index 9534f4e..d6791ef 100644
--- a/src/nv_proto.h
+++ b/src/nv_proto.h
@@ -7,6 +7,8 @@ void drmmode_adjust_frame(ScrnInfoPtr pScrn, int x, int y, int flags);
 void drmmode_remove_fb(ScrnInfoPtr pScrn);
 Bool drmmode_cursor_init(ScreenPtr pScreen);
 void drmmode_fbcon_copy(ScreenPtr pScreen);
+void drmmode_uevent_init(ScrnInfoPtr);
+void drmmode_uevent_fini(ScrnInfoPtr);
 
 /* in nv_accel_common.c */
 Bool NVAccelCommonInit(ScrnInfoPtr pScrn);
