Index: suspend-0.8_20100831/plymouth_funcs.c
===================================================================
--- suspend-0.8_20100831.orig/plymouth_funcs.c
+++ suspend-0.8_20100831/plymouth_funcs.c
@@ -70,9 +70,9 @@ int plymouth_update(const char *arg) {
 }
 
 void terminate_plymouth() {
-        ply_keyboard_stop_watching_for_input (keyboard);
+	ply_keyboard_stop_watching_for_input (keyboard);
 	ply_keyboard_remove_input_handler (keyboard, keyboard_input_handler); 
-        ply_boot_splash_unset_keyboard (ply_splash);
+	ply_boot_splash_unset_keyboard (ply_splash);
 	ply_boot_splash_hide (ply_splash);
 	ply_boot_splash_free (ply_splash);
 	ply_progress_free (ply_progress);
@@ -84,7 +84,6 @@ void terminate_plymouth() {
 }
 
 static int plymouth_init() {
-	
 	int ret;
 	ply_key_file_t *key_file;
 	char *splash_string;
@@ -92,9 +91,7 @@ static int plymouth_init() {
 	ply_list_t *heads;
 	ply_list_node_t *node;
 
-
-
-	plymouth_update ("quit");
+	/*plymouth_update ("quit");*/
 	buffer = ply_buffer_new ();
 
 	key_file = ply_key_file_new (PLYMOUTH_CONFDIR "plymouthd.conf");
@@ -122,38 +119,35 @@ static int plymouth_init() {
 	keyboard =  ply_keyboard_new_for_terminal (terminal);
 
 	text_display = ply_text_display_new (terminal);
-  	ply_boot_splash_add_text_display (ply_splash, text_display);
+	ply_boot_splash_add_text_display (ply_splash, text_display);
 
 	heads = ply_renderer_get_heads (renderer);
 	pixel_displays = ply_list_new();
 
-
 	node = ply_list_get_first_node (heads);
 
 	while (node != NULL)
-        { 
-	  ply_list_node_t *next_node;
-          ply_renderer_head_t *head;
-          ply_pixel_display_t *display;
-
-          head = ply_list_node_get_data (node);
-	  next_node = ply_list_get_next_node (heads, node);
-
-	  display = ply_pixel_display_new (renderer, head);
-
-	  ply_list_append_data (pixel_displays, display);
-          node = next_node;
-          ply_boot_splash_add_pixel_display (ply_splash, display);
-         }
+	{
+		ply_list_node_t *next_node;
+		ply_renderer_head_t *head;
+		ply_pixel_display_t *display;
+
+		head = ply_list_node_get_data (node);
+		next_node = ply_list_get_next_node (heads, node);
+
+		display = ply_pixel_display_new (renderer, head);
+
+		ply_list_append_data (pixel_displays, display);
+		node = next_node;
+		ply_boot_splash_add_pixel_display (ply_splash, display);
+	}
 
 	ply_progress = ply_progress_new();
 	ply_boot_splash_attach_progress (ply_splash, ply_progress);
 	ply_boot_splash_attach_to_event_loop (ply_splash, ply_event_loop_get_default());
 
-
-	ply_keyboard_add_input_handler(keyboard, keyboard_input_handler, NULL); 
+	ply_keyboard_add_input_handler(keyboard, keyboard_input_handler, NULL);
 	return ret;
-
 }
 
 int plymouth_open(int mode)
@@ -168,39 +162,33 @@ int plymouth_open(int mode)
 
 	ply_boot_splash_set_keyboard (ply_splash, keyboard);
 	ply_renderer_activate (renderer);
-	if (mode==SPL_RESUME) {
+	if (mode == SPL_RESUME) {
 		ply_boot_splash_show (ply_splash, PLY_BOOT_SPLASH_MODE_RESUME);
+		ply_boot_splash_display_message (ply_splash, "Resuming..." );
 	}
 	else {
 		ply_boot_splash_show (ply_splash, PLY_BOOT_SPLASH_MODE_SUSPEND);
-	       	ply_boot_splash_display_message (ply_splash, "Suspending..." );
+		ply_boot_splash_display_message (ply_splash, "Suspending..." );
 	}
 	ply_keyboard_watch_for_input(keyboard);
-
 	ply_event_loop_process_pending_events (ply_event_loop_get_default());
 
 	return 0;
 }
 
-
 inline int plymouth_finish(void)
 {
-
 	terminate_plymouth();
-
 	return 0;
 }
 
 inline int plymouth_progress(int p)
 {
 	ply_progress_set_percentage (ply_progress, (double) p / 100);
-
 	ply_event_loop_process_pending_events (ply_event_loop_get_default());
-
 	return 0;
 }
 
-
 void plymouth_read_password(char *buf, int vrfy)
 {
 #if 0
@@ -227,11 +215,11 @@ void plymouth_set_caption(const char *me
 	ply_event_loop_process_pending_events (ply_event_loop_get_default());
 }
 
-int plymouth_dialog(const char *prompt) 
+int plymouth_dialog(const char *prompt)
 {
 	key_pressed = 0;
 	ply_progress_pause (ply_progress);
-       	ply_boot_splash_display_message (ply_splash, prompt);
+	ply_boot_splash_display_message (ply_splash, prompt);
 	while (key_pressed == 0) {
 		ply_event_loop_process_pending_events (ply_event_loop_get_default());
 	}
@@ -254,6 +242,4 @@ char plymouth_key_pressed(void) {
 #endif
 //	return 0;
 }
-
-
 #endif
