To: vim-dev@vim.org
Subject: Patch 7.2.327
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.2.327
Problem:    Unused functions in Workshop.
Solution:   Add "#if 0" and minor cleanup. (Dominique Pelle)
Files:	    src/workshop.c, src/integration.c, src/ingegration.h


*** ../vim-7.2.326/src/workshop.c	2009-05-21 23:25:38.000000000 +0200
--- src/workshop.c	2010-01-06 18:10:10.000000000 +0100
***************
*** 56,67 ****
  static void	 load_window(char *, int lnum);
  static void	 warp_to_pc(int);
  #ifdef FEAT_BEVAL
! void		workshop_beval_cb(BalloonEval *, int);
  #endif
  static char	*fixAccelText(char *);
  static void	 addMenu(char *, char *, char *);
  static char	*lookupVerb(char *, int);
- static int	 computeIndex(int, char_u *, int);
  static void	 coloncmd(char *, Boolean);
  
  extern Widget	 vimShell;
--- 56,67 ----
  static void	 load_window(char *, int lnum);
  static void	 warp_to_pc(int);
  #ifdef FEAT_BEVAL
! void		 workshop_beval_cb(BalloonEval *, int);
! static int	 computeIndex(int, char_u *, int);
  #endif
  static char	*fixAccelText(char *);
  static void	 addMenu(char *, char *, char *);
  static char	*lookupVerb(char *, int);
  static void	 coloncmd(char *, Boolean);
  
  extern Widget	 vimShell;
***************
*** 1624,1631 ****
  	}
      }
  }
- #endif
- 
  
      static int
  computeIndex(
--- 1624,1629 ----
***************
*** 1649,1654 ****
--- 1647,1653 ----
  
      return -1;
  }
+ #endif
  
      static void
  addMenu(
*** ../vim-7.2.326/src/integration.c	2008-06-24 22:27:10.000000000 +0200
--- src/integration.c	2010-01-06 18:18:11.000000000 +0100
***************
*** 78,84 ****
  
  /* Functions private to this file */
  static void workshop_connection_closed(void);
! static void messageFromEserve(XtPointer clientData, int *NOTUSED1, XtInputId *NOTUSED2);
  static void workshop_disconnect(void);
  static void workshop_sensitivity(int num, char *table);
  static void adjust_sign_name(char *filename);
--- 78,84 ----
  
  /* Functions private to this file */
  static void workshop_connection_closed(void);
! static void messageFromEserve(XtPointer clientData, int *dum1, XtInputId *dum2);
  static void workshop_disconnect(void);
  static void workshop_sensitivity(int num, char *table);
  static void adjust_sign_name(char *filename);
***************
*** 157,165 ****
  
  }
  
- /*ARGSUSED*/
  void
! messageFromEserve(XtPointer clientData, int *NOTUSED1, XtInputId *NOTUSED2)
  {
  	char	*cmd;		/* the 1st word of the command */
  
--- 157,166 ----
  
  }
  
  void
! messageFromEserve(XtPointer clientData UNUSED,
! 		  int *dum1 UNUSED,
! 		  XtInputId *dum2 UNUSED)
  {
  	char	*cmd;		/* the 1st word of the command */
  
***************
*** 199,205 ****
  			if (sign) {
  				sign++;
  			}
! 			/* Change sign name to accomodate a different size? */
  			adjust_sign_name(sign);
  			workshop_add_mark_type(idx, color, sign);
  		}
--- 200,206 ----
  			if (sign) {
  				sign++;
  			}
! 			/* Change sign name to accommodate a different size? */
  			adjust_sign_name(sign);
  			workshop_add_mark_type(idx, color, sign);
  		}
***************
*** 580,586 ****
  #endif
  
  
! /* Change sign name to accomodate a different size:
   * Create the filename based on the height. The filename format
   * of multisize icons are:
   *    x.xpm   : largest icon
--- 581,587 ----
  #endif
  
  
! /* Change sign name to accommodate a different size:
   * Create the filename based on the height. The filename format
   * of multisize icons are:
   *    x.xpm   : largest icon
***************
*** 614,619 ****
--- 615,621 ----
  		strcpy(s, ".xpm");
  }
  
+ #if 0
  /* Were we invoked by WorkShop? This function can be used early during startup
     if you want to do things differently if the editor is started standalone
     or in WorkShop mode. For example, in standalone mode you may not want to
***************
*** 627,632 ****
--- 629,635 ----
  	}
  	return result;
  }
+ #endif
  
  /* Connect back to eserve */
  void	workshop_connect(XtAppContext context)
***************
*** 750,755 ****
--- 753,759 ----
   * Utility functions
   */
  
+ #if 0
  /* Set icon for the window */
  void
  workshop_set_icon(Display *display, Widget shell, char **xpmdata,
***************
*** 793,798 ****
--- 797,803 ----
  	}
  	XtFree((char *)xpmAttributes.colorsymbols);
  }
+ #endif
  
  /* Minimize and maximize shells. From libutil's shell.cc. */
  
***************
*** 927,933 ****
  	return success;
  }
  
! 
  Boolean workshop_get_rows_cols(int *rows, int *cols)
  {
  	static int	r = 0;
--- 932,938 ----
  	return success;
  }
  
! #if 0
  Boolean workshop_get_rows_cols(int *rows, int *cols)
  {
  	static int	r = 0;
***************
*** 958,963 ****
--- 963,969 ----
  	}
  	return success;
  }
+ #endif
  
  /*
   * Toolbar code
***************
*** 1043,1054 ****
  }
  
  
! 
  /*
   * Send information to eserve on certain editor events
   * You must make sure these are called when necessary
   */
- 
  void workshop_file_closed(char *filename)
  {
  	char buffer[2*MAXPATHLEN];
--- 1049,1059 ----
  }
  
  
! #if 0
  /*
   * Send information to eserve on certain editor events
   * You must make sure these are called when necessary
   */
  void workshop_file_closed(char *filename)
  {
  	char buffer[2*MAXPATHLEN];
***************
*** 1056,1061 ****
--- 1061,1067 ----
  			NOCATGETS("deletedFile %s\n"), filename);
  	write(sd, buffer, strlen(buffer));
  }
+ #endif
  
  void workshop_file_closed_lineno(char *filename, int lineno)
  {
***************
*** 1086,1106 ****
  	workshop_moved_marks(filename);
  }
  
! void workshop_move_mark(char *filename, int markId, int newLineno)
  {
  	char buffer[2*MAXPATHLEN];
  	vim_snprintf(buffer, sizeof(buffer),
! 			NOCATGETS("moveMark %s %d %d\n"), filename, markId, newLineno);
  	write(sd, buffer, strlen(buffer));
  }
  
! void workshop_file_modified(char *filename)
  {
  	char buffer[2*MAXPATHLEN];
  	vim_snprintf(buffer, sizeof(buffer),
! 			NOCATGETS("modifiedFile %s\n"), filename);
  	write(sd, buffer, strlen(buffer));
  }
  
  void workshop_frame_moved(int new_x, int new_y, int new_w, int new_h)
  {
--- 1092,1114 ----
  	workshop_moved_marks(filename);
  }
  
! #if 0
! void workshop_file_modified(char *filename)
  {
  	char buffer[2*MAXPATHLEN];
  	vim_snprintf(buffer, sizeof(buffer),
! 			NOCATGETS("modifiedFile %s\n"), filename);
  	write(sd, buffer, strlen(buffer));
  }
  
! void workshop_move_mark(char *filename, int markId, int newLineno)
  {
  	char buffer[2*MAXPATHLEN];
  	vim_snprintf(buffer, sizeof(buffer),
! 	       NOCATGETS("moveMark %s %d %d\n"), filename, markId, newLineno);
  	write(sd, buffer, strlen(buffer));
  }
+ #endif
  
  void workshop_frame_moved(int new_x, int new_y, int new_w, int new_h)
  {
***************
*** 1179,1188 ****
--- 1187,1198 ----
  }
  
  /* Send a message to eserve */
+ #if defined(NOHANDS_SUPPORT_FUNCTIONS) || defined(FEAT_BEVAL)
  void workshop_send_message(char *buf)
  {
  	write(sd, buf, strlen(buf));
  }
+ #endif
  
  /* Some methods, like currentFile, cursorPos, etc. are missing here.
   * But it looks like these are used for NoHands testing only so we
*** ../vim-7.2.326/src/version.c	2010-01-06 17:46:03.000000000 +0100
--- src/version.c	2010-01-06 18:20:41.000000000 +0100
***************
*** 683,684 ****
--- 683,686 ----
  {   /* Add new patch number below this line */
+ /**/
+     327,
  /**/

-- 
From "know your smileys":
 (:-#	Said something he shouldn't have

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\        download, build and distribute -- http://www.A-A-P.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
