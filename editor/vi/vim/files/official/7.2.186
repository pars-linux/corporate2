To: vim-dev@vim.org
Subject: Patch 7.2.186
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.2.186
Problem:    Some more compiler warnings when using gcc -Wextra.
Solution:   Now with the intended if_tcl.c changes.
Files:	    src/if_tcl.c


*** ../vim-7.2.185/src/if_tcl.c	2007-05-10 20:55:34.000000000 +0200
--- src/if_tcl.c	2009-05-22 15:29:53.000000000 +0200
***************
*** 290,299 ****
   */
  #define TCL_EXIT	5
  
- /* ARGSUSED */
      static int
  exitcmd(dummy, interp, objc, objv)
!     ClientData dummy;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
--- 290,298 ----
   */
  #define TCL_EXIT	5
  
      static int
  exitcmd(dummy, interp, objc, objv)
!     ClientData dummy UNUSED;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
***************
*** 315,324 ****
      return TCL_ERROR;
  }
  
- /* ARGSUSED */
      static int
  catchcmd(dummy, interp, objc, objv)
!     ClientData	dummy;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
--- 314,322 ----
      return TCL_ERROR;
  }
  
      static int
  catchcmd(dummy, interp, objc, objv)
!     ClientData	dummy UNUSED;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
***************
*** 356,365 ****
  /*
   *  "::vim::beep" - what Vi[m] does best :-)
   */
- /* ARGSUSED */
      static int
  beepcmd(dummy, interp, objc, objv)
!     ClientData dummy;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
--- 354,362 ----
  /*
   *  "::vim::beep" - what Vi[m] does best :-)
   */
      static int
  beepcmd(dummy, interp, objc, objv)
!     ClientData dummy UNUSED;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
***************
*** 378,387 ****
   *  "::vim::buffer {N}" - create buffer command for buffer N.
   *  "::vim::buffer new" - create a new buffer (not implemented)
   */
- /* ARGSUSED */
      static int
  buffercmd(dummy, interp, objc, objv)
!     ClientData dummy;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
--- 375,383 ----
   *  "::vim::buffer {N}" - create buffer command for buffer N.
   *  "::vim::buffer new" - create a new buffer (not implemented)
   */
      static int
  buffercmd(dummy, interp, objc, objv)
!     ClientData dummy UNUSED;
      Tcl_Interp *interp;
      int objc;
      Tcl_Obj *CONST objv[];
***************
*** 475,484 ****
  /*
   * "::vim::window list" - create list of window commands.
   */
- /* ARGSUSED */
      static int
  windowcmd(dummy, interp, objc, objv)
!     ClientData	dummy;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
--- 471,479 ----
  /*
   * "::vim::window list" - create list of window commands.
   */
      static int
  windowcmd(dummy, interp, objc, objv)
!     ClientData	dummy UNUSED;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
***************
*** 1130,1139 ****
  }
  
  
- /* ARGSUSED */
      static int
  commandcmd(dummy, interp, objc, objv)
!     ClientData	dummy;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
--- 1125,1133 ----
  }
  
  
      static int
  commandcmd(dummy, interp, objc, objv)
!     ClientData	dummy UNUSED;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
***************
*** 1145,1154 ****
      return err;
  }
  
- /* ARGSUSED */
      static int
  optioncmd(dummy, interp, objc, objv)
!     ClientData	dummy;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
--- 1139,1147 ----
      return err;
  }
  
      static int
  optioncmd(dummy, interp, objc, objv)
!     ClientData	dummy UNUSED;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
***************
*** 1160,1169 ****
      return err;
  }
  
- /* ARGSUSED */
      static int
  exprcmd(dummy, interp, objc, objv)
!     ClientData	dummy;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
--- 1153,1161 ----
      return err;
  }
  
      static int
  exprcmd(dummy, interp, objc, objv)
!     ClientData	dummy UNUSED;
      Tcl_Interp	*interp;
      int		objc;
      Tcl_Obj	*CONST objv[];
***************
*** 1584,1594 ****
      I/O Channel
  ********************************************/
  
- /* ARGSUSED */
      static int
  channel_close(instance, interp)
      ClientData	instance;
!     Tcl_Interp	*interp;
  {
      int		err = 0;
  
--- 1576,1585 ----
      I/O Channel
  ********************************************/
  
      static int
  channel_close(instance, interp)
      ClientData	instance;
!     Tcl_Interp	*interp UNUSED;
  {
      int		err = 0;
  
***************
*** 1602,1613 ****
      return err;
  }
  
- /* ARGSUSED */
      static int
  channel_input(instance, buf, bufsiz, errptr)
!     ClientData	instance;
!     char	*buf;
!     int		bufsiz;
      int		*errptr;
  {
  
--- 1593,1603 ----
      return err;
  }
  
      static int
  channel_input(instance, buf, bufsiz, errptr)
!     ClientData	instance UNUSED;
!     char	*buf UNUSED;
!     int		bufsiz UNUSED;
      int		*errptr;
  {
  
***************
*** 1659,1679 ****
      return result;
  }
  
- /* ARGSUSED */
      static void
  channel_watch(instance, mask)
!     ClientData	instance;
!     int		mask;
  {
      Tcl_SetErrno(EINVAL);
  }
  
- /* ARGSUSED */
      static int
  channel_gethandle(instance, direction, handleptr)
!     ClientData	instance;
!     int		direction;
!     ClientData	*handleptr;
  {
      Tcl_SetErrno(EINVAL);
      return EINVAL;
--- 1649,1667 ----
      return result;
  }
  
      static void
  channel_watch(instance, mask)
!     ClientData	instance UNUSED;
!     int		mask UNUSED;
  {
      Tcl_SetErrno(EINVAL);
  }
  
      static int
  channel_gethandle(instance, direction, handleptr)
!     ClientData	instance UNUSED;
!     int		direction UNUSED;
!     ClientData	*handleptr UNUSED;
  {
      Tcl_SetErrno(EINVAL);
      return EINVAL;
***************
*** 1691,1697 ****
      NULL,   /* set option */
      NULL,   /* get option */
      channel_watch,
!     channel_gethandle
  };
  
  /**********************************
--- 1679,1692 ----
      NULL,   /* set option */
      NULL,   /* get option */
      channel_watch,
!     channel_gethandle,
!     NULL,
!     NULL,
!     NULL,
!     NULL,
!     NULL,
!     NULL,
!     NULL
  };
  
  /**********************************
*** ../vim-7.2.185/src/version.c	2009-05-22 18:20:23.000000000 +0200
--- src/version.c	2009-05-22 21:07:21.000000000 +0200
***************
*** 678,679 ****
--- 678,681 ----
  {   /* Add new patch number below this line */
+ /**/
+     186,
  /**/

-- 
ARTHUR: Old woman!
DENNIS: Man!
ARTHUR: Man.  I'm sorry.  Old man, What knight live in that castle over there?
DENNIS: I'm thirty-seven.
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\        download, build and distribute -- http://www.A-A-P.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
