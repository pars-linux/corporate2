To: vim-dev@vim.org
Subject: Patch 7.2.358
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.2.358
Problem:    Compiler warnings on VMS. (Zoltan Arpadffy)
Solution:   Pass array itself instead its address.  Return a value.
Files:	    src/gui_gtk_x11.c, src/os_unix.c


*** ../vim-7.2.357/src/gui_gtk_x11.c	2009-11-03 18:13:36.000000000 +0100
--- src/gui_gtk_x11.c	2010-02-11 18:00:28.000000000 +0100
***************
*** 6190,6196 ****
  		int pcc[MAX_MCO];
  
  		/* TODO: use the composing characters */
! 		c = utfc_ptr2char_len(p, &pcc, len - (p - s));
  		if (c >= 0x10000)	/* show chars > 0xffff as ? */
  		    c = 0xbf;
  		buf[textlen].byte1 = c >> 8;
--- 6190,6196 ----
  		int pcc[MAX_MCO];
  
  		/* TODO: use the composing characters */
! 		c = utfc_ptr2char_len(p, pcc, len - (p - s));
  		if (c >= 0x10000)	/* show chars > 0xffff as ? */
  		    c = 0xbf;
  		buf[textlen].byte1 = c >> 8;
*** ../vim-7.2.357/src/os_unix.c	2009-07-22 13:27:50.000000000 +0200
--- src/os_unix.c	2010-02-11 18:10:20.000000000 +0100
***************
*** 1471,1476 ****
--- 1471,1479 ----
  {
      /* This function should not return, it causes exit().  Longjump instead. */
      LONGJMP(lc_jump_env, 1);
+ #  ifdef VMS
+     return 0;  /* avoid the compiler complains about missing return value */
+ #  endif
  }
  # endif
  
***************
*** 1490,1495 ****
--- 1493,1501 ----
  
      /* This function should not return, it causes exit().  Longjump instead. */
      LONGJMP(x_jump_env, 1);
+ # ifdef VMS
+     return 0;  /* avoid the compiler complains about missing return value */
+ # endif
  }
  #endif
  
*** ../vim-7.2.357/src/version.c	2010-02-11 17:02:04.000000000 +0100
--- src/version.c	2010-02-11 18:10:45.000000000 +0100
***************
*** 683,684 ****
--- 683,686 ----
  {   /* Add new patch number below this line */
+ /**/
+     358,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
221. Your wife melts your keyboard in the oven.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\        download, build and distribute -- http://www.A-A-P.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
