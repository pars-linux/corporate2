Index: mudur-4.2.0/bin/mudur.py
===================================================================
--- mudur-4.2.0.orig/bin/mudur.py
+++ mudur-4.2.0/bin/mudur.py
@@ -179,16 +179,11 @@ def load_kexec_image():
     """Attempts to load a kexec image if configured."""
     kexec_conf = "/etc/conf.d/kexec"
     loaded = False
-    # Check for grubonce, inhibit kexec if grub has set
-    # a default entry.
-    grub_default = load_file("/boot/grub/default")
-    if grub_default:
-        grub_default = int(grub_default.rstrip("\x00"))
-        grub_default = (grub_default ^ 0x4000 < 0x4000)
-    if not grub_default and \
-            os.path.exists("/usr/sbin/kexec") and \
+    if os.path.exists("/usr/sbin/kexec") and \
             os.path.exists(kexec_conf):
+
         conf = load_config(kexec_conf)
+
         # Read config
         kexec_reboot = conf.get("KEXEC_REBOOT", "no") == "yes"
         kexec_shutdown = conf.get("KEXEC_SHUTDOWN", "no") == "yes"
@@ -198,6 +193,18 @@ def load_kexec_image():
         if kexec_reboot and stage == "reboot" or \
            (kexec_shutdown and stage == "shutdown"):
 
+            # Check for grubonce, inhibit kexec if grub has set
+            # a default entry.
+            grub_default = load_file("/boot/grub/default")
+            if grub_default:
+                grub_default = int(grub_default.strip("\x00"))
+                grub_default = (grub_default ^ 0x4000 < 0x4000)
+
+                if grub_default:
+                    # Skip kexec stuff as the user choosed a
+                    # default boot entry.
+                    return
+
             kernel_ver = os.uname()[2]
             kernel_suffix = None
             if "-" in kernel_ver:
