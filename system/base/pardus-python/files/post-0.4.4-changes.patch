Index: pardus/netutils.py
===================================================================
--- pardus/netutils.py	(.../python-modules/pardus-python)	(revision 25793)
+++ pardus/netutils.py	(.../pardus-python)	(revision 26424)
@@ -51,6 +51,7 @@
 
 # From <linux/if_arp.h>
 ARPHRD_ETHER = 1
+ARPHRD_PPP = 512
 
 
 class IF:
@@ -65,8 +66,13 @@
         # -H to set hostname due to info from server
         # -t for timeout
 
-        self.autoCmd = ["/sbin/dhcpcd", "-R", "-Y", "-N", self.name, "-t", self.timeout, "-I", "''"]
+        # Check dhcpcd version and generate option list according to it
+        self.autoCmd = ["/sbin/dhcpcd"]
+        if os.popen("/sbin/dhcpcd --version").read().split()[1] < "3.9.9":
+            self.autoCmd.extend(["-R", "-Y", "-N"])
 
+        self.autoCmd.extend([self.name, "-t", self.timeout, "-I", "''"])
+
     def ioctl(self, func, args):
         if not self._sock:
             self._sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
@@ -134,6 +140,14 @@
             return False
         return nettype == ARPHRD_ETHER
 
+    def isPPP(self):
+        nettype = self.sysValue("type")
+        try:
+            nettype = int(nettype)
+        except (ValueError, TypeError):
+            return False
+        return nettype == ARPHRD_PPP
+
     def isWireless(self):
         data = file("/proc/net/wireless").readlines()
         for line in data[2:]:
@@ -266,8 +280,8 @@
         info = AutoInfo()
         for line in f:
             line = line.strip()
-            if line.startswith("DNS="):
-                info.servers = line[4:].rstrip('\n').split(',')
+            if line.startswith("DNS='"):
+                info.servers = line[5:].rstrip('\n').rstrip("'").split(',')
             elif line.startswith("DNSSERVERS='"):
                 info.servers = line[12:].rstrip('\n').rstrip("'").split(' ')
             elif line.startswith("DNSSEARCH='"):
