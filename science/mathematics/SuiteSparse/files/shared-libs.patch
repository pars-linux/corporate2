Index: SuiteSparse/Makefile
===================================================================
--- SuiteSparse.orig/Makefile
+++ SuiteSparse/Makefile
@@ -10,11 +10,11 @@ default:
 #	( cd metis-4.0 ; $(MAKE) )
 	( cd AMD ; $(MAKE) )
 	( cd CAMD ; $(MAKE) )
+	( cd CCOLAMD ; $(MAKE) )
 	( cd COLAMD ; $(MAKE) )
 	( cd BTF ; $(MAKE) )
 	( cd KLU ; $(MAKE) )
 	( cd LDL ; $(MAKE) )
-	( cd CCOLAMD ; $(MAKE) )
 	( cd UMFPACK ; $(MAKE) )
 	( cd CHOLMOD ; $(MAKE) )
 	( cd CSparse ; $(MAKE) )
Index: SuiteSparse/AMD/Lib/GNUmakefile
===================================================================
--- SuiteSparse.orig/AMD/Lib/GNUmakefile
+++ SuiteSparse/AMD/Lib/GNUmakefile
@@ -2,7 +2,7 @@
 # AMD Makefile for compiling on Unix systems (for GNU make only)
 #-------------------------------------------------------------------------------
 
-default: ../Lib/libamd.a
+default: ../Lib/libamd.a libamd.so.3.4.0
 
 include ../../UFconfig/UFconfig.mk
 
@@ -26,18 +26,27 @@ INC = ../Include/amd.h ../Include/amd_in
 AMDI = $(addsuffix .o, $(subst amd_,amd_i_,$(AMD)))
 AMDL = $(addsuffix .o, $(subst amd_,amd_l_,$(AMD)))
 
+AMDI_SL = $(addsuffix .oo, $(subst amd_,amd_i_,$(AMD)))
+AMDL_SL = $(addsuffix .oo, $(subst amd_,amd_l_,$(AMD)))
+
 #-------------------------------------------------------------------------------
 # compile each int and long routine (with no real/complex version)
 #-------------------------------------------------------------------------------
 
 amd_global.o: ../Source/amd_global.c $(INC)
 	$(C) -c $< -o $@
+amd_global.oo: ../Source/amd_global.c $(INC)
+	$(C) -fPIC -c $< -o $@
 
 amd_i_%.o: ../Source/amd_%.c $(INC)
 	$(C) -DDINT -c $< -o $@
+amd_i_%.oo: ../Source/amd_%.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 amd_l_%.o: ../Source/amd_%.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+amd_l_%.oo: ../Source/amd_%.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # Create the libamd.a library (C versions only)
@@ -47,6 +56,10 @@ amd_l_%.o: ../Source/amd_%.c $(INC)
 	$(AR) ../Lib/libamd.a $^
 	- $(RANLIB) ../Lib/libamd.a
 
+libamd.so.3.4.0: amd_global.oo $(AMDI_SL) $(AMDL_SL)
+	$(CC) -shared $^ -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libamd.so
+
 #-------------------------------------------------------------------------------
 # compile the Fortran versions and the libamdf77.a library
 #-------------------------------------------------------------------------------
@@ -71,6 +84,9 @@ amdbar.o: ../Source/amdbar.f
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/CAMD/Lib/GNUmakefile
===================================================================
--- SuiteSparse.orig/CAMD/Lib/GNUmakefile
+++ SuiteSparse/CAMD/Lib/GNUmakefile
@@ -2,7 +2,7 @@
 # CAMD Makefile for compiling on Unix systems (for GNU make only)
 #-------------------------------------------------------------------------------
 
-default: libcamd.a
+default: libcamd.a libcamd.so.3.4.0
 
 include ../../UFconfig/UFconfig.mk
 
@@ -26,18 +26,27 @@ INC = ../Include/camd.h ../Include/camd_
 CAMDI = $(addsuffix .o, $(subst camd_,camd_i_,$(CAMD)))
 CAMDL = $(addsuffix .o, $(subst camd_,camd_l_,$(CAMD)))
 
+CAMDI_SL = $(addsuffix .oo, $(subst camd_,camd_i_,$(CAMD)))
+CAMDL_SL = $(addsuffix .oo, $(subst camd_,camd_l_,$(CAMD)))
+
 #-------------------------------------------------------------------------------
 # compile each int and long routine (with no real/complex version)
 #-------------------------------------------------------------------------------
 
 camd_global.o: ../Source/camd_global.c $(INC)
 	$(C) -c $< -o $@
+camd_global.oo: ../Source/camd_global.c $(INC)
+	$(C) -fPIC -c $< -o $@
 
 camd_i_%.o: ../Source/camd_%.c $(INC)
 	$(C) -DDINT -c $< -o $@
+camd_i_%.oo: ../Source/camd_%.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 camd_l_%.o: ../Source/camd_%.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+camd_l_%.oo: ../Source/camd_%.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # Create the libcamd.a library (C versions only)
@@ -47,12 +56,19 @@ libcamd.a: camd_global.o $(CAMDI) $(CAMD
 	$(AR) libcamd.a $^
 	- $(RANLIB) libcamd.a
 
+libcamd.so.3.4.0: camd_global.oo $(CAMDI_SL) $(CAMDL_SL)
+	$(CC) -shared $^ -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libcamd.so
+
 #-------------------------------------------------------------------------------
 # Remove all but the files in the original distribution
 #-------------------------------------------------------------------------------
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/CCOLAMD/Lib/Makefile
===================================================================
--- SuiteSparse.orig/CCOLAMD/Lib/Makefile
+++ SuiteSparse/CCOLAMD/Lib/Makefile
@@ -2,7 +2,7 @@
 # CCOLAMD Makefile
 #-------------------------------------------------------------------------------
 
-default: libccolamd.a
+default: libccolamd.a libccolamd.so.3.4.0
 
 include ../../UFconfig/UFconfig.mk
 
@@ -19,12 +19,22 @@ libccolamd.a:  $(SRC) $(INC)
 	$(CC) $(CFLAGS) $(I) -c ../Source/ccolamd.c -DDLONG -o ccolamd_l.o
 	$(AR) libccolamd.a ccolamd.o ccolamd_l.o ccolamd_global.o
 
+libccolamd.so.3.4.0:  $(SRC) $(INC)
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/ccolamd_global.c -o ccolamd_global.oo
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/ccolamd.c -o ccolamd.oo
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/ccolamd.c -DDLONG -o ccolamd_l.oo
+	$(CC) -shared *.oo -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libccolamd.so
+
 ccode: libccolamd.a
 
 library: libccolamd.a
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/COLAMD/Lib/Makefile
===================================================================
--- SuiteSparse.orig/COLAMD/Lib/Makefile
+++ SuiteSparse/COLAMD/Lib/Makefile
@@ -2,7 +2,7 @@
 # COLAMD Makefile
 #-------------------------------------------------------------------------------
 
-default: libcolamd.a
+default: libcolamd.a libcolamd.so.3.4.0
 
 include ../../UFconfig/UFconfig.mk
 
@@ -19,12 +19,22 @@ libcolamd.a:  $(SRC) $(INC)
 	$(CC) $(CFLAGS) $(I) -c ../Source/colamd.c -DDLONG -o colamd_l.o
 	$(AR) libcolamd.a colamd.o colamd_l.o colamd_global.o
 
+libcolamd.so.3.4.0:  $(SRC) $(INC)
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/colamd_global.c -o colamd_global.oo
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/colamd.c -o colamd.oo
+	$(CC) -fPIC $(CFLAGS) $(I) -c ../Source/colamd.c -DDLONG -o colamd_l.oo
+	$(CC) -shared *.oo -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libcolamd.so
+
 ccode: libcolamd.a
 
 library: libcolamd.a
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/BTF/Lib/Makefile
===================================================================
--- SuiteSparse.orig/BTF/Lib/Makefile
+++ SuiteSparse/BTF/Lib/Makefile
@@ -15,38 +15,55 @@ I = -I../Include -I../../UFconfig
 
 all: library
 
-library: libbtf.a
+library: libbtf.a libbtf.so.3.4.0
 
 OBJ = btf_order.o btf_maxtrans.o btf_strongcomp.o \
     btf_l_order.o btf_l_maxtrans.o btf_l_strongcomp.o
+OBJ_SL = $(subst .o,.oo,$(OBJ))
 
 libbtf.a: $(OBJ)
 	$(AR) libbtf.a $(OBJ)
 	$(RANLIB) libbtf.a
 
-$(OBJ): $(INC)
+libbtf.so.3.4.0: $(OBJ_SL)
+	$(CC) -shared $^ -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libbtf.so
+
+$(OBJ) $(OBJ_SL): $(INC)
 
 #-------------------------------------------------------------------------------
 
 btf_order.o: ../Source/btf_order.c
 	$(C) -c $(I) $< -o $@
+btf_order.oo: ../Source/btf_order.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 btf_maxtrans.o: ../Source/btf_maxtrans.c
 	$(C) -c $(I) $< -o $@
+btf_maxtrans.oo: ../Source/btf_maxtrans.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 btf_strongcomp.o: ../Source/btf_strongcomp.c
 	$(C) -c $(I) $< -o $@
+btf_strongcomp.oo: ../Source/btf_strongcomp.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 btf_l_order.o: ../Source/btf_order.c
 	$(C) -c $(I) -DDLONG $< -o $@
+btf_l_order.oo: ../Source/btf_order.c
+	$(C) -fPIC -c $(I) -DDLONG $< -o $@
 
 btf_l_maxtrans.o: ../Source/btf_maxtrans.c
 	$(C) -c $(I) -DDLONG $< -o $@
+btf_l_maxtrans.oo: ../Source/btf_maxtrans.c
+	$(C) -fPIC -c $(I) -DDLONG $< -o $@
 
 btf_l_strongcomp.o: ../Source/btf_strongcomp.c
 	$(C) -c $(I) -DDLONG $< -o $@
+btf_l_strongcomp.oo: ../Source/btf_strongcomp.c
+	$(C) -fPIC -c $(I) -DDLONG $< -o $@
 
 #-------------------------------------------------------------------------------
 
@@ -57,3 +74,6 @@ distclean: clean
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
Index: SuiteSparse/KLU/Lib/Makefile
===================================================================
--- SuiteSparse.orig/KLU/Lib/Makefile
+++ SuiteSparse/KLU/Lib/Makefile
@@ -17,132 +17,200 @@ I = -I../../AMD/Include -I../../COLAMD/I
 
 all: library
 
-library: libklu.a
+library: libklu.a libklu.so.3.4.0
 
 KLU_D = klu_d.o klu_d_kernel.o klu_d_dump.o \
     klu_d_factor.o klu_d_free_numeric.o klu_d_solve.o \
     klu_d_scale.o klu_d_refactor.o \
     klu_d_tsolve.o klu_d_diagnostics.o klu_d_sort.o klu_d_extract.o
+KLU_D_SL = $(subst .o,.oo,$(KLU_D))
 
 KLU_Z = klu_z.o klu_z_kernel.o klu_z_dump.o \
     klu_z_factor.o klu_z_free_numeric.o klu_z_solve.o \
     klu_z_scale.o klu_z_refactor.o \
     klu_z_tsolve.o klu_z_diagnostics.o klu_z_sort.o klu_z_extract.o
+KLU_Z_SL = $(subst .o,.oo,$(KLU_Z))
 
 KLU_L = klu_l.o klu_l_kernel.o klu_l_dump.o \
     klu_l_factor.o klu_l_free_numeric.o klu_l_solve.o \
     klu_l_scale.o klu_l_refactor.o \
     klu_l_tsolve.o klu_l_diagnostics.o klu_l_sort.o klu_l_extract.o
+KLU_L_SL = $(subst .o,.oo,$(KLU_L))
 
 KLU_ZL = klu_zl.o klu_zl_kernel.o klu_zl_dump.o \
     klu_zl_factor.o klu_zl_free_numeric.o klu_zl_solve.o \
     klu_zl_scale.o klu_zl_refactor.o \
     klu_zl_tsolve.o klu_zl_diagnostics.o klu_zl_sort.o klu_zl_extract.o
+KLU_ZL_SL = $(subst .o,.oo,$(KLU_ZL))
 
 COMMON = \
     klu_free_symbolic.o klu_defaults.o klu_analyze_given.o \
     klu_analyze.o klu_memory.o \
     klu_l_free_symbolic.o klu_l_defaults.o klu_l_analyze_given.o \
     klu_l_analyze.o klu_l_memory.o
+COMMON_SL = $(subst .o,.oo,$(COMMON))
 
 OBJ = $(COMMON) $(KLU_D) $(KLU_Z) $(KLU_L) $(KLU_ZL)
+OBJ_SL = $(COMMON_SL) $(KLU_D_SL) $(KLU_Z_SL) $(KLU_L_SL) $(KLU_ZL_SL)
 
 libklu.a: $(OBJ)
 	$(AR) libklu.a $(OBJ)
 	$(RANLIB) libklu.a
 
-$(OBJ): $(INC)
+libklu.so.3.4.0: $(OBJ_SL)
+	$(CC) -shared $^ ../../AMD/Lib/libamd.so ../../BTF/Lib/libbtf.so ../../COLAMD/Lib/libcolamd.so -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libklu.so
+
+$(OBJ) $(OBJ_SL): $(INC)
 
 #-------------------------------------------------------------------------------
 
 klu_d.o: ../Source/klu.c
 	$(C) -c $(I) $< -o $@
+klu_d.oo: ../Source/klu.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z.o: ../Source/klu.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z.oo: ../Source/klu.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_kernel.o: ../Source/klu_kernel.c
 	$(C) -c $(I) $< -o $@
+klu_d_kernel.oo: ../Source/klu_kernel.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_kernel.o: ../Source/klu_kernel.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_kernel.oo: ../Source/klu_kernel.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_sort.o: ../Source/klu_sort.c
 	$(C) -c $(I) $< -o $@
+klu_d_sort.oo: ../Source/klu_sort.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_sort.o: ../Source/klu_sort.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_sort.oo: ../Source/klu_sort.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_diagnostics.o: ../Source/klu_diagnostics.c
 	$(C) -c $(I) $< -o $@
+klu_d_diagnostics.oo: ../Source/klu_diagnostics.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_diagnostics.o: ../Source/klu_diagnostics.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_diagnostics.oo: ../Source/klu_diagnostics.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_dump.o: ../Source/klu_dump.c
 	$(C) -c $(I) $< -o $@
+klu_d_dump.oo: ../Source/klu_dump.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_dump.o: ../Source/klu_dump.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_dump.oo: ../Source/klu_dump.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_factor.o: ../Source/klu_factor.c
 	$(C) -c $(I) $< -o $@
+klu_d_factor.oo: ../Source/klu_factor.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_factor.o: ../Source/klu_factor.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_factor.oo: ../Source/klu_factor.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_free_numeric.o: ../Source/klu_free_numeric.c
 	$(C) -c $(I) $< -o $@
+klu_d_free_numeric.oo: ../Source/klu_free_numeric.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_free_numeric.o: ../Source/klu_free_numeric.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_free_numeric.oo: ../Source/klu_free_numeric.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_extract.o: ../Source/klu_extract.c
 	$(C) -c $(I) $< -o $@
+klu_d_extract.oo: ../Source/klu_extract.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_extract.o: ../Source/klu_extract.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_extract.oo: ../Source/klu_extract.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_refactor.o: ../Source/klu_refactor.c
 	$(C) -c $(I) $< -o $@
+klu_d_refactor.oo: ../Source/klu_refactor.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_refactor.o: ../Source/klu_refactor.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_refactor.oo: ../Source/klu_refactor.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_scale.o: ../Source/klu_scale.c
 	$(C) -c $(I) $< -o $@
+klu_d_scale.oo: ../Source/klu_scale.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_scale.o: ../Source/klu_scale.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_scale.oo: ../Source/klu_scale.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_solve.o: ../Source/klu_solve.c
 	$(C) -c $(I) $< -o $@
+klu_d_solve.oo: ../Source/klu_solve.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_solve.o: ../Source/klu_solve.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_solve.oo: ../Source/klu_solve.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 klu_d_tsolve.o: ../Source/klu_tsolve.c
 	$(C) -c $(I) $< -o $@
+klu_d_tsolve.oo: ../Source/klu_tsolve.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_z_tsolve.o: ../Source/klu_tsolve.c
 	$(C) -c -DCOMPLEX $(I) $< -o $@
+klu_z_tsolve.oo: ../Source/klu_tsolve.c
+	$(C) -fPIC -c -DCOMPLEX $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 klu_analyze.o: ../Source/klu_analyze.c
 	$(C) -c $(I) $< -o $@
+klu_analyze.oo: ../Source/klu_analyze.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_analyze_given.o: ../Source/klu_analyze_given.c
 	$(C) -c $(I) $< -o $@
+klu_analyze_given.oo: ../Source/klu_analyze_given.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_defaults.o: ../Source/klu_defaults.c
 	$(C) -c $(I) $< -o $@
+klu_defaults.oo: ../Source/klu_defaults.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_free_symbolic.o: ../Source/klu_free_symbolic.c
 	$(C) -c $(I) $< -o $@
+klu_free_symbolic.oo: ../Source/klu_free_symbolic.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 klu_memory.o: ../Source/klu_memory.c
 	$(C) -c $(I) $< -o $@
+klu_memory.oo: ../Source/klu_memory.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
@@ -153,96 +221,157 @@ distclean: clean
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 #-------------------------------------------------------------------------------
 
 klu_l.o: ../Source/klu.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l.oo: ../Source/klu.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl.o: ../Source/klu.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl.oo: ../Source/klu.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_kernel.o: ../Source/klu_kernel.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_kernel.oo: ../Source/klu_kernel.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_kernel.o: ../Source/klu_kernel.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_kernel.oo: ../Source/klu_kernel.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_sort.o: ../Source/klu_sort.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_sort.oo: ../Source/klu_sort.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_sort.o: ../Source/klu_sort.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_sort.oo: ../Source/klu_sort.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_diagnostics.o: ../Source/klu_diagnostics.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_diagnostics.oo: ../Source/klu_diagnostics.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_diagnostics.o: ../Source/klu_diagnostics.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_diagnostics.oo: ../Source/klu_diagnostics.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_dump.o: ../Source/klu_dump.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_dump.oo: ../Source/klu_dump.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_dump.o: ../Source/klu_dump.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_dump.oo: ../Source/klu_dump.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_factor.o: ../Source/klu_factor.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_factor.oo: ../Source/klu_factor.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_factor.o: ../Source/klu_factor.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_factor.oo: ../Source/klu_factor.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_free_numeric.o: ../Source/klu_free_numeric.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_free_numeric.oo: ../Source/klu_free_numeric.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_free_numeric.o: ../Source/klu_free_numeric.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_free_numeric.oo: ../Source/klu_free_numeric.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_extract.o: ../Source/klu_extract.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_extract.oo: ../Source/klu_extract.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_extract.o: ../Source/klu_extract.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_extract.oo: ../Source/klu_extract.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_refactor.o: ../Source/klu_refactor.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_refactor.oo: ../Source/klu_refactor.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_refactor.o: ../Source/klu_refactor.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_refactor.oo: ../Source/klu_refactor.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_scale.o: ../Source/klu_scale.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_scale.oo: ../Source/klu_scale.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_scale.o: ../Source/klu_scale.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_scale.oo: ../Source/klu_scale.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_solve.o: ../Source/klu_solve.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_solve.oo: ../Source/klu_solve.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_solve.o: ../Source/klu_solve.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_solve.oo: ../Source/klu_solve.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 klu_l_tsolve.o: ../Source/klu_tsolve.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_tsolve.oo: ../Source/klu_tsolve.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_zl_tsolve.o: ../Source/klu_tsolve.c
 	$(C) -c -DCOMPLEX -DDLONG $(I) $< -o $@
+klu_zl_tsolve.oo: ../Source/klu_tsolve.c
+	$(C) -fPIC -c -DCOMPLEX -DDLONG $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 klu_l_analyze.o: ../Source/klu_analyze.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_analyze.oo: ../Source/klu_analyze.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_l_analyze_given.o: ../Source/klu_analyze_given.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_analyze_given.oo: ../Source/klu_analyze_given.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_l_defaults.o: ../Source/klu_defaults.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_defaults.oo: ../Source/klu_defaults.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_l_free_symbolic.o: ../Source/klu_free_symbolic.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_free_symbolic.oo: ../Source/klu_free_symbolic.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 klu_l_memory.o: ../Source/klu_memory.c
 	$(C) -c -DDLONG $(I) $< -o $@
+klu_l_memory.oo: ../Source/klu_memory.c
+	$(C) -fPIC -c -DDLONG $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
Index: SuiteSparse/LDL/Lib/Makefile
===================================================================
--- SuiteSparse.orig/LDL/Lib/Makefile
+++ SuiteSparse/LDL/Lib/Makefile
@@ -10,7 +10,7 @@ I = -I../../UFconfig -I../Include
 
 C = $(CC) $(CFLAGS) $(I)
 
-all: libldl.a
+all: libldl.a libldl.so.3.4.0
 
 #-------------------------------------------------------------------------------
 # the ldl library:
@@ -22,6 +22,12 @@ libldl.a: ../Source/ldl.c ../Include/ldl
 	$(AR) libldl.a ldl.o ldll.o
 	- $(RANLIB) libldl.a
 
+libldl.so.3.4.0: ../Source/ldl.c ../Include/ldl.h
+	$(C) -fPIC -c ../Source/ldl.c -o ldl.oo
+	$(C) -fPIC -DLDL_LONG -c ../Source/ldl.c -o ldll.oo
+	$(C) -fPIC -shared *.oo -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libldl.so
+
 distclean: purge
 
 purge: clean
@@ -29,4 +35,6 @@ purge: clean
 
 clean:
 	- $(RM) $(CLEAN)
-
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
Index: SuiteSparse/CSparse/Lib/Makefile
===================================================================
--- SuiteSparse.orig/CSparse/Lib/Makefile
+++ SuiteSparse/CSparse/Lib/Makefile
@@ -1,11 +1,13 @@
 # Modify the "-O" optimization option for best performance (-O3 on Linux):
-CC = cc
-CFLAGS = -O -I../Include
+#CC = cc
+#CFLAGS = -O -I../Include
+
+C = $(CC) -O -I../Include
 
 AR = ar cr
 RANLIB = ranlib
 
-all: libcsparse.a
+all: libcsparse.a libcsparse.so.3.4.0
 
 CS = cs_add.o cs_amd.o cs_chol.o cs_cholsol.o cs_counts.o cs_cumsum.o \
 	cs_droptol.o cs_dropzeros.o cs_dupl.o cs_entry.o \
@@ -16,18 +18,29 @@ CS = cs_add.o cs_amd.o cs_chol.o cs_chol
 	cs_transpose.o cs_compress.o cs_usolve.o cs_utsolve.o cs_scc.o \
 	cs_maxtrans.o cs_dmperm.o cs_updown.o cs_print.o cs_norm.o cs_load.o \
 	cs_dfs.o cs_reach.o cs_spsolve.o cs_ereach.o cs_leaf.o cs_randperm.o
+CS_SL = $(subst .o,.oo,$(CS))
 
 $(CS): ../Include/cs.h Makefile
+$(CS_SL): ../Include/cs.h Makefile
 
 %.o: ../Source/%.c ../Include/cs.h
-	$(CC) $(CFLAGS) -c $<
+	$(C) -c $<
+%.oo: ../Source/%.c ../Include/cs.h
+	$(C) -fPIC -c $< -o $@
 
 libcsparse.a: $(CS)
 	$(AR) libcsparse.a $(CS)
 	$(RANLIB) libcsparse.a
 
+libcsparse.so.3.4.0: $(CS_SL)
+	$(CC) -shared $^ -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libcsparse.so
+
 clean:
 	rm -f *.o
+	rm -f *.o *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/CXSparse/Lib/Makefile
===================================================================
--- SuiteSparse.orig/CXSparse/Lib/Makefile
+++ SuiteSparse/CXSparse/Lib/Makefile
@@ -10,7 +10,7 @@ I = -I../../UFconfig -I../Include
 # AR = ar cr
 # RANLIB = ranlib
 
-all: libcxsparse.a
+all: libcxsparse.a libcxsparse.so.3.4.0
 
 CS_SOURCE = cs_add.c cs_amd.c cs_chol.c cs_cholsol.c cs_counts.c cs_cumsum.c \
 	cs_droptol.c cs_dropzeros.c cs_dupl.c cs_entry.c \
@@ -33,6 +33,7 @@ CS_DI_OBJ =  cs_add_di.o cs_amd_di.o cs_
 	cs_scc_di.o cs_maxtrans_di.o cs_dmperm_di.o cs_updown_di.o cs_print_di.o \
 	cs_norm_di.o cs_load_di.o cs_dfs_di.o cs_reach_di.o cs_spsolve_di.o \
 	cs_leaf_di.o cs_ereach_di.o cs_randperm_di.o
+CS_DI_OBJ_SL = $(subst .o,.oo,$(CS_DI_OBJ))
 
 CS_DL_OBJ =  cs_add_dl.o cs_amd_dl.o cs_chol_dl.o cs_cholsol_dl.o cs_counts_dl.o \
 	cs_cumsum_dl.o cs_droptol_dl.o cs_dropzeros_dl.o cs_dupl_dl.o \
@@ -45,6 +46,7 @@ CS_DL_OBJ =  cs_add_dl.o cs_amd_dl.o cs_
 	cs_scc_dl.o cs_maxtrans_dl.o cs_dmperm_dl.o cs_updown_dl.o cs_print_dl.o \
 	cs_norm_dl.o cs_load_dl.o cs_dfs_dl.o cs_reach_dl.o cs_spsolve_dl.o \
 	cs_leaf_dl.o cs_ereach_dl.o cs_randperm_dl.o
+CS_DL_OBJ_SL = $(subst .o,.oo,$(CS_DL_OBJ))
 
 CS_CI_OBJ =  cs_add_ci.o cs_amd_ci.o cs_chol_ci.o cs_cholsol_ci.o cs_counts_ci.o \
 	cs_cumsum_ci.o cs_droptol_ci.o cs_dropzeros_ci.o cs_dupl_ci.o \
@@ -57,6 +59,7 @@ CS_CI_OBJ =  cs_add_ci.o cs_amd_ci.o cs_
 	cs_scc_ci.o cs_maxtrans_ci.o cs_dmperm_ci.o cs_updown_ci.o cs_print_ci.o \
 	cs_norm_ci.o cs_load_ci.o cs_dfs_ci.o cs_reach_ci.o cs_spsolve_ci.o \
 	cs_leaf_ci.o cs_ereach_ci.o cs_randperm_ci.o
+CS_CI_OBJ_SL = $(subst .o,.oo,$(CS_CI_OBJ))
 
 CS_CL_OBJ =  cs_add_cl.o cs_amd_cl.o cs_chol_cl.o cs_cholsol_cl.o cs_counts_cl.o \
 	cs_cumsum_cl.o cs_droptol_cl.o cs_dropzeros_cl.o cs_dupl_cl.o \
@@ -69,32 +72,50 @@ CS_CL_OBJ =  cs_add_cl.o cs_amd_cl.o cs_
 	cs_scc_cl.o cs_maxtrans_cl.o cs_dmperm_cl.o cs_updown_cl.o cs_print_cl.o \
 	cs_norm_cl.o cs_load_cl.o cs_dfs_cl.o cs_reach_cl.o cs_spsolve_cl.o \
 	cs_leaf_cl.o cs_ereach_cl.o cs_randperm_cl.o
+CS_CL_OBJ_SL = $(subst .o,.oo,$(CS_CL_OBJ))
 
 CS = cs_convert.o $(CS_DI_OBJ) $(CS_DL_OBJ) $(CS_CI_OBJ) $(CS_CL_OBJ)
+CS_SL = cs_convert.oo $(CS_DI_OBJ_SL) $(CS_DL_OBJ_SL) $(CS_CI_OBJ_SL) $(CS_CL_OBJ_SL)
 
 $(CS): ../Include/cs.h Makefile
 
 cs_convert.o: ../Source/cs_convert.c
 	$(CC) $(CFLAGS) $(I) -c $< -o $@
+cs_convert.oo: ../Source/cs_convert.c
+	$(CC) -fPIC $(CFLAGS) $(I) -c $< -o $@
 
 %_di.o : ../Source/%.c
 	$(CC) $(CFLAGS) $(I) -c $< -o $@
+%_di.oo: ../Source/%.c
+	$(CC) -fPIC $(CFLAGS) $(I) -c $< -o $@
 
 %_dl.o : ../Source/%.c
 	$(CC) $(CFLAGS) $(I) -DCS_LONG -c $< -o $@
+%_dl.oo : ../Source/%.c
+	$(CC) -fPIC $(CFLAGS) $(I) -DCS_LONG -c $< -o $@
 
 %_ci.o : ../Source/%.c
 	$(CC) $(CFLAGS) $(I) -DCS_COMPLEX -c $< -o $@
+%_ci.oo : ../Source/%.c
+	$(CC) -fPIC $(CFLAGS) $(I) -DCS_COMPLEX -c $< -o $@
 
 %_cl.o : ../Source/%.c
 	$(CC) $(CFLAGS) $(I) -DCS_LONG -DCS_COMPLEX -c $< -o $@
+%_cl.oo : ../Source/%.c
+	$(CC) -fPIC $(CFLAGS) $(I) -DCS_LONG -DCS_COMPLEX -c $< -o $@
 
 libcxsparse.a: $(CS)
 	$(AR) libcxsparse.a $(CS)
 	$(RANLIB) libcxsparse.a
 
+libcxsparse.so.3.4.0: $(CS_SL)
+	$(CC) -shared $^ -lm -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libcxsparse.so
+
 clean:
-	rm -f *.o
+	rm -f *.o *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 purge: distclean
 
Index: SuiteSparse/UMFPACK/Lib/GNUmakefile
===================================================================
--- SuiteSparse.orig/UMFPACK/Lib/GNUmakefile
+++ SuiteSparse/UMFPACK/Lib/GNUmakefile
@@ -2,7 +2,7 @@
 # UMFPACK Makefile for compiling on Unix systems (for GNU Make)
 #-------------------------------------------------------------------------------
 
-default: ../Lib/libumfpack.a
+default: libumfpack.a libumfpack.so.3.4.0
 
 include ../../UFconfig/UFconfig.mk
 
@@ -79,12 +79,19 @@ INC = ../Include/umfpack.h ../../UFconfi
 #-------------------------------------------------------------------------------
 
 DI = $(addsuffix .o, $(subst umf_,umf_di_,$(UMF)) $(subst umfpack_,umfpack_di_,$(USER)))
+DI_SL = $(addsuffix .oo, $(subst umf_,umf_di_,$(UMF)) $(subst umfpack_,umfpack_di_,$(USER)))
 DL = $(addsuffix .o, $(subst umf_,umf_dl_,$(UMF)) $(subst umfpack_,umfpack_dl_,$(USER)))
+DL_SL = $(addsuffix .oo, $(subst umf_,umf_dl_,$(UMF)) $(subst umfpack_,umfpack_dl_,$(USER)))
 ZI = $(addsuffix .o, $(subst umf_,umf_zi_,$(UMF)) $(subst umfpack_,umfpack_zi_,$(USER)))
+ZI_SL = $(addsuffix .oo, $(subst umf_,umf_zi_,$(UMF)) $(subst umfpack_,umfpack_zi_,$(USER)))
 ZL = $(addsuffix .o, $(subst umf_,umf_zl_,$(UMF)) $(subst umfpack_,umfpack_zl_,$(USER)))
+ZL_SL = $(addsuffix .oo, $(subst umf_,umf_zl_,$(UMF)) $(subst umfpack_,umfpack_zl_,$(USER)))
 II = $(addsuffix .o, $(subst umf_,umf_i_,$(UMFINT)))
+II_SL = $(addsuffix .oo, $(subst umf_,umf_i_,$(UMFINT)))
 LL = $(addsuffix .o, $(subst umf_,umf_l_,$(UMFINT)))
+LL_SL = $(addsuffix .oo, $(subst umf_,umf_l_,$(UMFINT)))
 GN = $(addsuffix .o, $(subst umfpack_,umfpack_gn_,$(GENERIC)))
+GN_SL = $(addsuffix .oo, $(subst umfpack_,umfpack_gn_,$(GENERIC)))
 
 #-------------------------------------------------------------------------------
 # compile each int and UF_long routine (with no real/complex version)
@@ -92,9 +99,13 @@ GN = $(addsuffix .o, $(subst umfpack_,um
 
 umf_i_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DDINT -c $< -o $@
+umf_i_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 umf_l_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+umf_l_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # compile each routine in the DI version
@@ -102,33 +113,53 @@ umf_l_%.o: ../Source/umf_%.c $(INC)
 
 umf_di_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DDINT -c $< -o $@
+umf_di_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 umf_di_%hsolve.o: ../Source/umf_%tsolve.c $(INC)
 	$(C) -DDINT -DCONJUGATE_SOLVE -c $< -o $@
+umf_di_%hsolve.oo: ../Source/umf_%tsolve.c $(INC)
+	$(C) -fPIC -DDINT -DCONJUGATE_SOLVE -c $< -o $@
 
 umf_di_triplet_map_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDINT -DDO_MAP -DDO_VALUES -c $< -o $@
+umf_di_triplet_map_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDINT -DDO_MAP -DDO_VALUES -c $< -o $@
 
 umf_di_triplet_map_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDINT -DDO_MAP -c $< -o $@
+umf_di_triplet_map_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDINT -DDO_MAP -c $< -o $@
 
 umf_di_triplet_nomap_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDINT -DDO_VALUES -c $< -o $@
+umf_di_triplet_nomap_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDINT -DDO_VALUES -c $< -o $@
 
 umf_di_triplet_nomap_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDINT -c $< -o $@
+umf_di_triplet_nomap_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 umf_di_assemble_fixq.o: ../Source/umf_assemble.c $(INC)
 	$(C) -DDINT -DFIXQ -c $< -o $@
+umf_di_assemble_fixq.oo: ../Source/umf_assemble.c $(INC)
+	$(C) -fPIC -DDINT -DFIXQ -c $< -o $@
 
 umf_di_store_lu_drop.o: ../Source/umf_store_lu.c $(INC)
 	$(C) -DDINT -DDROP -c $< -o $@
+umf_di_store_lu_drop.oo: ../Source/umf_store_lu.c $(INC)
+	$(C) -fPIC -DDINT -DDROP -c $< -o $@
 
 umfpack_di_wsolve.o: ../Source/umfpack_solve.c $(INC)
 	$(C) -DDINT -DWSOLVE -c $< -o $@
+umfpack_di_wsolve.oo: ../Source/umfpack_solve.c $(INC)
+	$(C) -fPIC -DDINT -DWSOLVE -c $< -o $@
 
 umfpack_di_%.o: ../Source/umfpack_%.c $(INC)
 	$(C) -DDINT -c $< -o $@
+umfpack_di_%.oo: ../Source/umfpack_%.c $(INC)
+	$(C) -fPIC -DDINT -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # compile each routine in the DL version
@@ -136,33 +167,53 @@ umfpack_di_%.o: ../Source/umfpack_%.c $(
 
 umf_dl_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+umf_dl_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 umf_dl_%hsolve.o: ../Source/umf_%tsolve.c $(INC)
 	$(C) -DDLONG -DCONJUGATE_SOLVE -c $< -o $@
+umf_dl_%hsolve.oo: ../Source/umf_%tsolve.c $(INC)
+	$(C) -fPIC -DDLONG -DCONJUGATE_SOLVE -c $< -o $@
 
 umf_dl_triplet_map_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDLONG -DDO_MAP -DDO_VALUES -c $< -o $@
+umf_dl_triplet_map_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDLONG -DDO_MAP -DDO_VALUES -c $< -o $@
 
 umf_dl_triplet_map_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDLONG -DDO_MAP -c $< -o $@
+umf_dl_triplet_map_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDLONG -DDO_MAP -c $< -o $@
 
 umf_dl_triplet_nomap_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDLONG -DDO_VALUES -c $< -o $@
+umf_dl_triplet_nomap_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDLONG -DDO_VALUES -c $< -o $@
 
 umf_dl_triplet_nomap_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+umf_dl_triplet_nomap_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 umf_dl_assemble_fixq.o: ../Source/umf_assemble.c $(INC)
 	$(C) -DDLONG -DFIXQ -c $< -o $@
+umf_dl_assemble_fixq.oo: ../Source/umf_assemble.c $(INC)
+	$(C) -fPIC -DDLONG -DFIXQ -c $< -o $@
 
 umf_dl_store_lu_drop.o: ../Source/umf_store_lu.c $(INC)
 	$(C) -DDLONG -DDROP -c $< -o $@
+umf_dl_store_lu_drop.oo: ../Source/umf_store_lu.c $(INC)
+	$(C) -fPIC -DDLONG -DDROP -c $< -o $@
 
 umfpack_dl_wsolve.o: ../Source/umfpack_solve.c $(INC)
 	$(C) -DDLONG -DWSOLVE -c $< -o $@
+umfpack_dl_wsolve.oo: ../Source/umfpack_solve.c $(INC)
+	$(C) -fPIC -DDLONG -DWSOLVE -c $< -o $@
 
 umfpack_dl_%.o: ../Source/umfpack_%.c $(INC)
 	$(C) -DDLONG -c $< -o $@
+umfpack_dl_%.oo: ../Source/umfpack_%.c $(INC)
+	$(C) -fPIC -DDLONG -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # compile each routine in the ZI version
@@ -170,33 +221,58 @@ umfpack_dl_%.o: ../Source/umfpack_%.c $(
 
 umf_zi_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DZINT -c $< -o $@
+umf_zi_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DZINT -c $< -o $@
 
 umf_zi_%hsolve.o: ../Source/umf_%tsolve.c $(INC)
 	$(C) -DZINT -DCONJUGATE_SOLVE -c $< -o $@
+umf_zi_%hsolve.oo: ../Source/umf_%tsolve.c $(INC)
+	$(C) -fPIC -DZINT -DCONJUGATE_SOLVE -c $< -o $@
 
 umf_zi_triplet_map_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZINT -DDO_MAP -DDO_VALUES -c $< -o $@
+umf_zi_triplet_map_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZINT -DDO_MAP -DDO_VALUES -c $< -o $@
 
 umf_zi_triplet_map_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZINT -DDO_MAP -c $< -o $@
+umf_zi_triplet_map_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZINT -DDO_MAP -DDO_VALUES -c $< -o $@
+
+ umf_zi_triplet_map_nox.o: ../Source/umf_triplet.c $(INC)
+	$(C) -DZINT -DDO_MAP -c $< -o $@
+umf_zi_triplet_map_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZINT -DDO_MAP -c $< -o $@
 
 umf_zi_triplet_nomap_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZINT -DDO_VALUES -c $< -o $@
+umf_zi_triplet_nomap_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZINT -DDO_VALUES -c $< -o $@
 
 umf_zi_triplet_nomap_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZINT -c $< -o $@
+umf_zi_triplet_nomap_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZINT -c $< -o $@
 
 umf_zi_assemble_fixq.o: ../Source/umf_assemble.c $(INC)
 	$(C) -DZINT -DFIXQ -c $< -o $@
+umf_zi_assemble_fixq.oo: ../Source/umf_assemble.c $(INC)
+	$(C) -fPIC -DZINT -DFIXQ -c $< -o $@
 
 umf_zi_store_lu_drop.o: ../Source/umf_store_lu.c $(INC)
 	$(C) -DZINT -DDROP -c $< -o $@
+umf_zi_store_lu_drop.oo: ../Source/umf_store_lu.c $(INC)
+	$(C) -fPIC -DZINT -DDROP -c $< -o $@
 
 umfpack_zi_wsolve.o: ../Source/umfpack_solve.c $(INC)
 	$(C) -DZINT -DWSOLVE -c $< -o $@
+umfpack_zi_wsolve.oo: ../Source/umfpack_solve.c $(INC)
+	$(C) -fPIC -DZINT -DWSOLVE -c $< -o $@
 
 umfpack_zi_%.o: ../Source/umfpack_%.c $(INC)
 	$(C) -DZINT -c $< -o $@
+umfpack_zi_%.oo: ../Source/umfpack_%.c $(INC)
+	$(C) -fPIC -DZINT -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # compile each routine in the ZL version
@@ -204,33 +280,53 @@ umfpack_zi_%.o: ../Source/umfpack_%.c $(
 
 umf_zl_%.o: ../Source/umf_%.c $(INC)
 	$(C) -DZLONG -c $< -o $@
+umf_zl_%.oo: ../Source/umf_%.c $(INC)
+	$(C) -fPIC -DZLONG -c $< -o $@
 
 umf_zl_%hsolve.o: ../Source/umf_%tsolve.c $(INC)
 	$(C) -DZLONG -DCONJUGATE_SOLVE -c $< -o $@
+umf_zl_%hsolve.oo: ../Source/umf_%tsolve.c $(INC)
+	$(C) -fPIC -DZLONG -DCONJUGATE_SOLVE -c $< -o $@
 
 umf_zl_triplet_map_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZLONG -DDO_MAP -DDO_VALUES -c $< -o $@
+umf_zl_triplet_map_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZLONG -DDO_MAP -DDO_VALUES -c $< -o $@
 
 umf_zl_triplet_map_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZLONG -DDO_MAP -c $< -o $@
+umf_zl_triplet_map_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZLONG -DDO_MAP -c $< -o $@
 
 umf_zl_triplet_nomap_x.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZLONG -DDO_VALUES -c $< -o $@
+umf_zl_triplet_nomap_x.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZLONG -DDO_VALUES -c $< -o $@
 
 umf_zl_triplet_nomap_nox.o: ../Source/umf_triplet.c $(INC)
 	$(C) -DZLONG -c $< -o $@
+umf_zl_triplet_nomap_nox.oo: ../Source/umf_triplet.c $(INC)
+	$(C) -fPIC -DZLONG -c $< -o $@
 
 umf_zl_assemble_fixq.o: ../Source/umf_assemble.c $(INC)
 	$(C) -DZLONG -DFIXQ -c $< -o $@
+umf_zl_assemble_fixq.oo: ../Source/umf_assemble.c $(INC)
+	$(C) -fPIC -DZLONG -DFIXQ -c $< -o $@
 
 umf_zl_store_lu_drop.o: ../Source/umf_store_lu.c $(INC)
 	$(C) -DZLONG -DDROP -c $< -o $@
+umf_zl_store_lu_drop.oo: ../Source/umf_store_lu.c $(INC)
+	$(C) -fPIC -DZLONG -DDROP -c $< -o $@
 
 umfpack_zl_wsolve.o: ../Source/umfpack_solve.c $(INC)
 	$(C) -DZLONG -DWSOLVE -c $< -o $@
+umfpack_zl_wsolve.oo: ../Source/umfpack_solve.c $(INC)
+	$(C) -fPIC -DZLONG -DWSOLVE -c $< -o $@
 
 umfpack_zl_%.o: ../Source/umfpack_%.c $(INC)
 	$(C) -DZLONG -c $< -o $@
+umfpack_zl_%.oo: ../Source/umfpack_%.c $(INC)
+	$(C) -fPIC -DZLONG -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # Create the generic routines (GN) using a generic rule
@@ -238,14 +334,20 @@ umfpack_zl_%.o: ../Source/umfpack_%.c $(
 
 umfpack_gn_%.o: ../Source/umfpack_%.c $(INC)
 	$(C) -c $< -o $@
+umfpack_gn_%.oo: ../Source/umfpack_%.c $(INC)
+	$(C) -fPIC -c $< -o $@
 
 #-------------------------------------------------------------------------------
 # Create the ../Lib/libumfpack.a library
 #-------------------------------------------------------------------------------
 
-../Lib/libumfpack.a: $(II) $(LL) $(GN) $(DI) $(DL) $(ZI) $(ZL)
-	$(AR) ../Lib/libumfpack.a $^
-	- $(RANLIB) ../Lib/libumfpack.a
+libumfpack.a: $(II) $(LL) $(GN) $(DI) $(DL) $(ZI) $(ZL)
+	$(AR) libumfpack.a $^
+	- $(RANLIB) libumfpack.a
+
+libumfpack.so.3.4.0: $(II_SL) $(LL_SL) $(GN_SL) $(DI_SL) $(DL_SL) $(ZI_SL) $(ZL_SL)
+	$(CC) -shared $^ -lm -lblas ../../AMD/Lib/libamd.so -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libumfpack.so
 
 so: $(II) $(LL) $(GN) $(DI) $(DL) $(ZI) $(ZL)
 	gcc -shared -Wl,-soname,libumfpack.so -o libumfpack.so $^
@@ -259,3 +361,6 @@ purge: clean
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
Index: SuiteSparse/CHOLMOD/Lib/Makefile
===================================================================
--- SuiteSparse.orig/CHOLMOD/Lib/Makefile
+++ SuiteSparse/CHOLMOD/Lib/Makefile
@@ -10,7 +10,7 @@ include ../../UFconfig/UFconfig.mk
 
 C = $(CC) $(CFLAGS) $(CHOLMOD_CONFIG)
 
-all: libcholmod.a
+all: libcholmod.a libcholmod.so.3.4.0
 
 library: libcholmod.a
 
@@ -21,6 +21,9 @@ distclean: clean
 
 clean:
 	- $(RM) $(CLEAN)
+	-$(RM) *.oo
+	-$(RM) *.a
+	-$(RM) *.so*
 
 #-------------------------------------------------------------------------------
 # ../Include/ directory contains all include files:
@@ -49,29 +52,39 @@ CORE = cholmod_aat.o cholmod_add.o cholm
 	cholmod_copy.o cholmod_dense.o cholmod_error.o cholmod_factor.o \
 	cholmod_memory.o cholmod_sparse.o \
 	cholmod_transpose.o cholmod_triplet.o
+CORE_SL = $(subst .o,.oo,$(CORE))
 
 CHECK = cholmod_check.o cholmod_read.o cholmod_write.o
+CHECK_SL = $(subst .o,.oo,$(CHECK))
 
 CHOLESKY = cholmod_amd.o cholmod_analyze.o cholmod_colamd.o \
 	cholmod_etree.o cholmod_factorize.o cholmod_postorder.o \
 	cholmod_rcond.o cholmod_resymbol.o cholmod_rowcolcounts.o \
 	cholmod_rowfac.o cholmod_solve.o cholmod_spsolve.o
+CHOLESKY_SL = $(subst .o,.oo,$(CHOLESKY))
 
 MATRIXOPS = cholmod_drop.o cholmod_horzcat.o cholmod_norm.o \
 	cholmod_scale.o cholmod_sdmult.o cholmod_ssmult.o \
 	cholmod_submatrix.o cholmod_vertcat.o cholmod_symmetry.o
+MATRIXOPS_SL = $(subst .o,.oo,$(MATRIXOPS))
 
 PARTITION = cholmod_ccolamd.o cholmod_csymamd.o \
 	cholmod_metis.o cholmod_nesdis.o cholmod_camd.o
+PARTITION_SL = $(subst .o,.oo,$(PARTITION))
 
 MODIFY = cholmod_rowadd.o cholmod_rowdel.o cholmod_updown.o
+MODIFY_SL = $(subst .o,.oo,$(MODIFY))
 
 SUPERNODAL = cholmod_super_numeric.o cholmod_super_solve.o \
 	cholmod_super_symbolic.o
+SUPERNODAL_SL = $(subst .o,.oo,$(SUPERNODAL))
 
 DI = $(CORE) $(CHECK) $(CHOLESKY) $(MATRIXOPS) $(MODIFY) $(SUPERNODAL) \
 	$(PARTITION)
 
+DI_SL = $(CORE_SL) $(CHECK_SL) $(CHOLESKY_SL) $(MATRIXOPS_SL) $(MODIFY_SL) \
+	$(SUPERNODAL_SL) $(PARTITION_SL)
+
 #-------------------------------------------------------------------------------
 # CHOLMOD library modules (long, double)
 #-------------------------------------------------------------------------------
@@ -81,39 +94,53 @@ LCORE = cholmod_l_aat.o cholmod_l_add.o 
 	cholmod_l_copy.o cholmod_l_dense.o cholmod_l_error.o \
 	cholmod_l_factor.o cholmod_l_memory.o \
 	cholmod_l_sparse.o cholmod_l_transpose.o cholmod_l_triplet.o
+LCORE_SL = $(subst .o,.oo,$(LCORE))
 
 LCHECK = cholmod_l_check.o cholmod_l_read.o cholmod_l_write.o
+LCHECK_SL = $(subst .o,.oo,$(LCHECK))
 
 LCHOLESKY = cholmod_l_amd.o cholmod_l_analyze.o cholmod_l_colamd.o \
 	cholmod_l_etree.o cholmod_l_factorize.o cholmod_l_postorder.o \
 	cholmod_l_rcond.o cholmod_l_resymbol.o cholmod_l_rowcolcounts.o \
 	cholmod_l_rowfac.o cholmod_l_solve.o cholmod_l_spsolve.o
+LCHOLESKY_SL = $(subst .o,.oo,$(LCHOLESKY))
 
 LMATRIXOPS = cholmod_l_drop.o cholmod_l_horzcat.o cholmod_l_norm.o \
 	cholmod_l_scale.o cholmod_l_sdmult.o cholmod_l_ssmult.o \
 	cholmod_l_submatrix.o cholmod_l_vertcat.o cholmod_l_symmetry.o
+LMATRIXOPS_SL = $(subst .o,.oo,$(LMATRIXOPS))
 
 LPARTITION = cholmod_l_ccolamd.o cholmod_l_csymamd.o \
 	cholmod_l_metis.o cholmod_l_nesdis.o cholmod_l_camd.o
+LPARTITION_SL = $(subst .o,.oo,$(LPARTITION))
 
 LMODIFY = cholmod_l_rowadd.o cholmod_l_rowdel.o cholmod_l_updown.o
+LMODIFY_SL = $(subst .o,.oo,$(LMODIFY))
 
 LSUPERNODAL = cholmod_l_super_numeric.o cholmod_l_super_solve.o \
 	cholmod_l_super_symbolic.o
+LSUPERNODAL_SL = $(subst .o,.oo,$(LSUPERNODAL))
 
 DL = $(LCORE) $(LCHECK) $(LCHOLESKY) $(LMATRIXOPS) $(LMODIFY) $(LSUPERNODAL) \
 	$(LPARTITION)
+DL_SL = $(LCORE_SL) $(LCHECK_SL) $(LCHOLESKY_SL) $(LMATRIXOPS_SL) \
+	$(LMODIFY_SL) $(LSUPERNODAL_SL) $(LPARTITION_SL)
 
 #-------------------------------------------------------------------------------
 
 # to compile just the double/int version, use OBJ = $(DI)
 OBJ = $(DI) $(DL)
+OBJ_SL = $(DI_SL) $(DL_SL)
 
 libcholmod.a: $(OBJ)
 	$(AR) libcholmod.a $(OBJ)
 	$(RANLIB) libcholmod.a
 
-$(OBJ): $(INC)
+libcholmod.so.3.4.0: $(OBJ_SL)
+	$(CC) -shared $^ -lblas -lmetis -llapack ../../AMD/Lib/libamd.so ../../CAMD/Lib/libcamd.so ../../COLAMD/Lib/libcolamd.so ../../CCOLAMD/Lib/libccolamd.so -lm  -Wl,-soname -Wl,$@ -o $@
+	ln -s $@ libcholmod.so
+
+$(OBJ) $(OBJ_SL): $(INC)
 
 I = -I../../AMD/Include -I../../AMD/Source -I../../COLAMD/Include \
 	-I/usr/include/metis -I../../CCOLAMD/Include -I../../CAMD/Include \
@@ -125,23 +152,35 @@ I = -I../../AMD/Include -I../../AMD/Sour
 
 cholmod_check.o: ../Check/cholmod_check.c
 	$(C) -c $(I) $<
+cholmod_check.oo: ../Check/cholmod_check.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_read.o: ../Check/cholmod_read.c
 	$(C) -c $(I) $<
+cholmod_read.oo: ../Check/cholmod_read.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_write.o: ../Check/cholmod_write.c
 	$(C) -c $(I) $<
+cholmod_write.oo: ../Check/cholmod_write.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_check.o: ../Check/cholmod_check.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_check.oo: ../Check/cholmod_check.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_read.o: ../Check/cholmod_read.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_read.oo: ../Check/cholmod_read.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_write.o: ../Check/cholmod_write.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_write.oo: ../Check/cholmod_write.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 
 #-------------------------------------------------------------------------------
@@ -150,92 +189,149 @@ cholmod_l_write.o: ../Check/cholmod_writ
 
 cholmod_common.o: ../Core/cholmod_common.c
 	$(C) -c $(I) $<
+cholmod_common.oo: ../Core/cholmod_common.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_dense.o: ../Core/cholmod_dense.c ../Core/t_cholmod_dense.c
 	$(C) -c $(I) $<
+cholmod_dense.oo: ../Core/cholmod_dense.c ../Core/t_cholmod_dense.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_factor.o: ../Core/cholmod_factor.c
 	$(C) -c $(I) $<
+cholmod_factor.oo: ../Core/cholmod_factor.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_change_factor.o: ../Core/cholmod_change_factor.c \
 	../Core/t_cholmod_change_factor.c
 	$(C) -c $(I) $<
+cholmod_change_factor.oo: ../Core/cholmod_change_factor.c \
+	../Core/t_cholmod_change_factor.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_memory.o: ../Core/cholmod_memory.c
 	$(C) -c $(I) $<
+cholmod_memory.oo: ../Core/cholmod_memory.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_sparse.o: ../Core/cholmod_sparse.c
 	$(C) -c $(I) $<
+cholmod_sparse.oo: ../Core/cholmod_sparse.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_complex.o: ../Core/cholmod_complex.c
 	$(C) -c $(I) $<
+cholmod_complex.oo: ../Core/cholmod_complex.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_transpose.o: ../Core/cholmod_transpose.c ../Core/t_cholmod_transpose.c
 	$(C) -c $(I) $<
+cholmod_transpose.oo: ../Core/cholmod_transpose.c ../Core/t_cholmod_transpose.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_band.o: ../Core/cholmod_band.c
 	$(C) -c $(I) $<
+cholmod_band.oo: ../Core/cholmod_band.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_copy.o: ../Core/cholmod_copy.c
 	$(C) -c $(I) $<
+cholmod_copy.oo: ../Core/cholmod_copy.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_triplet.o: ../Core/cholmod_triplet.c ../Core/t_cholmod_triplet.c
 	$(C) -c $(I) $<
+cholmod_triplet.oo: ../Core/cholmod_triplet.c ../Core/t_cholmod_triplet.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_error.o: ../Core/cholmod_error.c
 	$(C) -c $(I) $<
+cholmod_error.oo: ../Core/cholmod_error.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_aat.o: ../Core/cholmod_aat.c
 	$(C) -c $(I) $<
+cholmod_aat.oo: ../Core/cholmod_aat.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_add.o: ../Core/cholmod_add.c
 	$(C) -c $(I) $<
+cholmod_add.oo: ../Core/cholmod_add.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_common.o: ../Core/cholmod_common.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_common.oo: ../Core/cholmod_common.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_dense.o: ../Core/cholmod_dense.c ../Core/t_cholmod_dense.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_dense.oo: ../Core/cholmod_dense.c ../Core/t_cholmod_dense.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_factor.o: ../Core/cholmod_factor.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_factor.oo: ../Core/cholmod_factor.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_change_factor.o: ../Core/cholmod_change_factor.c \
 	../Core/t_cholmod_change_factor.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_change_factor.oo: ../Core/cholmod_change_factor.c \
+	../Core/t_cholmod_change_factor.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_memory.o: ../Core/cholmod_memory.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_memory.oo: ../Core/cholmod_memory.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_sparse.o: ../Core/cholmod_sparse.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_sparse.oo: ../Core/cholmod_sparse.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_complex.o: ../Core/cholmod_complex.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_complex.oo: ../Core/cholmod_complex.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_transpose.o: ../Core/cholmod_transpose.c ../Core/t_cholmod_transpose.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_transpose.oo: ../Core/cholmod_transpose.c ../Core/t_cholmod_transpose.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_band.o: ../Core/cholmod_band.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_band.oo: ../Core/cholmod_band.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_copy.o: ../Core/cholmod_copy.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_copy.oo: ../Core/cholmod_copy.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_triplet.o: ../Core/cholmod_triplet.c ../Core/t_cholmod_triplet.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_triplet.oo: ../Core/cholmod_triplet.c ../Core/t_cholmod_triplet.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_error.o: ../Core/cholmod_error.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_error.oo: ../Core/cholmod_error.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_aat.o: ../Core/cholmod_aat.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_aat.oo: ../Core/cholmod_aat.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_add.o: ../Core/cholmod_add.c
 	$(C) -DDLONG -c $(I) $< -o $@
-
+cholmod_l_add.oo: ../Core/cholmod_add.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 # Cholesky Module:
@@ -243,79 +339,129 @@ cholmod_l_add.o: ../Core/cholmod_add.c
 
 cholmod_amd.o: ../Cholesky/cholmod_amd.c
 	$(C) -c $(I) $<
+cholmod_amd.oo: ../Cholesky/cholmod_amd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_analyze.o: ../Cholesky/cholmod_analyze.c
 	$(C) -c $(I) $<
+cholmod_analyze.oo: ../Cholesky/cholmod_analyze.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_colamd.o: ../Cholesky/cholmod_colamd.c
 	$(C) -c $(I) $<
+cholmod_colamd.oo: ../Cholesky/cholmod_colamd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_etree.o: ../Cholesky/cholmod_etree.c
 	$(C) -c $(I) $<
+cholmod_etree.oo: ../Cholesky/cholmod_etree.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_factorize.o: ../Cholesky/cholmod_factorize.c
 	$(C) -c $(I) $<
+cholmod_factorize.oo: ../Cholesky/cholmod_factorize.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_postorder.o: ../Cholesky/cholmod_postorder.c
 	$(C) -c $(I) $<
+cholmod_postorder.oo: ../Cholesky/cholmod_postorder.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_rcond.o: ../Cholesky/cholmod_rcond.c
 	$(C) -c $(I) $<
+cholmod_rcond.oo: ../Cholesky/cholmod_rcond.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_resymbol.o: ../Cholesky/cholmod_resymbol.c
 	$(C) -c $(I) $<
+cholmod_resymbol.oo: ../Cholesky/cholmod_resymbol.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_rowcolcounts.o: ../Cholesky/cholmod_rowcolcounts.c
 	$(C) -c $(I) $<
+cholmod_rowcolcounts.oo: ../Cholesky/cholmod_rowcolcounts.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_solve.o: ../Cholesky/cholmod_solve.c ../Cholesky/t_cholmod_lsolve.c \
 	../Cholesky/t_cholmod_ltsolve.c ../Cholesky/t_cholmod_solve.c
 	$(C) -c $(I) $<
+cholmod_solve.oo: ../Cholesky/cholmod_solve.c ../Cholesky/t_cholmod_lsolve.c \
+	../Cholesky/t_cholmod_ltsolve.c ../Cholesky/t_cholmod_solve.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_spsolve.o: ../Cholesky/cholmod_spsolve.c
 	$(C) -c $(I) $<
+cholmod_spsolve.oo: ../Cholesky/cholmod_spsolve.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_rowfac.o: ../Cholesky/cholmod_rowfac.c ../Cholesky/t_cholmod_rowfac.c
 	$(C) -c $(I) $<
+cholmod_rowfac.oo: ../Cholesky/cholmod_rowfac.c ../Cholesky/t_cholmod_rowfac.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_amd.o: ../Cholesky/cholmod_amd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_amd.oo: ../Cholesky/cholmod_amd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_analyze.o: ../Cholesky/cholmod_analyze.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_analyze.oo: ../Cholesky/cholmod_analyze.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_colamd.o: ../Cholesky/cholmod_colamd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_colamd.oo: ../Cholesky/cholmod_colamd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_etree.o: ../Cholesky/cholmod_etree.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_etree.oo: ../Cholesky/cholmod_etree.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_factorize.o: ../Cholesky/cholmod_factorize.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_factorize.oo: ../Cholesky/cholmod_factorize.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_postorder.o: ../Cholesky/cholmod_postorder.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_postorder.oo: ../Cholesky/cholmod_postorder.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_rcond.o: ../Cholesky/cholmod_rcond.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_rcond.oo: ../Cholesky/cholmod_rcond.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_resymbol.o: ../Cholesky/cholmod_resymbol.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_resymbol.oo: ../Cholesky/cholmod_resymbol.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_rowcolcounts.o: ../Cholesky/cholmod_rowcolcounts.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_rowcolcounts.oo: ../Cholesky/cholmod_rowcolcounts.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_solve.o: ../Cholesky/cholmod_solve.c ../Cholesky/t_cholmod_lsolve.c \
 	../Cholesky/t_cholmod_ltsolve.c ../Cholesky/t_cholmod_solve.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_solve.oo: ../Cholesky/cholmod_solve.c ../Cholesky/t_cholmod_lsolve.c \
+	../Cholesky/t_cholmod_ltsolve.c ../Cholesky/t_cholmod_solve.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_spsolve.o: ../Cholesky/cholmod_spsolve.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_spsolve.oo: ../Cholesky/cholmod_spsolve.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_rowfac.o: ../Cholesky/cholmod_rowfac.c ../Cholesky/t_cholmod_rowfac.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_rowfac.oo: ../Cholesky/cholmod_rowfac.c ../Cholesky/t_cholmod_rowfac.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 # Partition Module:
@@ -323,35 +469,55 @@ cholmod_l_rowfac.o: ../Cholesky/cholmod_
 
 cholmod_ccolamd.o: ../Partition/cholmod_ccolamd.c
 	$(C) -c $(I) $<
+cholmod_ccolamd.oo: ../Partition/cholmod_ccolamd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_csymamd.o: ../Partition/cholmod_csymamd.c
 	$(C) -c $(I) $<
+cholmod_csymamd.oo: ../Partition/cholmod_csymamd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_camd.o: ../Partition/cholmod_camd.c
 	$(C) -c $(I) $<
+cholmod_camd.oo: ../Partition/cholmod_camd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_metis.o: ../Partition/cholmod_metis.c
 	$(C) -c $(I) $<
+cholmod_metis.oo: ../Partition/cholmod_metis.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_nesdis.o: ../Partition/cholmod_nesdis.c
 	$(C) -c $(I) $<
+cholmod_nesdis.oo: ../Partition/cholmod_nesdis.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_ccolamd.o: ../Partition/cholmod_ccolamd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_ccolamd.oo: ../Partition/cholmod_ccolamd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_csymamd.o: ../Partition/cholmod_csymamd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_csymamd.oo: ../Partition/cholmod_csymamd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_camd.o: ../Partition/cholmod_camd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_camd.oo: ../Partition/cholmod_camd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_metis.o: ../Partition/cholmod_metis.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_metis.oo: ../Partition/cholmod_metis.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_nesdis.o: ../Partition/cholmod_nesdis.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_nesdis.oo: ../Partition/cholmod_nesdis.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 
 #-------------------------------------------------------------------------------
@@ -360,61 +526,99 @@ cholmod_l_nesdis.o: ../Partition/cholmod
 
 cholmod_horzcat.o: ../MatrixOps/cholmod_horzcat.c
 	$(C) -c $(I) $<
+cholmod_horzcat.oo: ../MatrixOps/cholmod_horzcat.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_norm.o: ../MatrixOps/cholmod_norm.c
 	$(C) -c $(I) $<
+cholmod_norm.oo: ../MatrixOps/cholmod_norm.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_scale.o: ../MatrixOps/cholmod_scale.c
 	$(C) -c $(I) $<
+cholmod_scale.oo: ../MatrixOps/cholmod_scale.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_drop.o: ../MatrixOps/cholmod_drop.c
 	$(C) -c $(I) $<
+cholmod_drop.oo: ../MatrixOps/cholmod_drop.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_sdmult.o: ../MatrixOps/cholmod_sdmult.c \
 	../MatrixOps/t_cholmod_sdmult.c
 	$(C) -c $(I) $<
+cholmod_sdmult.oo: ../MatrixOps/cholmod_sdmult.c \
+	../MatrixOps/t_cholmod_sdmult.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_ssmult.o: ../MatrixOps/cholmod_ssmult.c
 	$(C) -c $(I) $<
+cholmod_ssmult.oo: ../MatrixOps/cholmod_ssmult.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_submatrix.o: ../MatrixOps/cholmod_submatrix.c
 	$(C) -c $(I) $<
+cholmod_submatrix.oo: ../MatrixOps/cholmod_submatrix.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_vertcat.o: ../MatrixOps/cholmod_vertcat.c
 	$(C) -c $(I) $<
+cholmod_vertcat.oo: ../MatrixOps/cholmod_vertcat.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_symmetry.o: ../MatrixOps/cholmod_symmetry.c
 	$(C) -c $(I) $<
+cholmod_symmetry.oo: ../MatrixOps/cholmod_symmetry.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_horzcat.o: ../MatrixOps/cholmod_horzcat.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_horzcat.oo: ../MatrixOps/cholmod_horzcat.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_norm.o: ../MatrixOps/cholmod_norm.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_norm.oo: ../MatrixOps/cholmod_norm.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_scale.o: ../MatrixOps/cholmod_scale.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_scale.oo: ../MatrixOps/cholmod_scale.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_drop.o: ../MatrixOps/cholmod_drop.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_drop.oo: ../MatrixOps/cholmod_drop.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_sdmult.o: ../MatrixOps/cholmod_sdmult.c \
 	../MatrixOps/t_cholmod_sdmult.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_sdmult.oo: ../MatrixOps/cholmod_sdmult.c \
+	../MatrixOps/t_cholmod_sdmult.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_ssmult.o: ../MatrixOps/cholmod_ssmult.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_ssmult.oo: ../MatrixOps/cholmod_ssmult.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_submatrix.o: ../MatrixOps/cholmod_submatrix.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_submatrix.oo: ../MatrixOps/cholmod_submatrix.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_vertcat.o: ../MatrixOps/cholmod_vertcat.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_vertcat.oo: ../MatrixOps/cholmod_vertcat.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_symmetry.o: ../MatrixOps/cholmod_symmetry.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_symmetry.oo: ../MatrixOps/cholmod_symmetry.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 # Modify Module:
@@ -422,25 +626,39 @@ cholmod_l_symmetry.o: ../MatrixOps/cholm
 
 cholmod_rowadd.o: ../Modify/cholmod_rowadd.c
 	$(C) -c $(I) $<
+cholmod_rowadd.oo: ../Modify/cholmod_rowadd.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_rowdel.o: ../Modify/cholmod_rowdel.c
 	$(C) -c $(I) $<
+cholmod_rowdel.oo: ../Modify/cholmod_rowdel.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_updown.o: ../Modify/cholmod_updown.c \
 	../Modify/t_cholmod_updown.c ../Modify/t_cholmod_updown_numkr.c
 	$(C) -c $(I) $<
+cholmod_updown.oo: ../Modify/cholmod_updown.c \
+	../Modify/t_cholmod_updown.c ../Modify/t_cholmod_updown_numkr.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_rowadd.o: ../Modify/cholmod_rowadd.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_rowadd.oo: ../Modify/cholmod_rowadd.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_rowdel.o: ../Modify/cholmod_rowdel.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_rowdel.oo: ../Modify/cholmod_rowdel.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_updown.o: ../Modify/cholmod_updown.c \
 	../Modify/t_cholmod_updown.c ../Modify/t_cholmod_updown_numkr.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_updown.oo: ../Modify/cholmod_updown.c \
+	../Modify/t_cholmod_updown.c ../Modify/t_cholmod_updown_numkr.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 
 #-------------------------------------------------------------------------------
@@ -450,23 +668,39 @@ cholmod_l_updown.o: ../Modify/cholmod_up
 cholmod_super_numeric.o: ../Supernodal/cholmod_super_numeric.c \
 	../Supernodal/t_cholmod_super_numeric.c
 	$(C) -c $(I) $<
+cholmod_super_numeric.oo: ../Supernodal/cholmod_super_numeric.c \
+	../Supernodal/t_cholmod_super_numeric.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_super_symbolic.o: ../Supernodal/cholmod_super_symbolic.c
 	$(C) -c $(I) $<
+cholmod_super_symbolic.oo: ../Supernodal/cholmod_super_symbolic.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 cholmod_super_solve.o: ../Supernodal/cholmod_super_solve.c \
 	../Supernodal/t_cholmod_super_solve.c
 	$(C) -c $(I) $<
+cholmod_super_solve.oo: ../Supernodal/cholmod_super_solve.c \
+	../Supernodal/t_cholmod_super_solve.c
+	$(C) -fPIC -c $(I) $< -o $@
 
 #-------------------------------------------------------------------------------
 
 cholmod_l_super_numeric.o: ../Supernodal/cholmod_super_numeric.c \
 	../Supernodal/t_cholmod_super_numeric.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_super_numeric.oo: ../Supernodal/cholmod_super_numeric.c \
+	../Supernodal/t_cholmod_super_numeric.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_super_symbolic.o: ../Supernodal/cholmod_super_symbolic.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_super_symbolic.oo: ../Supernodal/cholmod_super_symbolic.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
 
 cholmod_l_super_solve.o: ../Supernodal/cholmod_super_solve.c \
 	../Supernodal/t_cholmod_super_solve.c
 	$(C) -DDLONG -c $(I) $< -o $@
+cholmod_l_super_solve.oo: ../Supernodal/cholmod_super_solve.c \
+	../Supernodal/t_cholmod_super_solve.c
+	$(C) -fPIC -DDLONG -c $(I) $< -o $@
Index: SuiteSparse/UFconfig/UFconfig.mk
===================================================================
--- SuiteSparse.orig/UFconfig/UFconfig.mk
+++ SuiteSparse/UFconfig/UFconfig.mk
@@ -122,8 +122,8 @@ XERBLA = 
 # The path is relative to where it is used, in CHOLMOD/Lib, CHOLMOD/MATLAB, etc.
 # You may wish to use an absolute path.  METIS is optional.  Compile
 # CHOLMOD with -DNPARTITION if you do not wish to use METIS.
-METIS_PATH = ../../metis-4.0
-METIS = ../../metis-4.0/libmetis.a
+METIS_PATH = /usr/include/metis
+METIS = /usr/lib/libmetis.so
 
 # If you use CHOLMOD_CONFIG = -DNPARTITION then you must use the following
 # options:
@@ -220,7 +220,7 @@ RTLIB =
 
 # Using default compilers:
 # CC = gcc
-CFLAGS = -O3 -fexceptions
+CFLAGS = $(SYSTEM_CFLAGS)
 
 # alternatives:
 # CFLAGS = -g -fexceptions \
