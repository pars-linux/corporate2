Index: packages/system/devel/catbox/pspec.xml
===================================================================
--- packages.orig/system/devel/catbox/pspec.xml
+++ packages/system/devel/catbox/pspec.xml
@@ -12,10 +12,7 @@
         <IsA>library</IsA>
         <Summary>Python sandboxing module</Summary>
         <Description>catbox is a Python sandboxing module commonly used by the package management system of Pardus, PiSi.</Description>
-        <Archive sha1sum="23b22e77669a9eff75654d10c0f20753f69795cf" type="targz">http://cekirdek.pardus.org.tr/~gurer/pisi/catbox-1.1.tar.gz</Archive>
-        <Patches>
-            <Patch>kernel_build.patch</Patch>
-        </Patches>
+        <Archive sha1sum="f6ae6f9f2134a98b6261aba531a92f75afdbc2a6" type="targz">http://cekirdek.pardus.org.tr/~gurer/pisi/catbox-1.2.tar.gz</Archive>
     </Source>
 
     <Package>
@@ -27,6 +24,13 @@
     </Package>
 
     <History>
+        <Update release="6">
+            <Date>2010-02-19</Date>
+            <Version>1.2</Version>
+            <Comment>New stable release</Comment>
+            <Name>Fatih Aşıcı</Name>
+            <Email>fatih@pardus.org.tr</Email>
+        </Update>
         <Update release="5">
             <Date>2008-10-27</Date>
             <Version>1.1</Version>
Index: packages/system/devel/catbox/files/kernel_build.patch
===================================================================
--- packages.orig/system/devel/catbox/files/kernel_build.patch
+++ /dev/null
@@ -1,21 +0,0 @@
-Index: src/syscall.c
-===================================================================
---- src/syscall.c	(revision 20477)
-+++ src/syscall.c	(revision 20478)
-@@ -96,6 +96,16 @@
- 		mkdir_case = strcmp("mkdir", name) == 0;
- 		ret = path_writable(ctx->pathlist, canonical, mkdir_case);
- 		if (ret == 0) {
-+			if (strcmp("open", name) == 0) {
-+				// Special case for kernel build
-+				unsigned int flags;
-+				struct stat st;
-+				flags = ptrace(PTRACE_PEEKUSER, pid, 4, 0);
-+				if ((flags & O_CREAT) == 0 && stat(canonical, &st) == -1 && errno == ENOENT) {
-+					free(canonical);
-+					return ENOENT;
-+				}
-+			}
- 			catbox_retval_add_violation(ctx, name, path, canonical);
- 			err = -EACCES;
- 		} else if (ret == -1) {
