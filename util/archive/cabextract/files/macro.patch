diff -up cabextract-1.2/mspack/qtmd.c.macro cabextract-1.2/mspack/qtmd.c
--- cabextract-1.2/mspack/qtmd.c.macro	2006-09-21 01:13:14.000000000 +0200
+++ cabextract-1.2/mspack/qtmd.c	2008-02-11 15:53:19.000000000 +0100
@@ -89,7 +89,7 @@
 } while (0)
 
 static int qtmd_read_input(struct qtmd_stream *qtm) {
-  int read = qtm->sys->read(qtm->input, &qtm->inbuf[0], (int)qtm->inbuf_size);
+  int read = (qtm->sys->read)(qtm->input, &qtm->inbuf[0], (int)qtm->inbuf_size);
   if (read < 0) return qtm->error = MSPACK_ERR_READ;
 
   qtm->i_ptr = &qtm->inbuf[0];
diff -up cabextract-1.2/mspack/cabd.c.macro cabextract-1.2/mspack/cabd.c
--- cabextract-1.2/mspack/cabd.c.macro	2006-09-21 01:13:14.000000000 +0200
+++ cabextract-1.2/mspack/cabd.c	2008-02-11 15:53:19.000000000 +0100
@@ -340,7 +340,7 @@ static int cabd_read_headers(struct mspa
   }
 
   /* read in the CFHEADER */
-  if (sys->read(fh, &buf[0], cfhead_SIZEOF) != cfhead_SIZEOF) {
+  if ((sys->read)(fh, &buf[0], cfhead_SIZEOF) != cfhead_SIZEOF) {
     return MSPACK_ERR_READ;
   }
 
@@ -376,7 +376,7 @@ static int cabd_read_headers(struct mspa
   /* read the reserved-sizes part of header, if present */
   cab->base.flags = EndGetI16(&buf[cfhead_Flags]);
   if (cab->base.flags & cfheadRESERVE_PRESENT) {
-    if (sys->read(fh, &buf[0], cfheadext_SIZEOF) != cfheadext_SIZEOF) {
+    if ((sys->read)(fh, &buf[0], cfheadext_SIZEOF) != cfheadext_SIZEOF) {
       return MSPACK_ERR_READ;
     }
     cab->base.header_resv = EndGetI16(&buf[cfheadext_HeaderReserved]);
@@ -414,7 +414,7 @@ static int cabd_read_headers(struct mspa
 
   /* read folders */
   for (i = 0; i < num_folders; i++) {
-    if (sys->read(fh, &buf[0], cffold_SIZEOF) != cffold_SIZEOF) {
+    if ((sys->read)(fh, &buf[0], cffold_SIZEOF) != cffold_SIZEOF) {
       return MSPACK_ERR_READ;
     }
     if (folder_resv) {
@@ -444,7 +444,7 @@ static int cabd_read_headers(struct mspa
 
   /* read files */
   for (i = 0; i < num_files; i++) {
-    if (sys->read(fh, &buf[0], cffile_SIZEOF) != cffile_SIZEOF) {
+    if ((sys->read)(fh, &buf[0], cffile_SIZEOF) != cffile_SIZEOF) {
       return MSPACK_ERR_READ;
     }
 
@@ -537,7 +537,7 @@ static char *cabd_read_string(struct msp
   unsigned int len, i, ok;
 
   /* read up to 256 bytes */
-  len = sys->read(fh, &buf[0], 256);
+  len = (sys->read)(fh, &buf[0], 256);
 
   /* search for a null terminator in the buffer */
   for (i = 0, ok = 0; i < len; i++) if (!buf[i]) { ok = 1; break; }
@@ -1240,7 +1240,7 @@ static int cabd_sys_read_block(struct ms
 
   do {
     /* read the block header */
-    if (sys->read(d->infh, &hdr[0], cfdata_SIZEOF) != cfdata_SIZEOF) {
+    if ((sys->read)(d->infh, &hdr[0], cfdata_SIZEOF) != cfdata_SIZEOF) {
       return MSPACK_ERR_READ;
     }
 
@@ -1266,7 +1266,7 @@ static int cabd_sys_read_block(struct ms
     }
 
     /* read the block data */
-    if (sys->read(d->infh, d->i_end, len) != len) {
+    if ((sys->read)(d->infh, d->i_end, len) != len) {
       return MSPACK_ERR_READ;
     }
 
@@ -1380,7 +1380,7 @@ static int noned_decompress(struct noned
   int run;
   while (bytes > 0) {
     run = (bytes > s->bufsize) ? s->bufsize : (int) bytes;
-    if (s->sys->read(s->i, &s->buf[0], run) != run) return MSPACK_ERR_READ;
+    if ((s->sys->read)(s->i, &s->buf[0], run) != run) return MSPACK_ERR_READ;
     if (s->sys->write(s->o, &s->buf[0], run) != run) return MSPACK_ERR_WRITE;
     bytes -= run;
   }
diff -up cabextract-1.2/mspack/mszipd.c.macro cabextract-1.2/mspack/mszipd.c
--- cabextract-1.2/mspack/mszipd.c.macro	2006-09-21 01:13:14.000000000 +0200
+++ cabextract-1.2/mspack/mszipd.c	2008-02-11 15:53:19.000000000 +0100
@@ -89,7 +89,7 @@ static const unsigned short bit_mask[17]
 } while (0)
 
 static int zipd_read_input(struct mszipd_stream *zip) {
-  int read = zip->sys->read(zip->input, &zip->inbuf[0], (int)zip->inbuf_size);
+  int read = (zip->sys->read)(zip->input, &zip->inbuf[0], (int)zip->inbuf_size);
   if (read < 0) return zip->error = MSPACK_ERR_READ;
   zip->i_ptr = &zip->inbuf[0];
   zip->i_end = &zip->inbuf[read];
diff -up cabextract-1.2/mspack/lzxd.c.macro cabextract-1.2/mspack/lzxd.c
--- cabextract-1.2/mspack/lzxd.c.macro	2006-09-21 01:13:14.000000000 +0200
+++ cabextract-1.2/mspack/lzxd.c	2008-02-11 15:53:19.000000000 +0100
@@ -133,7 +133,7 @@
 } while (0)
 
 static int lzxd_read_input(struct lzxd_stream *lzx) {
-  int read = lzx->sys->read(lzx->input, &lzx->inbuf[0], (int)lzx->inbuf_size);
+  int read = (lzx->sys->read)(lzx->input, &lzx->inbuf[0], (int)lzx->inbuf_size);
   if (read < 0) return lzx->error = MSPACK_ERR_READ;
 
   /* huff decode's ENSURE_BYTES(16) might overrun the input stream, even
