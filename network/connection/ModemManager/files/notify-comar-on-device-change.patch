Index: ModemManager-20090723/src/mm-manager.c
===================================================================
--- ModemManager-20090723.orig/src/mm-manager.c
+++ ModemManager-20090723/src/mm-manager.c
@@ -165,9 +165,25 @@ remove_modem (MMManager *manager, MMMode
 {
     MMManagerPrivate *priv = MM_MANAGER_GET_PRIVATE (manager);
     char *device;
+    char *hav_cmd;
+    char **udev_devpath;
+    int exit_status;
 
     device = mm_modem_get_device (modem);
     g_assert (device);
+
+    /* Notify COMAR */
+    udev_devpath = g_strsplit(device, "/sys", 2);
+    if (g_strv_length(udev_devpath) == 2) {
+        /* Correctly splitted */
+        hav_cmd = g_strconcat("/usr/bin/hav call ModemManager Network.Link kernelEvent \"remove@", udev_devpath[1], "\"", NULL);
+        g_debug("Running %s to notify COMAR", hav_cmd);
+        g_spawn_command_line_sync(hav_cmd, NULL, NULL, &exit_status, NULL);
+        g_free(hav_cmd);
+    }
+
+    g_strfreev(udev_devpath);
+
     g_debug ("Removed modem %s", device);
 
     g_signal_emit (manager, signals[DEVICE_REMOVED], 0, modem);
@@ -182,6 +198,9 @@ modem_valid (MMModem *modem, GParamSpec 
     MMManagerPrivate *priv = MM_MANAGER_GET_PRIVATE (manager);
     static guint32 id = 0;
     char *path, *device;
+    char *hav_cmd;
+    char **udev_devpath;
+    int exit_status;
 
     if (mm_modem_get_valid (modem)) {
         path = g_strdup_printf (MM_DBUS_PATH"/Modems/%d", id++);
@@ -190,6 +209,19 @@ modem_valid (MMModem *modem, GParamSpec 
 
         device = mm_modem_get_device (modem);
         g_assert (device);
+
+        /* Notify COMAR */
+        udev_devpath = g_strsplit(device, "/sys", 2);
+        if (g_strv_length(udev_devpath) == 2) {
+            /* Correctly splitted */
+            hav_cmd = g_strconcat("/usr/bin/hav call ModemManager Network.Link kernelEvent \"add@", udev_devpath[1], "\"", NULL);
+            g_debug("Running '%s' to notify COMAR", hav_cmd);
+            g_spawn_command_line_sync(hav_cmd, NULL, NULL, &exit_status, NULL);
+            g_free(hav_cmd);
+        }
+
+        g_strfreev(udev_devpath);
+
         g_debug ("Exported modem %s as %s", device, path);
         g_free (device);
 
