--- src/mixxx.pro.orig	2004-10-07 23:50:03.207054925 -0700
+++ src/mixxx.pro	2004-10-07 23:51:45.553399829 -0700
@@ -31,23 +31,7 @@
 DEFINES += __PORTAUDIO__
 SOURCES += playerportaudio.cpp
 HEADERS += playerportaudio.h
-PORTAUDIO_DIR = ../lib/portaudio-v18
-INCLUDEPATH += $$PORTAUDIO_DIR/pa_common
-HEADERS += $$PORTAUDIO_DIR/pa_common/portaudio.h
-unix {
-SOURCES += $$PORTAUDIO_DIR/pa_common/pa_lib.c $$PORTAUDIO_DIR/pa_common/pa_convert.c
-HEADERS += $$PORTAUDIO_DIR/pa_common/pa_host.h
-unix:!macx:SOURCES += $$PORTAUDIO_DIR/pablio/ringbuffer.c $$PORTAUDIO_DIR/pa_unix_oss/pa_unix.c $$PORTAUDIO_DIR/pa_unix_oss/pa_unix_oss.c
-unix:!macx:HEADERS += $$PORTAUDIO_DIR/pablio/ringbuffer.h $$PORTAUDIO_DIR/pa_unix_oss/pa_unix.h
-unix:!macx:INCLUDEPATH += $$PORTAUDIO_DIR/pa_unix_oss
-macx:SOURCES += $$PORTAUDIO_DIR/pablio/ringbuffer.c $$PORTAUDIO_DIR/pa_mac_core/pa_mac_core.c
-macx:LIBS += -framework CoreAudio -framework AudioToolbox
-macx:INCLUDEPATH += $$PORTAUDIO_DIR/pa_mac_core $$PORTAUDIO_DIR/pablio 
-}
-win32 {
-    message("Compiling with PortAudio/WMME drivers")
-    LIBS += winmm.lib PAStaticWMME.lib
-}
+LIBS += -lportaudio
 
 # RTAudio (Windows DirectSound)
 win32 {
@@ -111,8 +95,6 @@
 CONFIG += opengl
 
 # MP3
-win32:LIBS += libmad-release.lib libid3tag-release.lib
-macx:LIBS += $$MACLIBPATH/lib/libmad.a $$MACLIBPATH/lib/libid3tag.a
 
 # MP3 vbrheadersdk from Xing Technology
 INCLUDEPATH += ../lib/vbrheadersdk
@@ -128,10 +110,12 @@
 macx:HEADERS += soundsourceaudiofile.h
 macx:DEFINES += __AUDIOFILE__
 macx:LIBS += $$MACLIBPATH/lib/libaudiofile.a
+unix:LIBS += -lsndfile
 
 # Ogg Vorbis
 win32:LIBS += vorbisfile_static.lib vorbis_static.lib ogg_static.lib
 macx:LIBS += $$MACLIBPATH/lib/libvorbis.a $$MACLIBPATH/lib/libvorbisfile.a $$MACLIBPATH/lib/libogg.a
+unix:LIBS += -lvorbis
 
 # PowerMate
 SOURCES += powermate.cpp
@@ -155,9 +139,9 @@
 INCLUDEPATH += $$KISSFFT_DIR
 
 # Audio scaling
-INCLUDEPATH += ../lib/libsamplerate
-SOURCES += enginebufferscalesrc.cpp ../lib/libsamplerate/samplerate.c ../lib/libsamplerate/src_linear.c ../lib/libsamplerate/src_sinc.c ../lib/libsamplerate/src_zoh.c
-HEADERS += enginebufferscalesrc.h ../lib/libsamplerate/samplerate.h ../lib/libsamplerate/config.h ../lib/libsamplerate/common.h ../lib/libsamplerate/float_cast.h ../lib/libsamplerate/fastest_coeffs.h ../lib/libsamplerate/high_qual_coeffs.h ../lib/libsamplerate/mid_qual_coeffs.h
+SOURCES += enginebufferscalesrc.cpp
+HEADERS += enginebufferscalesrc.h
+LIBS += -lsamplerate
 
 # Debug plotting through gplot API
 #unix:DEFINES += __GNUPLOT__
@@ -184,7 +168,7 @@
   isEmpty( PREFIX ) {
     PREFIX = /usr
   }
-  UNIX_SHARE_PATH = $${PREFIX}/share/mixxx
+  UNIX_SHARE_PATH = /usr/share/mixxx
   DEFINES += UNIX_SHARE_PATH=\"$$UNIX_SHARE_PATH\"
 
   SETTINGS_FILE = \".mixxx.cfg\"
@@ -252,19 +236,19 @@
    keyb.files = keyboard/*
 
     # doc files...
-   readme.path = $${PREFIX}/share/doc/mixxx-1.3
+   readme.path = /usr/share/doc/mixxx-1.3
    readme.files = ../README
-   licence.path = $${PREFIX}/share/doc/mixxx-1.3
+   licence.path = /usr/share/doc/mixxx-1.3
    licence.files = ../LICENSE
-   copying.path = $${PREFIX}/share/doc/mixxx-1.3
+   copying.path = /usr/share/doc/mixxx-1.3
    copying.files = ../COPYING
-   manual.path = $${PREFIX}/share/doc/mixxx-1.3
+   manual.path = /usr/share/doc/mixxx-1.3
    manual.files = ../Mixxx-Manual.pdf
 
 
     # binary...
    TARGET = mixxx
-   target.path = $${PREFIX}/bin
+   target.path = /usr/bin
 
     # finally adding what we wanna install...
    INSTALLS += skino skinoc skinos skint midi keyb readme licence copying manual target
