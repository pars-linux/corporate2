--- a/systemv/hal_lpadmin	2009-07-16 09:15:54.000000000 +0300
+++ b/systemv/hal_lpadmin	2009-07-16 12:58:43.000000000 +0300
@@ -601,9 +601,13 @@
         def wait_child (sig, stack):
             (pid, status) = os.wait ()
 
-        signal.signal (signal.SIGCHLD, wait_child)
+        #signal.signal (signal.SIGCHLD, wait_child)
         pid = os.fork ()
-        if pid == 0:
+        if pid > 0:
+            # Parent
+            (p, s) = os.wait()
+
+        elif pid == 0:
             # Child.
             if fax_exists == 0:
                 # really new fax printer
@@ -658,6 +662,7 @@
                                 res = re.search ("(\d+)", line)
                                 if res:
                                     resg = res.groups()
+                                    # plugin_needed==1 if the printer needs one
                                     plugin_needed = int(resg[0])
                             elif line.find ("HP Linux Imaging and Printing") >= 0:
                                 res = re.search ("(\d+\.\d+\.\d+\w*)", line)
@@ -665,27 +670,17 @@
                                     resg = res.groups()
                                     hplip_version = resg[0]
                             if plugin_needed >= 0:
+                                # A plugin is needed
                                 break
                         if plugin_needed > 0 and hplip_version:
                             # Check whether the plugin is already installed
-                            if glob.glob("/usr/share/hplip/data/plugin/*%s*plugin*" %
-                                         hplip_version):
-                                if hplip_version.startswith("2"):
-                                    try:
-                                        f = open('/etc/hp/hplip.conf', 'r')
-                                        for line in f:
-                                            if line.strip ().startswith("plugin") and \
-                                                    line.strip ().endswith("1"):
-                                                f.close()
-                                                plugin_needed = 0
-                                                f.close()
-                                    except:
-                                        pass
-                                else:
-                                    plugin_needed = 0
-                if uri:# and plugin_needed <= 0:
-                    # No HPLIP supported printer or no plugin needed, try to
-                    # find a driver and set up the print queue
+                            if glob.glob("/usr/share/hplip/data/firmware/%s*" %
+                                         self.model.lower().replace(" ", "_")):
+                                # A plugin is needed and it's already installed
+                                plugin_needed = 2
+
+                if uri:
+                    # try to find a driver and set up the print queue
                     if ppds == None:
                         cupsppds = self.cups_connection.getPPDs ()
                         ppds = cupshelpers.ppds.PPDs (cupsppds)
@@ -699,13 +694,29 @@
                                                      self.commandsets,
                                                      uri)
                     syslog (LOG_DEBUG, "PPD: %s; Status: %d" % (ppdname, status))
-                    if plugin_needed > 0:
-                        syslog (LOG_INFO, "Printer %s requires HPLIP plugin, adding it anyway" % self.name)
+
+                    if plugin_needed == 1:
+                        # A plugin is needed and it's not installed
+                        syslog (LOG_INFO, "Printer %s requires HPLIP plugin, but it's not installed" % self.name)
+
+                        if notification:
+                            try:
+                                syslog(LOG_INFO, "Calling dbus hede")
+                                notification.RequestFirmwareDownload(self.name)
+                            except dbus.DBusException, e:
+                                syslog(LOG_INFO, str(e.message))
+                                # What to do?
+                                plugin_needed = 0
+
+                    elif plugin_needed == 2:
+                        # A plugin is already installed
+                        syslog (LOG_INFO, "Printer %s requires HPLIP plugin which is already installed" % self.name)
 
                     info = "%s %s" % (self.make, self.model)
                     self.device = uri
 
                     if status == 0:
+                        # Correct match
                         self.cups_connection.addPrinter(self.name,
                                                         device=self.device,
                                                         ppdname=ppdname,
@@ -755,6 +766,17 @@
                 except dbus.DBusException:
                     pass
 
+            # Fork off the firmware loader which will spin until hal_lpadmin exits.
+            if plugin_needed == 2:
+                p = subprocess.Popen(["hp-firmware", "-n", "-y3",
+                    "-d%s" % uri],
+                    env=env,
+                    stdin=devnull,
+                    stdout=subprocess.PIPE,
+                    stderr=devnull).wait()
+
+                syslog (LOG_INFO, "hp-firmware for %s returned %d" % (self.model, p))
+
         elif pid == -1:
             pass # should handle error
 
