# Fix the Link detection in MacOS
# Author Alex Graf - agraf@suse 
Index: qemu-kvm-0.11.1/hw/rtl8139.c
===================================================================
--- qemu-kvm-0.11.1.orig/hw/rtl8139.c
+++ qemu-kvm-0.11.1/hw/rtl8139.c
@@ -422,6 +422,9 @@ static void RTL8139TallyCounters_load(QE
 /* Saves values of tally counters to VM state file */
 static void RTL8139TallyCounters_save(QEMUFile* f, RTL8139TallyCounters *tally_counters);
 
+static uint32_t rtl8139_io_readb(void *opaque, uint8_t addr);
+static uint32_t rtl8139_io_readw(void *opaque, uint8_t addr);
+
 typedef struct RTL8139State {
     uint8_t phys[8]; /* mac address */
     uint8_t mult[8]; /* multicast mask array */
@@ -462,6 +465,7 @@ typedef struct RTL8139State {
 
     uint16_t CpCmd;
     uint8_t  TxThresh;
+    enum NICLink link;
 
     PCIDevice *pci_dev;
     VLANClientState *vc;
@@ -1233,7 +1237,7 @@ static void rtl8139_reset(void *opaque)
     s->Config0 = 0x0; /* No boot ROM */
     s->Config1 = 0xC; /* IO mapped and MEM mapped registers available */
     s->Config3 = 0x1; /* fast back-to-back compatible */
-    s->Config5 = 0x0;
+    s->Config5 = Cfg5_LDPS;
 
     s->CSCR = CSCR_F_LINK_100 | CSCR_HEART_BIT | CSCR_LD;
 
@@ -1259,6 +1263,13 @@ static void rtl8139_reset(void *opaque)
     s->TimerInt = 0;
     s->TCTR_base = 0;
 
+    s->eeprom.contents[10] = s->Config0 | s->Config1 << 8;
+    s->eeprom.contents[6] = (rtl8139_io_readb(s, MediaStatus) & 0xc0) | ((rtl8139_io_readw(s, BasicModeCtrl) >> 8) & 0x23)
+                          | (s->Config3 << 8);
+    s->eeprom.contents[12] = s->Config4 << 8;
+
+    s->eeprom.contents[15] = s->Config5 << 8;
+
     /* reset tally counters */
     RTL8139TallyCounters_clear(&s->tally_counters);
 }
@@ -2856,7 +2867,7 @@ static uint32_t rtl8139_io_readb(void *o
             break;
 
         case MediaStatus:
-            ret = 0xd0;
+            ret = 0xd0 | ((s->link == Link_10mbps) << 3);
             DEBUG_PRINT(("RTL8139: MediaStatus read 0x%x\n", ret));
             break;
 
@@ -3478,6 +3489,15 @@ static void pci_rtl8139_init(PCIDevice *
     s->pci_dev = (PCIDevice *)d;
     qdev_get_macaddr(&dev->qdev, s->macaddr);
     qemu_register_reset(rtl8139_reset, s);
+    switch(nd->link) {
+        case Link_10mbps:
+        case Link_100mbps:
+            s->link = nd->link;
+            break;
+        default:
+            s->link = Link_100mbps;
+            break;
+    }
     rtl8139_reset(s);
     s->vc = qdev_get_vlan_client(&dev->qdev,
                                  rtl8139_can_receive, rtl8139_receive, NULL,
Index: qemu-kvm-0.11.1/net.h
===================================================================
--- qemu-kvm-0.11.1.orig/net.h
+++ qemu-kvm-0.11.1/net.h
@@ -99,6 +99,13 @@ enum {
 	NIC_NVECTORS_UNSPECIFIED = -1
 };
 
+enum NICLink {
+    Link_default,
+    Link_10mbps,
+    Link_100mbps,
+    Link_1000mbps,
+};
+
 struct NICInfo {
     uint8_t macaddr[6];
     const char *model;
@@ -109,6 +116,7 @@ struct NICInfo {
     VLANClientState *vc;
     void *private;
     int used;
+    enum NICLink link;
     int bootable;
     int nvectors;
 };
Index: qemu-kvm-0.11.1/net.c
===================================================================
--- qemu-kvm-0.11.1.orig/net.c
+++ qemu-kvm-0.11.1/net.c
@@ -2668,6 +2668,7 @@ int net_client_init(Monitor *mon, const 
         }
         nd->vlan = vlan;
         nd->name = name;
+        nd->link = Link_default;
         nd->used = 1;
         name = NULL;
         nb_nics++;
